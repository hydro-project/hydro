---
source: hydroflow/tests/surface_codegen.rs
expression: hydroflow.serde_graph().unwrap().to_mermaid()
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#02f,color:#fff,stroke:#000
classDef pushClass fill:#ff0,stroke:#000
linkStyle default stroke:#aaa,stroke-width:4px,color:red,font-size:1.5em;
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    1v1[\"(1v1) <tt>source_stream(contacts_recv)</tt>"/]:::pullClass
    2v1[\"(2v1) <tt>flat_map(|(pid_a, pid_b, time)| [(pid_a, (pid_b, time)), (pid_b, (pid_a, time))])</tt>"/]:::pullClass
    4v1[\"(4v1) <tt>source_stream(diagnosed_recv)</tt>"/]:::pullClass
    9v1[\"(9v1) <tt>map(|(pid, t)| (pid, (t, t + TRANSMISSIBLE_DURATION)))</tt>"/]:::pullClass
    3v1[\"(3v1) <tt>merge()</tt>"/]:::pullClass
    5v1[\"(5v1) <tt>join()</tt>"/]:::pullClass
    6v1[\"(6v1) <tt>filter(|(_pid_a, ((_pid_b, t_contact), (t_from, t_to)))| {(t_from..=t_to).contains(&amp;t_contact)})</tt>"/]:::pullClass
    7v1[\"(7v1) <tt>map(|(_pid_a, (pid_b_t_contact, _t_from_to))| pid_b_t_contact)</tt>"/]:::pullClass
    8v1[/"(8v1) <tt>tee()</tt>"\]:::pushClass
    13v1["(13v1) <tt>handoff</tt>"]:::otherClass
    13v1--->9v1
    1v1--->2v1
    2v1--0--->5v1
    4v1--0--->3v1
    9v1--1--->3v1
    3v1--1--->5v1
    5v1--->6v1
    6v1--->7v1
    7v1--->8v1
    8v1--0--->13v1
    subgraph sg_1v1_var_contacts ["var <tt>contacts</tt>"]
        1v1
        2v1
    end
    subgraph sg_1v1_var_exposed ["var <tt>exposed</tt>"]
        3v1
    end
    subgraph sg_1v1_var_new_exposed ["var <tt>new_exposed</tt>"]
        5v1
        6v1
        7v1
        8v1
    end
end
subgraph sg_2v1 ["sg_2v1 stratum 0"]
    12v1[\"(12v1) <tt>source_stream(people_recv)</tt>"/]:::pullClass
    10v1[\"(10v1) <tt>join()</tt>"/]:::pullClass
    11v1[/"(11v1) <tt>for_each(|(_pid, ((name, phone), exposure))| {println!(&quot;[{}] To {}: Possible Exposure at t = {}&quot;, name, phone, exposure);})</tt>"\]:::pushClass
    12v1--0--->10v1
    10v1--->11v1
    subgraph sg_2v1_var_notifs ["var <tt>notifs</tt>"]
        10v1
        11v1
    end
end
8v1--1--->14v1
14v1["(14v1) <tt>handoff</tt>"]:::otherClass
14v1--1--->10v1

