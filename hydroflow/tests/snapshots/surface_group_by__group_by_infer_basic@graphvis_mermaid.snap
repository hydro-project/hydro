---
source: hydroflow/tests/surface_group_by.rs
expression: df.serde_graph().unwrap().to_mermaid()
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#02f,color:#fff,stroke:#000
classDef pushClass fill:#ff0,stroke:#000
linkStyle default stroke:#aaa,stroke-width:4px,color:red,font-size:1.5em;
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    1v1[\"(1v1) <tt>source_iter([SubordResponse { xid : &quot;123&quot;, mtype : 33 }, SubordResponse<br>{ xid : &quot;123&quot;, mtype : 52 }, SubordResponse { xid : &quot;123&quot;, mtype : 72 },<br>SubordResponse { xid : &quot;123&quot;, mtype : 83 }, SubordResponse<br>{ xid : &quot;123&quot;, mtype : 78 },])</tt>"/]:::pullClass
    2v1[\"(2v1) <tt>map(| m : SubordResponse | (m.xid, 1))</tt>"/]:::pullClass
    1v1--->2v1
end
subgraph sg_2v1 ["sg_2v1 stratum 1"]
    3v1[/"(3v1) <tt>group_by :: &lt; 'static &gt; (| | 0, | old : &amp; mut u32, val : u32 | * old += val)</tt>"\]:::pushClass
    4v1[/"(4v1) <tt>for_each(| (k, v) | println! (&quot;{}: {}&quot;, k, v))</tt>"\]:::pushClass
    3v1--->4v1
end
2v1--->5v1
5v1["(5v1) <tt>handoff</tt>"]:::otherClass
5v1===o3v1

