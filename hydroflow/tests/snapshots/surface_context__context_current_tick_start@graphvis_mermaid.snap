---
source: hydroflow/tests/surface_context.rs
expression: df.meta_graph().unwrap().to_mermaid()
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa,stroke-width:4px,color:red,font-size:1.5em;
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    1v1[\"(1v1) <code>source_iter([()])</code>"/]:::pullClass
    2v1[\"(2v1) <code>map(|_| context.current_tick_start())</code>"/]:::pullClass
    1v1-->2v1
end
subgraph sg_2v1 ["sg_2v1 stratum 0"]
    3v1[\"(3v1) <code>defer_tick()</code>"/]:::pullClass
    4v1[\"(4v1) <code>assert(|t: &amp;hydroflow::instant::Instant| t.elapsed().as_nanos() &gt; 0)</code>"/]:::pullClass
    5v1[/"<div style=text-align:center>(5v1)</div> <code>for_each(|t: hydroflow::instant::Instant| {<br>    println!(&quot;Time between ticks: {:?}&quot;, t.elapsed())<br>})</code>"\]:::pushClass
    3v1-->4v1
    4v1-->5v1
end
subgraph sg_3v1 ["sg_3v1 stratum 1"]
    7v1[\"(7v1) <code>identity()</code>"/]:::pullClass
end
2v1-->6v1
6v1["(6v1) <code>handoff</code>"]:::otherClass
6v1-->7v1
7v1-->8v1
8v1["(8v1) <code>handoff</code>"]:::otherClass
8v1--o3v1

