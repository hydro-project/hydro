---
source: hydroflow/tests/surface_stratum.rs
expression: df.serde_graph().unwrap().to_mermaid()
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#02f,color:#fff,stroke:#000
classDef pushClass fill:#ff0,stroke:#000
linkStyle default stroke:#aaa,stroke-width:4px,color:red,font-size:1.5em;
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    4v1[\"(4v1) <tt>next_tick()</tt>"/]:::pullClass
end
subgraph sg_2v1 ["sg_2v1 stratum 0"]
    3v1[\"(3v1) <tt>source_iter([1, 3])</tt>"/]:::pullClass
    5v1[\"(5v1) <tt>map(|x| 2 * x)</tt>"/]:::pullClass
    1v1[\"(1v1) <tt>merge()</tt>"/]:::pullClass
    2v1[/"(2v1) <tt>tee()</tt>"\]:::pushClass
    6v1[/"(6v1) <tt>for_each(|x| output_inner.borrow_mut().push(x))</tt>"\]:::pushClass
    3v1--0--->1v1
    5v1--1--->1v1
    1v1--->2v1
    2v1--1--->6v1
    subgraph sg_2v1_var_a ["var <tt>a</tt>"]
        1v1
        2v1
    end
end
subgraph sg_3v1 ["sg_3v1 stratum 1"]
    9v1[\"(9v1) <tt>identity()</tt>"/]:::pullClass
end
2v1--0--->8v1
4v1--->7v1
7v1["(7v1) <tt>handoff</tt>"]:::otherClass
7v1--->5v1
8v1["(8v1) <tt>handoff</tt>"]:::otherClass
8v1--->9v1
9v1--->10v1
10v1["(10v1) <tt>handoff</tt>"]:::otherClass
10v1--->4v1

