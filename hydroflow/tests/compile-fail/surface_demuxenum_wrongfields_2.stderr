error[E0271]: type mismatch resolving `<impl Pusherator<Item = (u32,)> as Pusherator>::Item == f64`
  --> tests/compile-fail/surface_demuxenum_wrongfields_2.rs:17:28
   |
17 |         ]) -> demux_enum::<Shape>();
   |                            ^^^^^ expected `f64`, found `(u32,)`
   |
   = note: expected type `f64`
             found tuple `(u32,)`
note: required for `Shape` to implement `DemuxEnum<(impl Pusherator<Item = (f64,)>, (impl Pusherator<Item = (f64, f64)>, (impl Pusherator<Item = (u32,)>, ())))>`
  --> tests/compile-fail/surface_demuxenum_wrongfields_2.rs:5:14
   |
5  |     #[derive(DemuxEnum)]
   |              ^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
6  |     enum Shape {
   |          ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
note: required by a bound in `__typeguard_demux_enum_fn`
  --> tests/compile-fail/surface_demuxenum_wrongfields_2.rs:12:18
   |
12 |       let mut df = hydroflow_syntax! {
   |  __________________^
13 | |         my_demux = source_iter([
14 | |             Shape::Rectangle { w: 10.0, h: 8.0 },
15 | |             Shape::Square(9.0),
...  |
20 | |         my_demux[Square] -> for_each(|side: (u32,)| ());
21 | |     };
   | |_____^ required by this bound in `__typeguard_demux_enum_fn`
   = note: this error originates in the derive macro `DemuxEnum` which comes from the expansion of the macro `hydroflow_syntax` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<impl Pusherator<Item = (u32,)> as Pusherator>::Item == f64`
  --> tests/compile-fail/surface_demuxenum_wrongfields_2.rs:17:15
   |
17 |         ]) -> demux_enum::<Shape>();
   |               ^^^^^^^^^^^^^^^^^^^^^ expected `f64`, found `(u32,)`
   |
   = note: expected type `f64`
             found tuple `(u32,)`
   = note: required for `(impl Pusherator<Item = (u32,)>, ())` to implement `PusheratorListForItems<(f64, ())>`
   = note: 2 redundant requirements hidden
   = note: required for `(impl Pusherator<Item = (f64,)>, (impl Pusherator<Item = (f64, f64)>, (impl Pusherator<Item = (u32,)>, ())))` to implement `PusheratorListForItems<((f64,), ((f64, f64), (f64, ())))>`
note: required by a bound in `__typeguard_demux_enum_fn`
  --> tests/compile-fail/surface_demuxenum_wrongfields_2.rs:12:18
   |
12 |       let mut df = hydroflow_syntax! {
   |  __________________^
13 | |         my_demux = source_iter([
14 | |             Shape::Rectangle { w: 10.0, h: 8.0 },
15 | |             Shape::Square(9.0),
...  |
20 | |         my_demux[Square] -> for_each(|side: (u32,)| ());
21 | |     };
   | |_____^ required by this bound in `__typeguard_demux_enum_fn`
   = note: this error originates in the macro `hydroflow_syntax` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<impl Pusherator<Item = (u32,)> as Pusherator>::Item == f64`
  --> tests/compile-fail/surface_demuxenum_wrongfields_2.rs:13:20
   |
13 |           my_demux = source_iter([
   |  ____________________^
14 | |             Shape::Rectangle { w: 10.0, h: 8.0 },
15 | |             Shape::Square(9.0),
16 | |             Shape::Circle { r: 5.0 },
17 | |         ]) -> demux_enum::<Shape>();
   | |___________________________________^ expected `f64`, found `(u32,)`
   |
   = note: expected type `f64`
             found tuple `(u32,)`
note: required for `Shape` to implement `DemuxEnum<(impl Pusherator<Item = (f64,)>, (impl Pusherator<Item = (f64, f64)>, (impl Pusherator<Item = (u32,)>, ())))>`
  --> tests/compile-fail/surface_demuxenum_wrongfields_2.rs:5:14
   |
5  |     #[derive(DemuxEnum)]
   |              ^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
6  |     enum Shape {
   |          ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
note: required by a bound in `__typeguard_demux_enum_fn`
  --> tests/compile-fail/surface_demuxenum_wrongfields_2.rs:12:18
   |
12 |       let mut df = hydroflow_syntax! {
   |  __________________^
13 | |         my_demux = source_iter([
14 | |             Shape::Rectangle { w: 10.0, h: 8.0 },
15 | |             Shape::Square(9.0),
...  |
20 | |         my_demux[Square] -> for_each(|side: (u32,)| ());
21 | |     };
   | |_____^ required by this bound in `__typeguard_demux_enum_fn`
   = note: this error originates in the derive macro `DemuxEnum` which comes from the expansion of the macro `hydroflow_syntax` (in Nightly builds, run with -Z macro-backtrace for more info)
