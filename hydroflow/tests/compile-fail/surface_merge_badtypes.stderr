error[E0271]: type mismatch resolving `<&mut Chars<'_> as IntoIterator>::Item == {integer}`
 --> tests/compile-fail/surface_merge_badtypes.rs:7:9
  |
5 |         m = merge() -> for_each(std::mem::drop);
  |             ------- required by a bound introduced by this call
6 |         source_iter(0..10) -> m;
7 |         source_iter("hello".chars()) -> m;
  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected integer, found `char`
  |
note: required by a bound in `std::iter::Iterator::chain`
 --> $RUST/core/src/iter/traits/iterator.rs
  |
  |         U: IntoIterator<Item = Self::Item>,
  |                         ^^^^^^^^^^^^^^^^^ required by this bound in `Iterator::chain`

error[E0271]: expected `&mut Chars<'_>` to be an iterator that yields `{integer}`, but it yields `char`
 --> tests/compile-fail/surface_merge_badtypes.rs:4:18
  |
4 |       let mut df = hydroflow_syntax! {
  |  __________________^
5 | |         m = merge() -> for_each(std::mem::drop);
6 | |         source_iter(0..10) -> m;
7 | |         source_iter("hello".chars()) -> m;
8 | |     };
  | |     ^
  | |     |
  | |_____expected integer, found `char`
  |       required by a bound introduced by this call
  |
  = note: required for `std::iter::Chain<&mut std::ops::Range<{integer}>, &mut Chars<'_>>` to implement `Iterator`
note: required by a bound in `main::{closure#0}::{closure#2}::assert_var_impl`
 --> tests/compile-fail/surface_merge_badtypes.rs:4:18
  |
4 |       let mut df = hydroflow_syntax! {
  |  __________________^
5 | |         m = merge() -> for_each(std::mem::drop);
6 | |         source_iter(0..10) -> m;
7 | |         source_iter("hello".chars()) -> m;
8 | |     };
  | |_____^ required by this bound in `assert_var_impl`
  = note: this error originates in the macro `hydroflow::assert_var_impl` which comes from the expansion of the macro `hydroflow_syntax` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: expected `&mut Chars<'_>` to be an iterator that yields `{integer}`, but it yields `char`
 --> tests/compile-fail/surface_merge_badtypes.rs:4:18
  |
4 |       let mut df = hydroflow_syntax! {
  |  __________________^
5 | |         m = merge() -> for_each(std::mem::drop);
6 | |         source_iter(0..10) -> m;
7 | |         source_iter("hello".chars()) -> m;
8 | |     };
  | |_____^ expected `char`, found integer
  |
  = note: required for `std::iter::Chain<&mut std::ops::Range<{integer}>, &mut Chars<'_>>` to implement `Iterator`
  = note: this error originates in the macro `hydroflow_syntax` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: the method `run` exists for struct `Pivot<std::iter::Chain<&mut std::ops::Range<{integer}>, &mut Chars<'_>>, hydroflow::pusherator::for_each::ForEach<fn({integer}) {std::mem::drop::<{integer}>}, {integer}>>`, but its trait bounds were not satisfied
 --> tests/compile-fail/surface_merge_badtypes.rs:5:13
  |
5 |         m = merge() -> for_each(std::mem::drop);
  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method cannot be called on `Pivot<std::iter::Chain<&mut std::ops::Range<{integer}>, &mut Chars<'_>>, hydroflow::pusherator::for_each::ForEach<fn({integer}) {std::mem::drop::<{integer}>}, {integer}>>` due to unsatisfied trait bounds
  |
 ::: $RUST/core/src/iter/adapters/chain.rs
  |
  | pub struct Chain<A, B> {
  | ---------------------- doesn't satisfy `_: Iterator`
  |
  = note: the following trait bounds were not satisfied:
          `std::iter::Chain<&mut std::ops::Range<{integer}>, &mut Chars<'_>>: Iterator`
          `<&mut Chars<'_> as Iterator>::Item = {integer}`
