---
source: datalog_compiler/src/lib.rs
expression: rustfmt_code(&wrapped.to_token_stream().to_string())
---
fn main() {
    {
        let tree = "Program { rules: [Input((), Ident { name: \"edge\" }), Output((), Ident { name: \"path\" }), Rule(Rule { target: Target { name: Ident { name: \"path\" }, _l_paren: (), fields: [Ident { name: \"x\" }, Ident { name: \"y\" }], _r_paren: () }, _from: (), sources: [Target { name: Ident { name: \"edge\" }, _l_paren: (), fields: [Ident { name: \"x\" }, Ident { name: \"y\" }], _r_paren: () }], _dot: None }), Rule(Rule { target: Target { name: Ident { name: \"path\" }, _l_paren: (), fields: [Ident { name: \"x\" }, Ident { name: \"y\" }], _r_paren: () }, _from: (), sources: [Target { name: Ident { name: \"path\" }, _l_paren: (), fields: [Ident { name: \"x\" }, Ident { name: \"z\" }], _r_paren: () }, Target { name: Ident { name: \"edge\" }, _l_paren: (), fields: [Ident { name: \"z\" }, Ident { name: \"y\" }], _r_paren: () }], _dot: Some(()) })] }" ;
        tree
    }
}

