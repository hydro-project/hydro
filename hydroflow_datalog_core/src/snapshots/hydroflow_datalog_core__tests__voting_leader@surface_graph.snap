---
source: hydroflow_datalog_core/src/lib.rs
assertion_line: 625
expression: graph.surface_syntax_string()
---
1v1 = merge ();
2v1 = tee ();
3v1 = merge ();
4v1 = tee ();
5v1 = merge ();
6v1 = tee ();
7v1 = merge ();
8v1 = tee ();
9v1 = merge ();
10v1 = tee ();
11v1 = merge ();
12v1 = tee ();
13v1 = merge ();
14v1 = tee ();
15v1 = merge ();
16v1 = tee ();
17v1 = source_stream (clientIn);
18v1 = source_stream (voteFromReplica);
19v1 = source_stream (voteCounts);
20v1 = source_stream (replicaAddr);
21v1 = source_stream (numReplicas);
22v1 = source_stream (clientAddr);
23v1 = for_each (| v | clientOut . send (v) . unwrap ());
24v1 = for_each (| v | voteToReplica . send (v) . unwrap ());
25v1 = join :: < 'tick > ();
26v1 = map (| kv : (() , ((_ ,) , (_ ,))) | (kv . 1 . 0 . 0 , kv . 1 . 1 . 0 ,));
27v1 = map (| v : (_ ,) | (() , v));
28v1 = map (| v : (_ ,) | (() , v));
29v1 = source_stream (async_receive_voteToReplica);
30v1 = map (| row : (_ , _ ,) | (row . 0 , row . 1 ,));
31v1 = for_each (| v : (_ , _ ,) | async_send_voteToReplica (v . 1 , (v . 0 ,)) . unwrap ());
32v1 = map (| row : (_ , _ ,) | (row . 0 , row . 1 ,));
33v1 = next_tick ();
34v1 = map (| row : (_ , _ ,) | ((row . 1 ,) , (row . 0 ,)));
35v1 = group_by :: < 'tick , (_ ,) , (Option < _ > ,) > (| | (None ,) , | old : & mut (Option < _ > ,) , val : (_ ,) | { old . 0 = if let Some (prev) = old . 0 { Some (prev + 1) } else { Some (1) } ; });
36v1 = map (| (g , a) | (a . 0 . unwrap () , g . 0 ,));
37v1 = join :: < 'tick > ();
38v1 = map (| kv : ((_ ,) , ((_ , _ ,) , (_ ,))) | (kv . 1 . 0 . 0 , kv . 1 . 0 . 1 ,));
39v1 = map (| v : (_ , _ ,) | ((v . 0 ,) , v));
40v1 = map (| v : (_ ,) | ((v . 0 ,) , v));
41v1 = join :: < 'tick > ();
42v1 = map (| kv : (() , ((_ , _ ,) , (_ ,))) | (kv . 1 . 0 . 0 , kv . 1 . 0 . 1 , kv . 1 . 1 . 0 ,));
43v1 = map (| v : (_ , _ ,) | (() , v));
44v1 = map (| v : (_ ,) | (() , v));
45v1 = source_stream (async_receive_clientOut);
46v1 = map (| row : (_ , _ , _ ,) | (row . 1 , row . 2 ,));
47v1 = for_each (| v : (_ , _ ,) | async_send_clientOut (v . 1 , (v . 0 ,)) . unwrap ());

(1v1-->2v1);
(3v1-->4v1);
(5v1-->6v1);
(7v1-->8v1);
(9v1-->10v1);
(11v1-->12v1);
(13v1-->14v1);
(15v1-->16v1);
(17v1-->1v1);
(18v1-->7v1);
(19v1-->9v1);
(20v1-->11v1);
(21v1-->13v1);
(22v1-->15v1);
(4v1-->23v1);
(6v1-->24v1);
(25v1-->26v1);
(27v1-->25v1);
(2v1-->27v1);
(28v1-->25v1);
(12v1-->28v1);
(29v1-->5v1);
(30v1-->31v1);
(26v1-->30v1);
(33v1-->7v1);
(32v1-->33v1);
(8v1-->32v1);
(36v1-->9v1);
(35v1-->36v1);
(34v1-->35v1);
(8v1-->34v1);
(37v1-->38v1);
(39v1-->37v1);
(10v1-->39v1);
(40v1-->37v1);
(14v1-->40v1);
(41v1-->42v1);
(43v1-->41v1);
(38v1-->43v1);
(44v1-->41v1);
(16v1-->44v1);
(45v1-->3v1);
(46v1-->47v1);
(42v1-->46v1);

