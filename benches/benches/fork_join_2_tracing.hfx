dfir_syntax! {
a0 = source_iter(vals()) -> map(|x| (x, SpanId(1))) -> tee();
a0 -> filter(|(x, _span)| (x >> 0) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a1;
a0 -> filter(|(x, _span)| (x >> 0) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a1;
a1 = union() -> tee();
a1 -> filter(|(x, _span)| (x >> 1) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a2;
a1 -> filter(|(x, _span)| (x >> 1) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a2;
a2 = union() -> tee();
a2 -> filter(|(x, _span)| (x >> 2) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a3;
a2 -> filter(|(x, _span)| (x >> 2) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a3;
a3 = union() -> tee();
a3 -> filter(|(x, _span)| (x >> 3) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a4;
a3 -> filter(|(x, _span)| (x >> 3) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a4;
a4 = union() -> tee();
a4 -> filter(|(x, _span)| (x >> 4) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a5;
a4 -> filter(|(x, _span)| (x >> 4) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a5;
a5 = union() -> tee();
a5 -> filter(|(x, _span)| (x >> 5) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a6;
a5 -> filter(|(x, _span)| (x >> 5) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a6;
a6 = union() -> tee();
a6 -> filter(|(x, _span)| (x >> 6) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a7;
a6 -> filter(|(x, _span)| (x >> 6) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a7;
a7 = union() -> tee();
a7 -> filter(|(x, _span)| (x >> 7) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a8;
a7 -> filter(|(x, _span)| (x >> 7) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a8;
a8 = union() -> tee();
a8 -> filter(|(x, _span)| (x >> 8) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a9;
a8 -> filter(|(x, _span)| (x >> 8) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a9;
a9 = union() -> tee();
a9 -> filter(|(x, _span)| (x >> 9) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a10;
a9 -> filter(|(x, _span)| (x >> 9) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a10;
a10 = union() -> tee();
a10 -> filter(|(x, _span)| (x >> 10) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a11;
a10 -> filter(|(x, _span)| (x >> 10) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a11;
a11 = union() -> tee();
a11 -> filter(|(x, _span)| (x >> 11) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a12;
a11 -> filter(|(x, _span)| (x >> 11) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a12;
a12 = union() -> tee();
a12 -> filter(|(x, _span)| (x >> 12) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a13;
a12 -> filter(|(x, _span)| (x >> 12) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a13;
a13 = union() -> tee();
a13 -> filter(|(x, _span)| (x >> 13) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a14;
a13 -> filter(|(x, _span)| (x >> 13) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a14;
a14 = union() -> tee();
a14 -> filter(|(x, _span)| (x >> 14) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a15;
a14 -> filter(|(x, _span)| (x >> 14) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a15;
a15 = union() -> tee();
a15 -> filter(|(x, _span)| (x >> 15) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a16;
a15 -> filter(|(x, _span)| (x >> 15) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a16;
a16 = union() -> tee();
a16 -> filter(|(x, _span)| (x >> 16) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a17;
a16 -> filter(|(x, _span)| (x >> 16) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a17;
a17 = union() -> tee();
a17 -> filter(|(x, _span)| (x >> 17) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a18;
a17 -> filter(|(x, _span)| (x >> 17) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a18;
a18 = union() -> tee();
a18 -> filter(|(x, _span)| (x >> 18) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a19;
a18 -> filter(|(x, _span)| (x >> 18) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a19;
a19 = union() -> tee();
a19 -> filter(|(x, _span)| (x >> 19) & 0b1 == 0) -> map(|(x, span)| (x, (span_follows)(span))) -> a20;
a19 -> filter(|(x, _span)| (x >> 19) & 0b1 == 1) -> map(|(x, span)| (x, (span_follows)(span))) -> a20;
a20 = union() -> for_each(|(x, span)| { black_box((x, span)); });
}
