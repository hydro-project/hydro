name: CI

on:
  push:
    branches:
      - main
      - feature/**
  pull_request:
  schedule:
    - cron: "35 03 * * *" # Daily at 8:35 PM PDT, 7:35 PM PST.
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_DEV_STRIP: "debuginfo"
  CARGO_PROFILE_TEST_STRIP: "debuginfo"
  CARGO_PROFILE_RELEASE_STRIP: "debuginfo"

jobs:
  pre_job:
    runs-on: [ubuntu-latest, windows-latest]
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5.3.1
        with:
          cancel_others: "true"

  test:
    name: All tests, lints, and checks
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    timeout-minutes: 20
    needs: pre_job
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        rust_release: [latest-nightly, latest-stable]
        exclude:
          # For non-pull requests, event_name != 'pull_request' will be true, and 'nothing' is
          # truthy, so the entire && operator will resolve to 'nothing'. Then the || operator will
          # resolve to 'nothing' so we will exclude 'nothing'. https://stackoverflow.com/a/73822998
          - rust_release: ${{ (github.event_name != 'pull_request' && github.event_name != 'push' && 'nothing') || 'latest-nightly' }}
          - os: ${{ (github.event_name != 'pull_request' && github.event_name != 'push' && 'nothing') || 'windows-latest' }}

    env:
      RUSTUP_TOOLCHAIN: ${{ matrix.rust_release == 'latest-nightly' && 'nightly' || '' }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - if: matrix.rust_release == 'latest-stable'
        uses: ./.github/actions/use-sccache

      - uses: ./.github/actions/install-nexttest
        with:
          os: ${{ matrix.os }}

      - name: Run cargo nextest on all targets
        run: cargo nextest run --no-fail-fast --features python --features hydro_lang/deploy --all-targets

      - name: Run doctests
        # Not supported by nextest: https://github.com/nextest-rs/nextest/issues/16
        run: cargo test --no-fail-fast --features python --features hydro_lang/deploy --doc

      - run: cargo clippy --all-targets --features python -- -D warnings
      - run: cargo check --all-targets --features python
      - run: cargo check --all-targets --no-default-features
      - run: cargo fmt --all -- --check

  test-wasm:
    name: Test Suite (WebAssembly)
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    timeout-minutes: 15
    needs: pre_job
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust_release: [latest-nightly, latest-stable]
        exclude:
          # For non-pull requests, event_name != 'pull_request' will be true, and 'nothing' is
          # truthy, so the entire && operator will resolve to 'nothing'. Then the || operator will
          # resolve to 'nothing' so we will exclude 'nothing'. https://stackoverflow.com/a/73822998
          - rust_release: ${{ (github.event_name != 'pull_request' && github.event_name != 'push' && 'nothing') || 'latest-nightly' }}

    env:
      RUSTUP_TOOLCHAIN: ${{ matrix.rust_release == 'latest-nightly' && 'nightly' || '' }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install wasm target
        run: rustup target add wasm32-unknown-unknown

      - name: Determine wasm-bindgen version
        id: wasm-bindgen-version
        run: echo "VERSION=$(cargo pkgid wasm-bindgen-shared | cut -d '@' -f2)" >> "$GITHUB_OUTPUT"

      - name: Install WebAssembly test runner
        run: cargo install wasm-bindgen-cli@${{ steps.wasm-bindgen-version.outputs.VERSION }}

      - name: Run cargo test
        env:
          CARGO_TARGET_WASM32_UNKNOWN_UNKNOWN_RUNNER: wasm-bindgen-test-runner
        run: cargo test -p dfir_rs --target wasm32-unknown-unknown --tests --no-fail-fast

      - run: cargo check -p dfir_rs --target wasm32-unknown-unknown
