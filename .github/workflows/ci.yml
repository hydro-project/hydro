name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "35 03 * * *" # Daily at 8:35 PM PDT, 7:35 PM PST.
  workflow_dispatch:
    inputs:
      should_bench:
        description: "Should Benchmark? (`true`)"
        required: true
        default: "false"

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.0
        with:
          cancel_others: "true"

  check:
    name: Check
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-02-09
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-targets

  test:
    name: Test Suite
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-02-09
          override: true
          components: rustfmt

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  lints:
    name: Lints
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-02-09
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  docs:
    name: Docs
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    env:
      WWW_DIR: target
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-02-09
          override: true

      - name: Run cargo doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps
        env:
          RUSTDOCFLAGS: -Dwarnings

      - name: Push to gh-pages
        # Do not deploy PRs.
        if: ${{ github.event_name != 'pull_request' }}
        shell: bash
        run: |
          git -C "$WWW_DIR" init -q
          git -C "$WWW_DIR" remote add origin "$(git remote get-url origin)"
          git -C "$WWW_DIR" config credential.helper "$(git config credential.helper)"
          git -C "$WWW_DIR" config 'http.https://github.com/.extraheader' "$(git config 'http.https://github.com/.extraheader')"
          git -C "$WWW_DIR" config core.autocrlf input
          git -C "$WWW_DIR" config core.safecrlf false
          git -C "$WWW_DIR" fetch origin gh-pages:gh-pages
          git -C "$WWW_DIR" symbolic-ref HEAD refs/heads/gh-pages
          git -C "$WWW_DIR" reset
          git -C "$WWW_DIR" checkout -- .gitignore index.md
          git -C "$WWW_DIR" add doc
          if git -C "$WWW_DIR" -c 'user.name=github-actions[bot]' -c 'user.email=41898282+github-actions[bot]@users.noreply.github.com' \
            commit -m "Update Docs $(date -I) $(git rev-parse HEAD)";
          then
            git -C "$WWW_DIR" push -u origin gh-pages --quiet
          else
            echo 'No changes to commit'
          fi

  benches:
    name: Benchmarks
    needs: pre_job
    if: |
      needs.pre_job.outputs.should_skip != 'true' &&
      (
        github.event_name == 'schedule' ||
        (github.event_name == 'workflow_dispatch' && github.event.inputs.should_bench == 'true') ||
        (github.event_name == 'push' && contains(github.event.head_commit.message, '[ci-bench]'))
      )
    runs-on: ubuntu-latest
    env:
      WWW_DIR: target
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-02-09
          override: true

      - name: Checkout gh-pages
        shell: bash
        run: |
          mkdir -p "$WWW_DIR"
          git -C "$WWW_DIR" init -q
          git -C "$WWW_DIR" remote add origin "$(git remote get-url origin)"
          git -C "$WWW_DIR" config credential.helper "$(git config credential.helper)"
          git -C "$WWW_DIR" config 'http.https://github.com/.extraheader' "$(git config 'http.https://github.com/.extraheader')"
          git -C "$WWW_DIR" config core.autocrlf input
          git -C "$WWW_DIR" config core.safecrlf false
          git -C "$WWW_DIR" checkout -b gh-pages
          git -C "$WWW_DIR" fetch origin gh-pages
          git -C "$WWW_DIR" reset --soft origin/gh-pages
          git -C "$WWW_DIR" reset
          git -C "$WWW_DIR" checkout -- .gitignore index.md bench criterion
          mkdir -p target/bench

      - name: Run benchmark
        run: |
          time cargo bench -p benches -- hydroflow --output-format bencher | tee output.txt

      - name: Generate benchmark page
        uses: benchmark-action/github-action-benchmark@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tool: cargo
          output-file-path: output.txt
          external-data-json-path: target/bench/data.json

      - name: Write benchmark html/json
        run: |
          echo 'window.BENCHMARK_DATA = ' | cat - target/bench/data.json > target/bench/data.js
          cp .github/assets/index.html target/bench/index.html

      - name: Push to gh-pages
        shell: bash
        run: |
          git -C "$WWW_DIR" fetch origin gh-pages
          git -C "$WWW_DIR" reset --soft origin/gh-pages
          git -C "$WWW_DIR" reset
          git -C "$WWW_DIR" add bench criterion
          if git -C "$WWW_DIR" -c 'user.name=github-actions[bot]' -c 'user.email=41898282+github-actions[bot]@users.noreply.github.com' \
            commit -m "Update Benchmarks $(date -I) $(git rev-parse HEAD)";
          then
            git -C "$WWW_DIR" push -u origin gh-pages --quiet
          else
            echo 'No changes to commit'
          fi
