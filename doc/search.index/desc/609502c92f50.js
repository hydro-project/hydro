rd_("BkThe \xe2\x80\x9cleft\xe2\x80\x9d Lattice of the Pair lattice.BlThe \xe2\x80\x9cright\xe2\x80\x9d Lattice of the Pair lattice.AnMaximum number of faulty nodesBfCreates a quoted expression for Hydro.AjContains the success valueDj<code>PartialEq</code> between a referenced variadic and a variadic of \xe2\x80\xa6CiAn identifier for this host, which is unique within a \xe2\x80\xa6DjPasses through <code>self</code> when it has a value, otherwise passes \xe2\x80\xa6DeThe <code>Variadic</code> return type of <code>Self::make_ctx</code>.AkDevelopment release channelAfDot (Graphviz) graphs.0AhContains the error valueAnError type emitted by writing.BhType returned by <code>Self::get</code>.0EgAn integer value: <code>[0]</code>, <code>[1]</code>, etc. Can be negative although \xe2\x80\xa6AeA key into a SlotVec.CbThe number of items in this variadic (its length).BfMaps: Simple one-in-one-out operators.CmA totally ordered max lattice. Merging returns the larger \xe2\x80\xa6B`The weaker of the two orderings.BgThe weaker of the two retry guarantees.CnA totally ordered min lattice. Merging returns the smaller \xe2\x80\xa6BdTrait to define a one in a semiring.BdCombine two RollingAverage instancesBhAdd-assign <code>other</code> into self.ioperationmMin operationCiMaximum is the addition operation for ConfidenceScore \xe2\x80\xa6CjMaximum is the addition operation for FuzzyLogic semiring.lOR operationCgSets the target to be a binary with the given name, \xe2\x80\xa6CiReturns a reference to the value associated with the key.0CjGets the value associated with a specific key from the \xe2\x80\xa6ClOn an Inner node, retrieves the value (child) associated \xe2\x80\xa600CnFollowing the spec in Wang/Willsey/Suciu, on an Inner node \xe2\x80\xa6BbReturns a reference to an element.Cjget the unvec\xe2\x80\x99ed Variadic at position <code>index</code>Cmgiven a RefVariadic lookup key, get a RefVariadic version \xe2\x80\xa60BmGHT from the Wang/Willsey/Suciu Freejoin workDcThe <code>Key</code> of the  dominating pair lattice, usually a \xe2\x80\xa6CkReturns the number of elements in the <code>SlotVec</code>.DaReturns the number of elements in the <code>PriorityStack</code>.B`The length of this variadic typeBdReturn number of elements in the setDjTransforms each value by invoking <code>f</code> on each element, with \xe2\x80\xa60DjTransforms the optional value by applying a function <code>f</code> to \xe2\x80\xa6DkTransforms the singleton value by applying a function <code>f</code> to \xe2\x80\xa6DjProduces a stream based on invoking <code>f</code> on each element. If \xe2\x80\xa6DkComputes the maximum element in the stream as an <code>Optional</code>, \xe2\x80\xa6DkComputes the minimum element in the stream as an <code>Optional</code>, \xe2\x80\xa6BmMultiply-assign <code>other</code> into self.ioperation0CfMultiplication is the multiplication operation for \xe2\x80\xa6CjMinimum is the multiplication operation for FuzzyLogic \xe2\x80\xa6mAND operationCaThis module previously contained networking code.BiCreates an empty <code>DiMulGraph</code>.BaCreate a new empty graph builder.AiCreate a new empty graph.DnCreates a new <code>UnionFind</code>, same as <code>Default::default()</code>.1AhCreate a new TickInstantDgCreate a new <code>TickDuration</code> for the specified tick interval.BcCreates a new <code>SlotVec</code>.BlCreates a new <code>SecondarySlotVec</code>.C`Creates a new, empty <code>PriorityStack</code>.CkCreates a new instance of HostBuilder for a given hostname,B`Creates a new instance of Fleet.CnCreate a new address with the given hostname and interface \xe2\x80\xa6DcCreate <code>Version</code> with an empty pre-release and build \xe2\x80\xa6AmReturns the default settings.DkCreates a new <code>RustCrate</code> that will be deployed on the given \xe2\x80\xa6BoCreate a new writer with default configuration.DaCreate a new <code>Conflict</code> lattice instance from a value.EcCreate a <code>DomPair</code> from the given <code>Key</code> and <code>Val</code>.DeCreate a new <code>Max</code> lattice instance from a <code>T</code>.DeCreate a new <code>Min</code> lattice instance from a <code>T</code>.CaCreate a <code>Pair</code> from the given values.CnCreate a new <code>Point</code> lattice instance from a value.EiCreate a new <code>VecUnion</code> from a <code>Vec</code> of <code>Lat</code> instances.D`Create a new <code>WithBot</code> lattice instance from a value.D`Create a new <code>WithTop</code> lattice instance from a value.F`Create a new <code>VecMap</code> from the separate <code>keys</code> and <code>vals</code> vecs.EdCreate a <code>KeyedBimorphism</code> using <code>bimorphism</code> for handling \xe2\x80\xa6Aeinitialize bimorphism1CkCreate a new <code>MapUnion</code> from a <code>Map</code>.EbCreate a new <code>MapUnionWithTombstones</code> from a <code>Map</code> and a \xe2\x80\xa6BfCreate a new instance of Multiplicity.AnCreate a new instance of Cost.CkCreate a new instance of ConfidenceScore with the given \xe2\x80\xa6CiCreate a new instance of FuzzyLogic with the given value.CbCreate a new \xe2\x80\x98Binary Trust\xe2\x80\x99 semiring instance.CkCreate a new <code>SetUnion</code> from a <code>Set</code>.E`Create a new <code>SetUnionWithTombstones</code> from a <code>Set</code> and \xe2\x80\xa6ClCreate a new <code>UnionFind</code> from a <code>Map</code>.DaCreates a new <code>VariadicHashSet</code> with a default hasher.DhCreates a new <code>VariadicCountedHashSet</code> with a default hasher.Beinitialize an empty columnar multisetCmReturns the one element of the semiring. Identity for the \xe2\x80\xa6Be1 is the one element of the semiring.Be0 is the one element of the semiring.11CjTrue is the identity element for multiplication operation.AbDFIR\xe2\x80\x99s operatorsCiPops an element from the stack with the highest priority.B`Runs the dataflow graph forever.EaTees this <code>TeeingHandoff</code>, given the <code>Dfir</code> instance it \xe2\x80\xa60CdThe value stored inside. This should not be mutated.EhCombines this singleton with another <code>Singleton</code> or <code>Optional</code> \xe2\x80\xa60BcThe type of atoms for this lattice.AdBeta release channelAdComputation (yellow)CjImplementation of the Cost/Tropical semiring (N U Inf, \xe2\x80\xa6ChA DFIR graph. Owns, schedules, and runs the compiled \xe2\x80\xa6CdFolds: Operators which accumulate elements together.CiThe data could not be sent on the channel because the \xe2\x80\xa6DkThe first field in <code>Self::SuffixSchema</code>, and the key for the \xe2\x80\xa6CnThe type of the first column in the SuffixSchema This type \xe2\x80\xa6oA help message.CjHandoff (grey) \xe2\x80\x93 not a color for operators, inserted \xe2\x80\xa6ChA host is a single Hydro/DFIR process running in the \xe2\x80\xa6Aathe schema outputDgWrapper around <code>IntoIterator</code> to avoid trait impl conflicts.CjPersistence throughout a single loop execution, across \xe2\x80\xa6AnReset between loop executions.BlNo persistence, for within a loop iteration.gA note.AfPair compound lattice.FcA name or path. <code>[pos]</code>, <code>[neg]</code>, etc. Can use <code>::</code> separators \xe2\x80\xa6CnLightweight ID struct representing an input or output port \xe2\x80\xa6lPull (green)kPush (blue)ElAn uninstantiable type used to tag port <code>Polarity</code> as <strong>receive</strong>\xe2\x80\xa6EgAn uninstantiable type used to tag port <code>Polarity</code> as <strong>send</strong>.CnSinks: Operators which consume input elements (and produce \xe2\x80\xa6BoInput must be collected over the previous tick.ClPersistence for one tick, at the top-level only (outside \xe2\x80\xa6AdReset between ticks.ClMarks the stream as being inside the single global clock \xe2\x80\xa6oA zero durationBkTrait to check if semiring contains a zero.ChThe address of the instruction corresponding to this \xe2\x80\xa6ClSets the arguments to be passed to the binary when it is \xe2\x80\xa6CjRuns a function with the current settings bound to the \xe2\x80\xa6AfExecutes the function.0AlCOLT from Wang/Willsey/SuciuDkMarks this output of a <code>TeeingHandoff</code> as dropped so that no \xe2\x80\xa60CkGet the source and destination vertex IDs for the given \xe2\x80\xa6CnGet the <code>src</code> and <code>dst</code> for an edge: \xe2\x80\xa6AeThe source file path.DgFinds the \xe2\x80\x9crepresentative\xe2\x80\x9d item for <code>k</code>. Each set of \xe2\x80\xa6DkLike <code>Stream::fold</code>, aggregates the values in each group via \xe2\x80\xa6DeCombines elements of the stream into a <code>Singleton</code>, by \xe2\x80\xa6AoReturns the argument unchanged.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000EhCreate a new <code>Max</code> lattice instance from an <code>Into&lt;T&gt;</code> value.111111111111111111111111111111111111111111111111111111111111111111111AlGive a value to the handoff.BbSee <code>CanReceive::give</code>.DaAlias for <code>Handoff::give</code> on the inner <code>H</code>.0BbHost target triple of the compilerBaCalls <code>U::from(self)</code>.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ClIterate the key-value pairs, where the value is a shared \xe2\x80\xa60CmIterate through all items in the vector in order. Deleted \xe2\x80\xa6CjIterator for the \xe2\x80\x9chead\xe2\x80\x9d keys (from inner nodes) or \xe2\x80\xa60BdIterate over the elements of the setEhGiven two streams of pairs <code>(K, V1)</code> and <code>(K, V2)</code>, produces a \xe2\x80\xa6AfIterate over the keys.0ClFlattens the keyed singleton into an unordered stream of \xe2\x80\xa6DiGiven a stream of pairs <code>(K, V)</code>, produces a new stream of \xe2\x80\xa6ClKeys, should be the same length as and correspond 1:1 to \xe2\x80\xa6BoKeys, corresponding 1:1 with <code>vals</code>.DhComputes the last element in the stream as an <code>Optional</code>, \xe2\x80\xa6AiLine number, one-indexed.CjUnsync single-producer single-consumer channel (i.e. a \xe2\x80\xa6BfHuman-readible heading name, for docs.AbOperator\xe2\x80\x99s name.CfGet a node with its operator instance (if applicable).CfReturns the item with the highest priority without \xe2\x80\xa6EcOrganizational module for <code>SendCtx</code>/<code>RecvCtx</code> structs and \xe2\x80\xa6D`Pull-based operator helpers, i.e. <code>Iterator</code> helpers.CiPushes an element onto the stack with the given priority.BdInsert item into the vector, see \xe2\x80\xa6Ccappend an unvec\xe2\x80\x99ed Variadic into this VariadicVecAoReceive a value asynchronously.AiDefines a ring structure.Dc<code>dfir</code> crate name for <code>use #root::something</code>.DaReturns if <code>a</code> and <code>b</code> are in the same set.DkA special case of <code>Stream::scan</code> for keyed streams. For each \xe2\x80\xa6CeApplies a function to each element of the stream, \xe2\x80\xa6BkAsynchronously sends value to the receiver.BhSend a message to the inbox on the host.CjProduces a new stream that emits the input elements in \xe2\x80\xa6AlSpan (source code location).CnReturn the source code span of the node (for operators) or \xe2\x80\xa6BdReturns the span of this port value.ClIf the process is still running, force stop it. Then run \xe2\x80\xa6ChStops the service by having it disconnect from other \xe2\x80\xa6CdHelper test utils to test lattice implementation \xe2\x80\xa6AfTests for the GHT codeBeHelper utilities for the DFIR syntax.ClVals, should be the same length as and correspond 1:1 to \xe2\x80\xa6CaValues, corresponding 1:1 with <code>keys</code>.CmWait for the process to stop on its own. Returns the exit \xe2\x80\xa6C`Recursively walks the content structure mutably.CnReturns the zero element of the semiring. Identify for the \xe2\x80\xa6Bf0 is the zero element of the semiring.ChInfinity is the identity element for addition operation.11CeFalse is the identity element for addition operation.ChDo not emit anything, and do not process further inputs.DkA trait for abstracting over the <code>.clear()</code> method available \xe2\x80\xa6BcPush, Pull, Comp, or Hoff polarity.CjA demux that will be used at runtime to listen to many \xe2\x80\xa6Afresult type from drainiAn error.AnThe error type for this crate.BaA specific number of named ports.CmA fleet is a collection of hosts in the simulation. It is \xe2\x80\xa6Bfresult of <code>force</code>ing a nodeCjAn inbox is used by a host to receive messages for the \xe2\x80\xa6AiInner datastructure type.CeTrait to check if a lattice instance is bottom (\xe2\x8a\xa5).BcDerives lattice <code>IsBot</code>.0CiTrait to check if a lattice instance is top (\xe2\x8a\xa4) and \xe2\x80\xa6BcDerives lattice <code>IsTop</code>.0AkDiagnostic reporting level.ChA merge that will be used at runtime to combine many \xe2\x80\xa6CmTrait for lattice merge (AKA \xe2\x80\x9cjoin\xe2\x80\x9d or \xe2\x80\x9cleast upper \xe2\x80\xa6BcDerives lattice <code>Merge</code>.0ChStand-in for the nightly \xe2\x80\x9cnever\xe2\x80\x9d type <code>!</code>kOwned data.EcA <code>Point</code> lattice, corresponding to a single instance of <code>T</code>.CiHelper trait for splitting a variadic into two parts. \xe2\x80\xa6CaIndividual variadic items without the Vec wrapperCiEmit the provided element, and keep processing future \xe2\x80\xa6DeReturns a keyed singleton with entries consisting of <em>new</em> \xe2\x80\xa60ClReturns a keyed stream corresponding to the latest batch \xe2\x80\xa6CkGiven a tick, returns a keyed stream corresponding to a \xe2\x80\xa6CiReturns a stream corresponding to the latest batch of \xe2\x80\xa6CnGiven a tick, returns a stream corresponding to a batch of \xe2\x80\xa6DiBuild into an unpartitioned <code>DfirGraph</code>, returning a tuple \xe2\x80\xa6CjInsert a key value pair into the join state, currently \xe2\x80\xa6C`Builds the host with the supplied configuration.oNon-DeterminismCkProduces a new keyed stream that combines the groups of \xe2\x80\xa6CnProduces a new stream that first emits the elements of the \xe2\x80\xa6BhModule for the <code>Clear</code> trait.CeClears the collection without neccesarily freeing \xe2\x80\xa6CmCloses this receiving end, not allowing more values to be \xe2\x80\xa6BgThe column number of the function call.CfComputes the number of elements in the stream as a \xe2\x80\xa6CeDebugging utilities for Hydro IR graph visualization.Cjpull all the data out of this trie node but retain the \xe2\x80\xa6DkTurns into a Drain of items <code>UnVec</code> \xe2\x80\x93 i.e. iterate through \xe2\x80\xa6Cmiterate and drain items from the set without deallocating \xe2\x80\xa6DcReturn an iterator over all edges in form <code>(E, (V, V))</code>.AlIterator over all edges: \xe2\x80\xa6AjDefines a field structure.CkGets the first element inside each group of values as a \xe2\x80\xa6DiComputes the first element in the stream as an <code>Optional</code>, \xe2\x80\xa6CdForce the generation of a parent node, as in the \xe2\x80\xa6BlGraph representation stages for DFIR graphs.CiModule for the <code>Dfir</code> struct and helper items.BjGraph visualization utilities for Hydro IRBdGraph format to generate and displayAjDefines a group structure.CgIdent the iterator or pullerator should be assigned to.BnIf this module is an input or output boundary.oSeverity level.BlIterator over all loops, ID and members: \xe2\x80\xa6mMajor versionClMerge <code>other</code> into the <code>self</code> lattice.Cimerge an inner node into the head of this tail of the \xe2\x80\xa6mMinor versionCjIterator over <code>(GraphNodeId, &amp;Node)</code> pairs.CnAST for surface syntax, modelled on <code>syn</code>\xe2\x80\x99s ASTs.DbCreate <code>Version</code> by parsing from string representation.CnThis function does the actual joining part of the join. It \xe2\x80\xa6CjLaunches the service, which should start listening for \xe2\x80\xa6DkSplits this variadic into two parts, first the <code>Prefix</code>, and \xe2\x80\xa6CmStarts the service by having it connect to other services \xe2\x80\xa6DaModule for <code>StateHandle</code>, part of the \xe2\x80\x9cstate API\xe2\x80\x9d.BnThis module contains types to work with ticks.BnThe length of the duration, measured in ticks.EdCombines two items <code>a</code> and <code>b</code> as equivalent, in the same set.CjUnion the sets containg <code>a</code> and <code>b</code>.DgReturns a <code>Waker</code> for interacting with async Rust. Waker \xe2\x80\xa6ClThe receive half of the channel was explicitly closed or \xe2\x80\xa6Bi<code>Cow&lt;&#39;static, str&gt;</code>.BdDelete all values that exactly matchBeDelete all tuples that have the key KCjElided, unspecified port. We have this variant, rather \xe2\x80\xa6DiCreates a new (longer) variadic type by appending <code>Suffix</code> \xe2\x80\xa6BjFilters: One-in zero-or-one-out operators.oNatural numbersBmA trait for the get and iter methods from \xe2\x80\xa6BmThe height of this node in the GhT. Leaf = 0.nA loop\xe2\x80\x99s ID.DiThis type with all shared <code>&amp;</code> references replaced with \xe2\x80\xa6ClA non-determinism guard, which documents how a source of \xe2\x80\xa6CmProcesses can send messages to other processes by putting \xe2\x80\xa6AbOutput tuple type.AhThe output lattice type.0DcThe first part when splitting this variadic by <code>Suffix</code>.DoThis type with all exclusive <code>&amp;mut</code> references replaced with \xe2\x80\xa6AoThe result type for this crate.DcEmit the provided element as the <em>final</em> element, do not \xe2\x80\xa6CnSchema variadic: the schema of the relation stored in this \xe2\x80\xa60ClThe Schema (aka Variadic type) associated with tuples in \xe2\x80\xa6AlSend half of am unsync MPSC.CiSources: Operators which produce output elements (and \xe2\x80\xa6CbA source operator, which must be at the top level.AfStable release channelAmPersistence across all ticks.lNever reset.AeA static string labelCkStreaming sequence of elements with type <code>Type</code>.0BeThe suffix, second half of the split.DdThe second part when splitting this variadic by <code>Prefix</code>.DbA <code>Vec</code>-wrapper representing a naively implemented map.DbA <code>Vec</code>-wrapper representing a naively-implemented set.AhReturns the value as f64AhReturns the value as i64AkReturns the value as stringAhReturns the value as u64CmShifts this keyed singleton into an atomic context, which \xe2\x80\xa6CjShifts this keyed stream into an atomic context, which \xe2\x80\xa6CfShifts this optional into an atomic context, which \xe2\x80\xa6CgShifts this singleton into an atomic context, which \xe2\x80\xa6CdShifts this stream into an atomic context, which \xe2\x80\xa6BmClone each element of the stream; akin to \xe2\x80\xa6AkColumn number, one-indexed.CjDelete all items of a specific value from this vector. \xe2\x80\xa6BbHydro Deploy integration for DFIR.CgConnects to the acquired resources and prepares the \xe2\x80\xa6ClInfrastructure for deploying Hydro programs to the cloud \xe2\x80\xa6Eb<code>PartialEq</code> for the <code>AsRefVar</code> version op <code>Self</code>.DiExtends this variadic value by appending <code>suffix</code> onto the \xe2\x80\xa6CkCreates a keyed singleton containing only the key-value \xe2\x80\xa6CiCreates a stream containing only the elements of each \xe2\x80\xa6CgCreates an optional containing only the value if it \xe2\x80\xa6ClCreates an optional containing the singleton value if it \xe2\x80\xa6CnCreates a stream containing only the elements of the input \xe2\x80\xa6CnReport the height of this node. This is the length of path \xe2\x80\xa6CeInput operator idents (or ref idents; used for pull).BfInsert item into the multiset. see \xe2\x80\xa6DbInserts a value into the <code>SlotVec</code> and returns the key.DjInserts a value into the <code>SecondarySlotVec</code> and returns the \xe2\x80\xa6BcInserts an item into the hash trie.CiInsert an element into the set, return true if successfulCeReturns if <code>self</code> is lattice bottom (\xe2\x8a\xa5).BaReturns true if the value is nil.CbReturns if <code>self</code> is lattice top (\xe2\x8a\xa4).CjAsynchronously yields this keyed singleton outside the \xe2\x80\xa6CnAsynchronously yields this optional outside the tick as an \xe2\x80\xa6ClAsynchronously yields this singleton outside the tick as \xe2\x80\xa6BeThe line number of the function call.nMacros for GHTAkDefines a monoid structure.EdDefines the <code>NonDet</code> type and <code>nondet!</code> macro for tracking \xe2\x80\xa6CmFulfills a non-determinism guard parameter by declaring a \xe2\x80\xa6CkTag for this operator appended to the generated identifier.DiLike <code>Stream::reduce</code>, aggregates the values in each group \xe2\x80\xa6DeCombines elements of the stream into an <code>Optional</code>, by \xe2\x80\xa6CdRemoves a value associated with the key from the \xe2\x80\xa6AgVersion of the compilerBaReturns the absolute source path.Anstderr output from the commandAnstdout output from the commandChDefinitions for the <code>Stream</code> live collection.CbWrites this graph as DOT (graphviz) into a string.CkTakes one stream as input and filters out any duplicate \xe2\x80\xa6CiUnsync (i.e. single-threaded) synchronization primitives.BlIterate over the values by shared reference.0ClFlattens the keyed singleton into an unordered stream of \xe2\x80\xa6CnFlattens the keyed stream into an unordered stream of only \xe2\x80\xa6CnAn address is a combination of a hostname and an interface \xe2\x80\xa6ClTrait to atomize a lattice into individual elements. For \xe2\x80\xa6CmMarks the stream as being bounded, which means that it is \xe2\x80\xa6B`Release channel of the compiler.EgEmulate the <code>get</code> and iter<code> functions for a single Ght node [</code>\xe2\x80\xa6BbRepresents variable typed content.CiThe main state and scheduler of the runtime instance. \xe2\x80\xa6CjControl Flow Operators: Operators which affect control \xe2\x80\xa6BaDominating pair compound lattice.BhFlattens: One-in multiple-out operators.B`Operator type for Flo semantics.Agleaf node of a HashTrieCmPublic macro for constructing a Ght struct with the given \xe2\x80\xa6ClType of ID used to switch between different subgraphs at \xe2\x80\xa6ChA handoff point, used between subgraphs (or within a \xe2\x80\xa6B`Trait for handoffs to implement.Dgtype for all elements of the variadic being wrapped in <code>Vec</code>Airesult type from into_zipDgThe prefix of columns in <code>Self::Schema</code> that the trie is \xe2\x80\xa6AnAlias trait for lattice types.Be<code>#[derive(Lattice)]</code> Macro0AlTag for <code>LoopId</code>.oMermaid graphs.0CfMulti-Input Operators: Operators with multiple inputs.CjThe static lifetime but allowing non-monotonic mutability.AgNightly release channelCmMarks the stream as having no order, which means that the \xe2\x80\xa6CgThe nodes that receive inputs in Paxos. Usually the \xe2\x80\xa6A`Persist T valuesAgPersist key-value pairsClWrapper around a handoff to differentiate between output \xe2\x80\xa6B`Convenience range: exactly zero.AoConvenience range: exactly one.ClA handle into a specific super::graph::Dfir instance for \xe2\x80\xa6DdRecv-specific <code>PortCtx</code>. Input to receive from a handoff.DjA trait implemented by valid retries markers (<code>ExactlyOnce</code> \xe2\x80\xa6BbThe reverse of this variadic type.DbSend-specific <code>PortCtx</code>. Output to send into a handoff.ChA Vec-based SlotMap-esque datastructure without removes.CjA staten handle\xe2\x80\x99s ID. Invalid if used in a different \xe2\x80\xa6BjThe type that holds the data in the leavesCnThe type of Storage This type is the same in all Tries and \xe2\x80\xa6CdInput must be collected over the preceeding stratum.CiA UDP length-delimited frame <code>Sink</code> (sending).DkThe suffix of columns in <code>Self::Schema</code> that are not part of \xe2\x80\xa6CfA variable name assigned to a pipeline in DFIR syntax.Da<strong>SemVer version</strong> as defined by https://semver.org.jA warning.CfAdds a new \xe2\x80\x9cbot\xe2\x80\x9d value to the nested lattice type.CfAdds a new \xe2\x80\x9ctop\xe2\x80\x9d value to the nested lattice type.DcType alias for <code>OperatorConstraints::write_fn</code>\xe2\x80\x99s type.CjModule for definiting algebraic structures and properties.AiReturns the value as boolCdEmit this graph as runnable Rust source code tokens.AiReturns the value as i128AiReturns the value as u128BlAtomize self: convert into an iter of atoms.ClCreate a bounded unsync MPSC channel. Panics if capacity \xe2\x80\xa6AkCreate a new TracingOptionsDkCreate an unsync MPSC channel, either bounded (if <code>capacity</code> \xe2\x80\xa6AoRelease channel of the compilerCmReturns whichever of the two ports are specified. If both \xe2\x80\xa6CbHydro compilation: the Hydro IR, Hydro to DFIR \xe2\x80\xa6Ch<code>context</code> ident, the name of the provided \xe2\x80\xa6CgModule for the user-facing <code>Context</code> object.CmDFIR is a low-level dataflow-based runtime system for the \xe2\x80\xa6CgDefinitions for interacting with locations using an \xe2\x80\xa6ClFlattens the keyed singleton into an unordered stream of \xe2\x80\xa6CiFlattens the keyed stream into an unordered stream of \xe2\x80\xa6CiSets the target to be an example with the given name, \xe2\x80\xa6BiThe name of the function that was called.ClReturns a mutable reference to the value associated with \xe2\x80\xa60Agget, but mutable outputBmReturns an exclusive reference to an element.CbModule for all <code>Handoff</code>-related items.ClAn operator which allows you to \xe2\x80\x9cinspect\xe2\x80\x9d each value \xe2\x80\xa6CnAn operator which allows you to \xe2\x80\x9cinspect\xe2\x80\x9d each element \xe2\x80\xa60AmDefines the inverse property.CmIf a pull iterator (true) or pusherator (false) should be \xe2\x80\xa6AfLattice traits for GHTDhLoop ID in which this operator is contained, or <code>None</code> if \xe2\x80\xa6BmSnapshot contents match another snapshot\xe2\x80\x99s.AgHuman-readable message.CdNode ID identifying this operator in the flat or \xe2\x80\xa6BcOperator instance arguments object.nOperator name.BaThe source span of this operator.CfOutput operator idents (or ref idents; used for push).DlAccumulates the elements of this stream <strong>across ticks</strong> by \xe2\x80\xa6CoA \xe2\x80\x9cprelude\xe2\x80\x9d for users of the <code>hydro_lang</code> crate.ChSets the profile to be used when building the crate. \xe2\x80\xa6Eg<code>assert!</code> but returns a <code>Result&lt;(), String&gt;</code> instead of \xe2\x80\xa6B`Module for <code>Reactor</code>.CjReturns a reactor for externally scheduling subgraphs, \xe2\x80\xa6AmReverses this variadic value.CkCreate a new diagnostic from the given span, level, and \xe2\x80\xa6DjGiven a timeout duration, returns an <code>Optional</code>  which will \xe2\x80\xa6BhTrigger a subgraph as an external event.BnReturns the <code>rustc</code> SemVer version.CmIdentifier for a function to call when doing work outside \xe2\x80\xa6AlTrait for Semiring Addition.BoAn array wrapper representing a fixed-size map.CjAn array wrapper representing a fixed-size set (modulo \xe2\x80\xa6CnThis as a variadic of exclusive (<code>mut</code>) references.BaThis as a variadic of references.BlThe iter type iterating the antichain atoms.BhSpecial marker to use an automatic name.nBorrowed data.CkConstruct a forest of Ghts (i.e. a ColtForest) with the \xe2\x80\xa6EhA <code>Conflict</code> lattice, stores a single instance of <code>T</code> and goes \xe2\x80\xa6ChDo not emit anything, but continue processing future \xe2\x80\xa6CgA key-value entry wrapper representing a singleton map.BhA type that will always be an empty set.C`The output of a Hydro generator created with \xe2\x80\xa6Akinternal node of a HashTrieBdGraph generation API for built flowsCoConvenience extension methods for the <code>Dfir</code> struct.CgA hostname is a unique identifier for a host in the \xe2\x80\xa6BgDOT/Graphviz graph writer for Hydro IR.hInfinityCaIterator type returned by <code>into_iter</code>.AkMap-union compound lattice.EgOutput type, should be <code>Self</code> but with <code>OldVal</code> replaced with \xe2\x80\xa6AnSnapshot metadata information.0CjHelper trait for determining the weakest of two orderings.CeA wrapper christening a closure as a lattice morphismChMulti-Output Operators: Operators with multiple outputs.lAn operator.DfA <em>nullable</em> Rust value that can asynchronously change over \xe2\x80\xa60DjA trait implemented by valid ordering markers (<code>TotalOrder</code> \xe2\x80\xa6CjThe nodes that store logs in Paxos. Usually the acceptors.ClThe nodes that output the results of Paxos. Proposers in \xe2\x80\xa6EhAn empty trait used to denote <code>Polarity</code>: either <strong>send</strong> or \xe2\x80\xa6BiSealed trait for variadic lists of ports.BaReceiving half of an unsync MPSC.CjRecv-specific variant of <code>Port</code>. An input port.BbThe underlying type when revealed.AjAlias trait for semirings.CkSend-specific variant of <code>Port</code>. An output port.AbSet-union lattice.BkConfigures how insta operates at test time.BeA helper to work with file snapshots.AmTag for <code>StateId</code>.BlAlways reset, a ssociated with the subgraph.CkInput must be collected over the previous tick but also \xe2\x80\xa6CmThe un-referenced variadic. Each item will have one layer \xe2\x80\xa6CbAny number of unnamed (or optionally named) ports.AfA variadic tuple list.AkVec-union compound lattice.EaAdds all <code>DfirStatement</code>s within the <code>DfirCode</code> to this \xe2\x80\xa6ChAdds a new host to the fleet with the given name and \xe2\x80\xa6DcAdds a new loop with the given parent (or <code>None</code> for \xe2\x80\xa6AjReturns the value as bytesDbGenerate a deterministic <code>Ident</code> for the given loop ID.0BmReturns the value as slice of content values.CnCreate a listening tcp socket, and then as new connections \xe2\x80\xa6BoDFIR\xe2\x80\x99s inner (intra-subgraph) compiled layer.CgCompletes the forward reference with the given live \xe2\x80\xa6ChReturns if <code>item</code> is contained in this range.DgReturns <code>true</code> if the (entire) row is found below in the \xe2\x80\xa6AeCheck for containmentAeThe snapshot contentsAdCopy self per-value.Eg<code>df</code> ident, the name of the <code>dfir_rs::scheduled::graph::Dfir</code> \xe2\x80\xa6BjThe span of the output out of the handoff.CdReturn an iterator over all edge IDs <code>E</code>.CbIterator of all edge IDs <code>GraphEdgeId</code>.ChGets the elements of the backtrace including inlined \xe2\x80\xa6BmThe path to the file where this call occured.AcFlo semantics type.CkExecutes the provided closure for every element in this \xe2\x80\xa6CmCreates a Key from a raw index. Avoid using this function \xe2\x80\xa6AbGeneric arguments.EdFor each entry in <code>self</code>, looks up the entry in the <code>from</code> \xe2\x80\xa6AcGet a host by name.AhReturns the current infoAnDefines the identity property.DgTurns into an iterator of items <code>UnVec</code> \xe2\x80\x93 i.e. iterate \xe2\x80\xa6CbReturns true if the <code>SlotVec</code> is empty.ChReturns true if the <code>PriorityStack</code> is empty.BfChecks if this variadic type is empty.AdReturn true if emptyBkIf this level is <code>Level::Error</code>.CjIf this diagnostic\xe2\x80\x99s level is <code>Level::Error</code>.CeIterate the key-value pairs, where the value is a \xe2\x80\xa60DeThe <code>lattices</code> crate provides ergonomic and composable \xe2\x80\xa6CmType definitions for distributed locations, which specify \xe2\x80\xa6AkIterator over all loop IDs.DcIteratively/recursively construct a <code>Ctx</code> variadic list.AmThe metadata in the snapshot.CmChecks that the given closure is a morphism. For now does \xe2\x80\xa60AnA multiset backed by a HashMapDjCreate a new <code>Conflict</code> lattice instance from a value using \xe2\x80\xa6FkCreate a <code>DomPair</code> from the given <code>Into&lt;Key&gt;</code> and <code>Into&lt;Val&gt;</code>.EhCreate a new <code>Min</code> lattice instance from an <code>Into&lt;T&gt;</code> value.DjCreate a <code>Pair</code> from the given values, using <code>Into</code>.EhCreate a new <code>Point</code> lattice instance from a value using <code>Into</code>\xe2\x80\xa6EcCreate a new <code>VecUnion</code> from an <code>Into&lt;Vec&lt;Lat&gt;&gt;</code>.DiCreate a new <code>WithBot</code> lattice instance from a value using \xe2\x80\xa6DiCreate a new <code>WithTop</code> lattice instance from a value using \xe2\x80\xa6BcCreate a new Ght from the iterator.DhCreate a new <code>MapUnion</code> from an <code>Into&lt;Map&gt;</code>.EmCreate a new <code>MapUnionWithTombstones</code> from an <code>Into&lt;Map&gt;</code> and \xe2\x80\xa6DhCreate a new <code>SetUnion</code> from an <code>Into&lt;Set&gt;</code>.EmCreate a new <code>SetUnionWithTombstones</code> from an <code>Into&lt;Set&gt;</code> and \xe2\x80\xa6DiCreate a new <code>UnionFind</code> from an <code>Into&lt;Map&gt;</code>.AmWill not render loops if set.BnIterator of node IDs <code>GraphNodeId</code>.EhNumber of arguments i.e. <code>operator(a, b, c)</code> has <code>num_args = 3</code>\xe2\x80\xa6CkOpens this as dot/graphviz graph in the Graphviz Online \xe2\x80\xa6BmOpens Hydro IR roots as a single DOT diagram.CjDefinitions for the <code>Optional</code> live collection.DhPops an element from the stack and return <code>(priority, item)</code>.CdA synchronous wrapper around <code>Self::run</code>.BmRuns the dataflow until the next tick begins.CnRun a single tick on the host\xe2\x80\x99s process. Returns true if \xe2\x80\xa6EbReturns if <code>a</code> and <code>b</code> are equivalent, i.e. in the same set.CfSaves Hydro IR roots as a DOT/Graphviz file. If no \xe2\x80\xa6AmDefines a semiring structure.CmA Vec-based SlotMap-esque datastructure and corresponding \xe2\x80\xa6CeReturns a keyed singleton with a snapshot of each \xe2\x80\xa60CiReturns an optional value corresponding to the latest \xe2\x80\xa6CmGiven a tick, returns a optional value corresponding to a \xe2\x80\xa6CiReturns a singleton value corresponding to the latest \xe2\x80\xa6CnGiven a tick, returns a singleton value corresponding to a \xe2\x80\xa6BgThe span of the input into the handoff.BfNodes belonging to the given subgraph.ChConverts this into a serializable and deserializable \xe2\x80\xa6DdEmit if possible, otherwise return <code>Err</code> containing a \xe2\x80\xa6CnTry to give a value to the handoff, may return an error if \xe2\x80\xa6BiSee <code>TryCanReceive::try_give</code>.DeAlias for <code>Handoff::try_give</code> on the inner <code>H</code>.0CiTries to send the value to the receiver without blocking.AhVariadic patterns macro.0BdVariadic expressions (values) macro.0AeVariadic types macro.0ClThe operator\xe2\x80\x99s codegen. Returns code that is emited is \xe2\x80\xa6Bkzip across all the vecs in this VariadicVecChCaptures an entire backtrace, whose elements will be \xe2\x80\xa6CgWrapper that displays only the tokens of a parsed expr.BcDebug displays the type\xe2\x80\x99s tokens.CgThe delay (soft barrier) type, for each input to an \xe2\x80\xa6ChTrait for use with the <code>demux_enum</code> operator.CiAn abstract \xe2\x80\x9cmeta graph\xe2\x80\x9d representation of a DFIR \xe2\x80\xa6CbA node, corresponding to an operator or a handoff.CiEnum for choosing between mermaid, dot, and reactflow \xe2\x80\xa6CdA handoff\xe2\x80\x99s ID. Invalid if used in a different \xe2\x80\xa6CnAn intermediate node in a Hydro graph, which consumes data \xe2\x80\xa6ClAn root in a Hydro graph, which is an pipeline that doesn\xe2\x80\xa6CmKeyed Folds: Operators which accumulate elements together \xe2\x80\xa6CmLabel for a graph node - can be either a static string or \xe2\x80\xa6AcAll DFIR operators.DfA key-value entry wrapper around <code>Option&lt;(K, V)&gt;</code> \xe2\x80\xa6DiA wrapper around <code>Option</code>, representing either a singleton \xe2\x80\xa6BkPort can either be an int or a name (path).BmConvenience range: zero or more (any number).B`Reactflow.js interactive graphs.DkSpecifies a crate that uses <code>hydro_deploy_integration</code> to be \xe2\x80\xa6BjError returned by the <code>Sender</code>.DjA serializable and deserializable version of <code>Span</code>. Cannot \xe2\x80\xa6CkA single Rust value that can asynchronously change over \xe2\x80\xa60CeA vector that supports efficient deletion without \xe2\x80\xa6DiMarks that the <code>ForwardHandle</code> will send a live collection \xe2\x80\xa6CmA UDP length-delimited frame <code>Stream</code> (receiving).ClMarks the stream as being unbounded, which means that it \xe2\x80\xa6AjUnion-find data structure.AcUnion-find lattice.CiThe output of <code>rustc -vV</code> was not valid utf-8.DfWindowing Operators: Operators for windowing <code>loop</code> inputs.CjA windowing operator, for moving data into a loop context.CgA label with an operation name and expression argumentsCnAdds an \xe2\x80\x9cinput\xe2\x80\x9d operator, returning a handle to insert \xe2\x80\xa6DoAdd <code>this</code> and <code>delta</code> together, returning the new value.CaAdds state to the context and returns the handle.CjAdds referenceable state into this instance. Returns a \xe2\x80\xa6CnAsynchronously yields this batch of keyed elements outside \xe2\x80\xa6CmAsynchronously yields the value of this singleton outside \xe2\x80\xa60ClAsynchronously yields this batch of elements outside the \xe2\x80\xa6DhGiven a stream of pairs <code>(K, V1)</code> and a bounded stream of \xe2\x80\xa6CgArguments provided by the user into the operator as \xe2\x80\xa6CmPlatform-independent interface for collecting backtraces, \xe2\x80\xa6DhHelper which calls many other <code>check_*</code> functions in this \xe2\x80\xa6DiThe degree (number of edges/vertices) going into <code>v</code>, i.e. \xe2\x80\xa6CcSends all elements of this stream to a provided \xe2\x80\xa6kDFIR syntaxAbEnd (upper) bound.ClReturns a stream with the current count tupled with each \xe2\x80\xa6AcSamples per second.BoConvert the DFIR code AST into a graph builder.AmLoads a snapshot from a file.ClIteratively processes the elements in each group using a \xe2\x80\xa6BkGet a GraphApi instance for this built flowBhHelper extensions for <code>Dfir</code>.CnEnables \xe2\x80\x9ctest mode\xe2\x80\x9d for Hydro, which makes it possible \xe2\x80\xa6AoExposes some library internals.Cdinto_iter for leaf elements, or None for inner nodesEaTurns this <code>HomogenousVariadic&lt;T&gt;</code> into an iterator of items \xe2\x80\xa6AoReturn if the handoff is empty.C`If this output\xe2\x80\x99s buffer is empty, return true.DdIf this sender or the corresponding <code>Receiver</code> is closed.BoGets the number of keys in the keyed singleton.AnDefines the linearity propertyCmCreates a handoff edge and returns the corresponding send \xe2\x80\xa6DgModule containing the <code>MapUnion</code> lattice and aliases for \xe2\x80\xa6EdMultiply <code>this</code> and <code>delta</code> together, returning the new value.DeNaive compare based on the <code>Merge::merge</code> method. This \xe2\x80\xa6CkCreate a new inbox on the host with the given interface \xe2\x80\xa6ClGet a node\xe2\x80\x99s loop context (or <code>None</code> for root).CfReturns the item with the highest priority and its \xe2\x80\xa6DgPoll for a value. NOTE: takes <code>&amp;mut self</code> to prevent \xe2\x80\xa6CjIf there are any stored matches from previous calls to \xe2\x80\xa6BmWhat named or numbered input ports to expect?BnWhat named or numbered output ports to expect?ClConnects to the acquired resources and prepares the host \xe2\x80\xa6EgRuns <code>deploy()</code>, and <code>start()</code>, waits for the trigger future, \xe2\x80\xa6CmDFIR\xe2\x80\x99s outer scheduled layer. Deals with inter-subgraph \xe2\x80\xa6AnDefines a semigroup structure.DgModule containing the <code>SetUnion</code> lattice and aliases for \xe2\x80\xa6CkDefinitions for the <code>Singleton</code> live collection.BjReturns the current value for map sorting.DkSplit the port list, returning the prefix and <code>Self::Suffix</code> \xe2\x80\xa6AhSplits a refvar variadicBlReturns an exclusive reference to the state.BhReturns a shared reference to the state.C`Iterator over all subgraphs, ID and members: \xe2\x80\xa6FaHelper creates a TCP <code>Stream</code> and <code>Sink</code> for <code>Bytes</code> strings \xe2\x80\xa6FeHelper creates a TCP <code>Stream</code> and <code>Sink</code> for <code>str</code>ings delimited \xe2\x80\xa6CgVarious utilities for testing short Hydro programs, \xe2\x80\xa6DhUsed to emulate <code>proc_macro::Diagnostic::emit</code> by turning \xe2\x80\xa6ClTopologically sorts a set of nodes. Returns a list where \xe2\x80\xa6ClType persistence arguments. Corersponds to a (suffix) of \xe2\x80\xa6C`How many generic type arguments can be provided.FaHelper creates a UDP <code>Stream</code> and <code>Sink</code> for <code>Bytes</code> strings \xe2\x80\xa6FeHelper creates a UDP <code>Stream</code> and <code>Sink</code> for <code>String</code>s delimited \xe2\x80\xa6BhCreate an unbounded unsync MPSC channel.Diconvert entries to <code>&lt;UnRefVar as VariadicExt&gt;::AsRefVar</code>DiGets the contents of <code>self</code> when it has a value, otherwise \xe2\x80\xa6iVariadicsDfWrites this graph as DOT (graphviz) into the given <code>Write</code>.CjTrait representing somethign which we can give an item to.ChTrait for recursively revealing the underlying types \xe2\x80\xa6CiA directed multigraph where an vertex\xe2\x80\x99s inbound and \xe2\x80\xa6DgDiagnostic. A warning or error (or lower <code>Level</code>) with a \xe2\x80\xa6DjMarks that the <code>ForwardHandle</code> is for a \xe2\x80\x9cforward reference\xe2\x80\xa6CmImplementation of Fuzzy Logic semiring ([0, 1], max, min, \xe2\x80\xa6AoTag for <code>HandoffId</code>.Cjtype for all elements of the variadic being wrapped in \xe2\x80\xa6CjIterator type returned by <code>Self::iter_any_mut</code>.CjIterator type returned by <code>Self::iter_any_ref</code>.ClTrait for lattice partial order comparison PartialOrd is \xe2\x80\xa6FbDerives [<code>PartialEq</code>], [<code>PartialOrd</code>], and <code>LatticeOrd</code> together.EnDerives <code>PartialEq</code>, <code>PartialOrd</code>, and <code>LatticeOrd</code> together.CiHelper trait for determining the weakest of two retry \xe2\x80\xa6DjHelper struct which displays the span as <code>path:row:col</code> for \xe2\x80\xa6CcAn object-safe version of <code>RangeBounds</code>.ClDescribes how to connect to a service which is listening \xe2\x80\xa600CeA subgraph\xe2\x80\x99s ID. Invalid if used in a different \xe2\x80\xa6CjMarks the stream as being totally ordered, which means \xe2\x80\xa6EgThe <code>Boundedness</code> of each entry\xe2\x80\x99s value; <code>Bounded</code> means it \xe2\x80\xa6AiA Vec-based FIFO handoff.CmFulfills a non-determinism guard parameter by declaring a \xe2\x80\xa6DkConvert an exclusive (<code>mut</code>) reference to this variadic into \xe2\x80\xa6CkConvert a reference to this variadic into a variadic of \xe2\x80\xa6BmLike <code>Self::bind</code> but for futures.CmBuild date of the compiler; this was removed between Rust \xe2\x80\xa6AnOperator categories, for docs.DgThe degree (number of edges/vertices) coming out of <code>v</code>, \xe2\x80\xa6CjTrait for the <code>demux_enum</code> derive and operator.CkPushes self into the corresponding output pusherator in \xe2\x80\xa6DdCompatibility for <code>proc_macro</code> diagnostics, which are \xe2\x80\xa6CeGet the source and destination ports for an edge: \xe2\x80\xa6CkYields the elements of this keyed singleton back into a \xe2\x80\xa6ChYields the elements of this keyed stream back into a \xe2\x80\xa6CmReturns this optional back into a top-level, asynchronous \xe2\x80\xa6CnReturns this singleton back into a top-level, asynchronous \xe2\x80\xa6CmYields the elements of this stream back into a top-level, \xe2\x80\xa6BnEscapes a string for use in a DOT graph label.CaReturns the expression that created the snapshot.ClAn operator that both filters and maps values. It yields \xe2\x80\xa6CkAn operator that both filters and maps each value, with \xe2\x80\xa6CnAn operator that both filters and maps. It yields only the \xe2\x80\xa6CiAn operator that both filters and maps. It yields the \xe2\x80\xa61DiA special case of <code>Stream::fold</code>, in the spirit of SQL\xe2\x80\x99s \xe2\x80\xa6CkHydro is a high-level distributed programming framework \xe2\x80\xa6BiReturns the current input file reference.BaReturns the input file reference.ClProduces a new keyed stream that \xe2\x80\x9cmerges\xe2\x80\x9d the inputs \xe2\x80\xa6CnProduces a new stream that interleaves the elements of the \xe2\x80\xa6DbConsume the <code>TrySendError</code>, returning the unsent value.DkTransforms this stream into a <code>KeyedStream</code>, where the first \xe2\x80\xa6EgConvert this <code>Reactor</code> into a <code>std::task::Waker</code> for use with \xe2\x80\xa6DfWaits for all tasks spawned with <code>Self::spawn_tasks</code> to \xe2\x80\xa6BkAlias for <code>Context::join_tasks</code>.ClGenerate a (almost certainly) unique identifier with the \xe2\x80\xa6CbMap the values into using the <code>map_fn</code>.DkComputes the maximum element in the stream as an <code>Optional</code>, \xe2\x80\xa6BhMerge a matching Ght node into this nodeCmReturn a handle to the meta graph, if set. The meta graph \xe2\x80\xa6DcConvert all exclusive (<code>mut</code>) references into shared \xe2\x80\xa6BmNetworking APIs for <code>KeyedStream</code>.BhNetworking APIs for <code>Stream</code>.CmCreates a new outbox on the host with the given interface \xe2\x80\xa6B`Don\xe2\x80\x99t include tee IDs in nodesDiOpens the graph based on <code>graph_type</code>, which can be parsed \xe2\x80\xa6CmImplements the core Paxos algorithm, which uses a cluster \xe2\x80\xa6CcPusherator generics and argument order conventions:Ej<code>assert_eq!</code> but returns a <code>Result&lt;(), String&gt;</code> instead of \xe2\x80\xa6CkWaits for a specific regex process output before returning.DgReturns an <code>Iterator</code> of any immediately available items \xe2\x80\xa6EeRuns <code>deploy()</code>, and <code>start()</code>, waits for CTRL+C, then runs \xe2\x80\xa6CeHydro/DFIR Deterministic Simulation Testing FrameworkCeA vector that supports efficient deletion without \xe2\x80\xa6DdReturn an iterator of all successor edge IDs <em>and</em> vertex \xe2\x80\xa6DeTake the inner datastructure, similar to <code>std::mem::take</code>.BeSee <code>Handoff::take_inner</code>.0EaHelper creates a TCP <code>Stream</code> and <code>Sink</code> from the given \xe2\x80\xa6BkWrites this graph as mermaid into a string.EcReturns a UDP <code>Stream</code>, <code>Sink</code>, and address for the given \xe2\x80\xa6CfUnion-find data structure, see <code>UnionFind</code>.DhModule containing the <code>UnionFind</code> lattice and aliases for \xe2\x80\xa6FbHelper creates a Unix <code>Stream</code> and <code>Sink</code> for <code>Bytes</code> strings \xe2\x80\xa6ElHelper creates a Unix <code>Stream</code> and <code>Sink</code> for <code>str</code>ings \xe2\x80\xa6BoIterate over the values by exclusive reference.0ChCreate a label for an operation with multiple expressionCcWrite an edge between nodes with optional labeling.CjWrites a line to the child process stdin. A newline is \xe2\x80\xa6AoWrite a node within a location.ChMarks the stream as having non-deterministic message \xe2\x80\xa6CkImplementation of the Binary Trust semiring ({0,1}, OR, \xe2\x80\xa6ClA marker trait indicating whether a stream\xe2\x80\x99s length is \xe2\x80\xa6Cc<code>ColtGet</code> without the first (head) trie.CiThe other side of a demux, with a port to extract the \xe2\x80\xa6ClContains runtime information passed by Hydro Deploy to a \xe2\x80\xa60CdMarks the stream as having deterministic message \xe2\x80\xa6BoConfiguration for graph generation in examples.AgID to identify an edge.AcGraph output formatCfID to identify a loop block in <code>DfirGraph</code>.DfID to identify a node (operator or handoff) in <code>DfirGraph</code>.CiA variadic list of Handoff types, represented using a \xe2\x80\xa6CiA handle onto the metadata part of a Handoff, with no \xe2\x80\xa6CdA builder for constructing a host in the simulation.DkDeployment backend that uses <code>hydro_deploy</code> for provisioning \xe2\x80\xa6CgA source in a Hydro graph, where data enters the graph.EbStreaming elements of type <code>V</code> grouped by a key of type <code>K</code>.0BlLattice Folds: Folds based on lattice-merge.BkSame as <code>From</code> but for lattices.BaDerives <code>LatticeFrom</code>.0lLLVM versionCf<code>Vec</code>-backed <code>MapUnion</code> lattice.CiThe other side of a merge, with a port to extract the \xe2\x80\xa6CgA wrapper christening a closure as a monotonic functionChA variadic where each item is an exclusive reference \xe2\x80\xa6GnPersistence lifetimes: <code>&#39;none</code>, <code>&#39;tick</code>, <code>&#39;static</code>, or <code>&#39;mutable</code>.CfPersistent Operators: Persistent (stateful) operators.AgPersit or delete tuplesDhA variadic where each item is a shared reference <code>&amp;item</code>.AgA single tick duration.BhAn error occurred in parsing the semver.Cf<code>Vec</code>-backed <code>SetUnion</code> lattice.DhA handle into a particular <code>Dfir</code> instance, referring to dataB`Tag for <code>SubgraphId</code>.BlA point in time during execution on process.DfUn-Windowing Operators: Operators for collecting <code>loop</code> \xe2\x80\xa6CkAn un-windowing operator, for moving data out of a loop \xe2\x80\xa6CcExtension methods/types for <code>Variadic</code>s.Bhtrait for sets or multisets of variadicsBltrait for Variadic of vecs, as formed by \xe2\x80\xa6CmRustc version plus metadata like git short hash and build \xe2\x80\xa6BaConfiguration for writing graphs.CmAborts all tasks spawned with <code>Self::spawn_tasks</code>.BlAlias for <code>Context::abort_tasks</code>.B`Defines the bilinearity propertyCmType declarations for boundedness markers, which indicate \xe2\x80\xa6DkCollects all the elements of this stream into a single <code>Vec</code> \xe2\x80\xa6DdSimple singleton or array collection with <code>cc_traits</code> \xe2\x80\xa6AkCommit date of the compilerBkGit short hash of the build of the compilerBeThe inverse of <code>bind_tcp</code>.CgGets a exclusive (mut) ref to the internal context, \xe2\x80\xa6CaReveals the underlying lattice types recursively.AlHuman description, for docs.AoReturns the current descriptionCbReturns the description that created the snapshot.BhParse DFIR syntax without emitting code.0CjCreate a runnable graph instance using DFIR\xe2\x80\x99s custom \xe2\x80\xa60CkReturns any diagnostics generated by the surface syntax \xe2\x80\xa6AgWrite DOT graph to fileDhReturns the version metadata for <code>cmd</code>, which should be a \xe2\x80\xa6CkForce the generation of a parent node but retain ref to \xe2\x80\xa6EfFor a <code>Ported</code> value like <code>[port_in]name[port_out]</code>, get the \xe2\x80\xa6BaDefines the idempotency property.CkThe span of the import!() expression that imported this \xe2\x80\xa6BlPort values used as this operator\xe2\x80\x99s input.EhCreates an edge going from <code>src</code> to <code>dst</code> and returns the edge \xe2\x80\xa6CbInsert an edge between nodes thru the given ports.CmCreate a new loop context, with the given parent loop (or \xe2\x80\xa6BkInsert a node, assigning the given varname.CmInstantiate the sink as the source host connecting to the \xe2\x80\xa6Bnwrap all elements of the variadic in `Option``BhGets the inner by value, consuming self.000000000000DiConverts this optional into a <code>Stream</code> containing a single \xe2\x80\xa6DjConverts this singleton into a <code>Stream</code> containing a single \xe2\x80\xa6CnIterator for the tuples (from leaf nodes) or nothing (from \xe2\x80\xa6BjUse full/long labels instead of short onesDhGet a loop context\xe2\x80\x99s parent loop context (or <code>None</code> for \xe2\x80\xa6CjReturns the the stratum number of the largest (latest) \xe2\x80\xa6EaMerge <code>this</code> and <code>delta</code> together, returning the new value.AhReturns the module name.B`Will not render handoffs if set.BdDon\xe2\x80\x99t show metadata in graph nodesBkVariable names will not be rendered if set.Cjgiven a prefix, return an iterator through the items belowDcPretty, human-readable printing of <code>proc_macro2::Span</code>s.CeWaits for a specific string process output before \xe2\x80\xa6CmEnqueues subgraphs triggered by external events, blocking \xe2\x80\xa6CnRemove an edge from the graph. If the edgeId is found then \xe2\x80\xa6CmRemoves an edge and its corresponding ports and edge type \xe2\x80\xa6AaRemoves the info.BcReverses an AsRefVar variadic valueCjRuns the current stratum of the dataflow until no more \xe2\x80\xa6DhLaunches all tasks requested with <code>Self::request_task</code> on \xe2\x80\xa6AdStart (lower) bound.DfRuns <code>start()</code>, waits for the trigger future, then runs \xe2\x80\xa6C`Subgraph ID in which this operator is contained.EbHelper creates a Unix <code>Stream</code> and <code>Sink</code> from the given \xe2\x80\xa6oNon-DeterminismCeallocate a new VariadicHashSet with a specific hasherCiallocate a new VariadicCountedHashSet with a specific \xe2\x80\xa6CkCore graph writing logic that works with any GraphWrite \xe2\x80\xa6DgA variation of boundedness specific to <code>KeyedSingleton</code>, \xe2\x80\xa6DkA wrapper struct which implements <code>Clear</code> by setting self to \xe2\x80\xa6BkError output from the command that was run.DgA wrapper around <code>std::process::Child</code> that allows us to \xe2\x80\xa6AnA multiset backed by a HashMapBbMermaid graph writer for Hydro IR.CfTrait for transforming the values of a map without \xe2\x80\xa6CkImplementation of the Multiplicity semiring (N, +, *, 0, 1)ChSpecification of the named (or unnamed) ports for an \xe2\x80\xa6DkHelper struct which displays the span as <code>row:col</code> for human \xe2\x80\xa6CgA key-value entry wrapper representing a singleton map.CgA wrapper around an item, representing a singleton set.DgSuffixSchema variadic: the suffix of <code>Self::Schema</code> from \xe2\x80\xa6DfSuffixSchema variadic: the suffix of the schema <em>from this </em>\xe2\x80\xa6AoThe duration between two ticks.CfThis enumeration is the list of the possible error \xe2\x80\xa6CdA UDP undelimited bytes <code>Sink</code> (sending).DhA UDP newline-delimited <code>String</code> <code>Sink</code> (sending).Cg<code>Vec</code>-backed <code>UnionFind</code> lattice.CnAdds a new compiled subgraph with the specified inputs and \xe2\x80\xa6DjAssert that <code>self</code> is in a consistent state, for debugging. \xe2\x80\xa6CfBenchmarks transactional workloads by concurrently \xe2\x80\xa6DjThe main function of this module. Compiles a <code>DfirCode</code> AST \xe2\x80\xa6BiGets the current tick (local time) count.0DgDeployment backend for Hydro that uses <code>hydro_deploy</code> to \xe2\x80\xa6CnSets the display name for this service, which will be used \xe2\x80\xa6BaDefines the distributive propertyBlIf set, what the write the folded output to.BnOperator generic (type or lifetime) arguments.AcGet a host by name.CnModule for variadic handoff port lists, <code>PortList</code>.BmTurn this range into a human-readable string.DbIf <code>self</code> is null, emits a null optional, but if it \xe2\x80\xa6EdResolve the <code>ipv4</code> <code>SocketAddr</code> from an IP or hostname string.EjReturns <code>true</code> if <code>self</code> is not <code>PortIndexValue::Elided</code>.DlIterate this variadic as <code>&amp;mut dyn Any</code> exclusive references.CnIterate this variadic as <code>&amp;dyn Any</code> references.CmDefinitions for the <code>KeyedStream</code> live collection.DcConvert from the <code>Other</code> lattice into <code>Self</code>.BdVersion of LLVM used by the compilerDfTransforms each value by invoking <code>f</code> on each key-value \xe2\x80\xa60CnChecks that the given closure is a monotonic function. For \xe2\x80\xa60CmGo to the next stratum which has work available, possibly \xe2\x80\xa6BhWill not render pull/push shapes if set.BfSubgraphs will not be rendered if set.DkGet the <code>OperatorInstance</code> for a given node. Node must be an \xe2\x80\xa6CeGet the debug variable name attached to a graph node.CjOpen DOT/Graphviz visualization in browser for a BuiltFlowCeOpen mermaid visualization in browser for a BuiltFlowCgOpen ReactFlow visualization in browser for a BuiltFlowCmOpens this as a mermaid graph in the mermaid.live browser \xe2\x80\xa6CaOpens Hydro IR roots as a single mermaid diagram.BmPort values used as this operator\xe2\x80\x99s output.DfReturn an iterator of all predecessor edge IDs <em>and</em> vertex \xe2\x80\xa6DkA special case of <code>Stream::reduce</code>, in the spirit of SQL\xe2\x80\x99s \xe2\x80\xa6DhPrepares an async task to be launched by <code>Self::spawn_tasks</code>.BmAlias for <code>Context::request_task</code>.CeEagerly samples the optional as fast as possible, \xe2\x80\xa6CfEagerly samples the singleton as fast as possible, \xe2\x80\xa6ClGiven a time interval, returns a stream corresponding to \xe2\x80\xa600CiSaves Hydro IR roots as a Mermaid diagram file. If no \xe2\x80\xa6CkFinds the strongly connected components in the graph. A \xe2\x80\xa6Cl\xe2\x80\x9cMoves\xe2\x80\x9d elements of this stream to a new distributed \xe2\x80\xa6Ck\xe2\x80\x9cMoves\xe2\x80\x9d elements of this stream from a cluster to a \xe2\x80\xa6BdSets the info from a content object.EgRuns <code>start()</code>, waits for CTRL+C, then runs <code>stop()</code>. This is \xe2\x80\xa6AeCreate a static labelAoIterator over all subgraph IDs.DjEmits all if possible, otherwise returns <code>Err</code> containing a \xe2\x80\xa6DiReturns the <code>rustc</code> SemVer version and additional metadata \xe2\x80\xa6ChSupplies the (mandatory) process that runs on this host.DkClone a variadic of references <code>AsRefVar</code> into a variadic of \xe2\x80\xa6CjRepresents an unknown, third-party service that is not \xe2\x80\xa6EaBase implementation to constrain that <code>DemuxEnum&lt;SOMETHING&gt;</code> \xe2\x80\xa6CiA handle that can be used to fulfill a forward reference.ChComposable bimorphism, wraps an existing morphism by \xe2\x80\xa6ClA trait to iterate through the items in a Ght based on a \xe2\x80\xa6AkTypes of edges in Hydro IR.C`Types of nodes in Hydro IR for styling purposes.CnA message sender is used to send messages to an inbox on a \xe2\x80\xa6CmMonotone accumulation: can delay to reduce flow rate, but \xe2\x80\xa6Di<code>OperatorConstraints::write_fn</code> for the null operator - an \xe2\x80\xa6CiMoves data into the next loop iteration within a loop \xe2\x80\xa6CjAn error occurred in parsing a version component as an \xe2\x80\xa6BmTrait for splitting a list of ports into two.CkA priority stack in which elements of the same priority \xe2\x80\xa6Do<code>crate::collections::ArraySet</code>-backed <code>SetUnion</code> lattice.DeSpecial case of <code>DemuxEnum</code> for when there is only one \xe2\x80\xa6CiHelper trait for splitting a variadic into two parts. \xe2\x80\xa6BcDefines when state should be reset.BiA framed TCP <code>Sink</code> (sending).CjA Handoff which is part of a \xe2\x80\x9cfamily\xe2\x80\x9d of handoffs. \xe2\x80\xa6CiKeeps track of resources which may need to be cleaned up.CmTrait representing something which we can attempt to give \xe2\x80\xa6BiA framed UDP <code>Sink</code> (sending).BcDefines an abelian group structure.EfAdd a single <code>DfirStatement</code> line to this <code>DfirGraph</code> in the \xe2\x80\xa6CgArguments provided by the user into the operator as \xe2\x80\xa6BjUnparsed arguments, for singleton parsing.CaReveal the inner value as an exclusive reference.000000000000BmReveal the inner value as a shared reference.000000000000BcDefines the associativity property.DhGets the <code>Tick</code> inside which this stream is synchronously \xe2\x80\xa6ClBinds the settings to the current thread and resets when \xe2\x80\xa6BgReturns a copy of the current settings.DkClone a variadic of references <code>AsRefVar</code> into a variadic of \xe2\x80\xa6DiCollects the immediately available items from the <code>Stream</code> \xe2\x80\xa6BcDefines the commutativity property.CnForms the cross-product (Cartesian product, cross-join) of \xe2\x80\xa6CnSends each group of this stream at each source member to a \xe2\x80\xa6CmSends each group of this stream to a specific member of a \xe2\x80\xa6CjSends elements of this stream to specific members of a \xe2\x80\xa6CjSends elements of this stream at each source member to \xe2\x80\xa6ClProvides a oneshot channel to handshake with the binary, \xe2\x80\xa6AlGenerate DOT graph as stringDgOutputs everything in this stream that is <em>not</em> contained in \xe2\x80\xa6DhAn operator which allows you to \xe2\x80\x9cname\xe2\x80\x9d a <code>HydroNode</code>. \xe2\x80\xa60000CnSynchronously yields this keyed singleton outside the tick \xe2\x80\xa6CmSynchronously yields this optional outside the tick as an \xe2\x80\xa6CnSynchronously yields this singleton outside the tick as an \xe2\x80\xa6BcGet a loop context\xe2\x80\x99s child loops.CfBoth the exact snapshot contents and the persisted \xe2\x80\xa6CjWhen modules are imported into a flat graph, they come \xe2\x80\xa6BlWill not render singleton references if set.AfGet subgraph for node.ChOp text will only be their name instead of the whole \xe2\x80\xa6ClRemove a vertex from the graph, it must have no edges to \xe2\x80\xa6CmThis resolves the innermost content in a chain of wrapped \xe2\x80\xa6CjRuns the dataflow until no more (externally-triggered) \xe2\x80\xa6CiA synchronous wrapper around <code>Self::run_tick</code>.CfEnables forceful sorting of maps before serialization.CmCommand to setup tracing before running the command, i.e. \xe2\x80\xa6AjReturns the snapshot name.AjReturns the snapshot path.D`Get a subgraph\xe2\x80\x99s loop context (or <code>None</code> for root).ClComputes the topological sort of the nodes of a possibly \xe2\x80\xa6Ck<code>ToString::to_string</code>, but without panic on OOM.000EhCreates a <code>DiMulGraph</code> with pre-allocated memory for <code>capacity</code>\xe2\x80\xa6DdCreates a new <code>UnionFind</code> with the given key capacity \xe2\x80\xa6AmSettings configuration macro.CoWrites this graph as mermaid into the given <code>Write</code>.ChLike BindType, but includes metadata for determining \xe2\x80\xa6BmData structure design for our COLT is unique.CmReactFlow.js graph writer for Hydro IR. Outputs JSON that \xe2\x80\xa6DjMapping from keys of type <code>K</code> to values of type <code>V</code>.0ClModule Boundary, used for importing modules. Only exists \xe2\x80\xa6BbTrait for Semiring Multiplication.CkOperator generic arguments, split into specific categories.CaBimorphism which pairs up the two input lattices.DiHelper struct for <code>PortIndex</code> which keeps span information \xe2\x80\xa6CkRolling statistics tracker for computing mean, standard \xe2\x80\xa6DiA handle to DFIR <code>Context</code> which can be used inside quoted \xe2\x80\xa6CgTypes of connection that a service can receive when \xe2\x80\xa6ChA UDP undelimited bytes <code>Stream</code> (receiving).DkA UDP newline-delimited <code>String</code> <code>Stream</code> (receivng).ChEnum for choosing between mermaid and dot graph writing.EcAsserts that <code>self</code> is a valid port list from <code>handoffs</code>. \xe2\x80\xa6AkReturns the assertion line.ClExplicitly \xe2\x80\x9ccasts\xe2\x80\x9d the keyed stream to a type with a \xe2\x80\xa6CfExplicitly \xe2\x80\x9ccasts\xe2\x80\x9d the stream to a type with a \xe2\x80\xa6EeReturns a newline-delimited bytes <code>Sender</code>, <code>Receiver</code>, and \xe2\x80\xa6DkThis is the same thing as <code>bind_tcp_bytes</code> except instead of \xe2\x80\xa6E`Returns a length-delimited bytes <code>Sink</code>, <code>Stream</code>, and \xe2\x80\xa6EaReturns a newline-delimited bytes <code>Sink</code>, <code>Stream</code>, and \xe2\x80\xa6ClDetermines whether this host can connect to another host \xe2\x80\xa6CmCompare the major, minor, patch, and pre-release value of \xe2\x80\xa6AiOpen DOT graph in browserCbEscapes a string for use in a mermaid graph label.CmFilters this optional, passing through the optional value \xe2\x80\xa6DiFilters this singleton into an <code>Optional</code>, passing through \xe2\x80\xa6DfPasses this stream through if the argument (a <code>Bounded</code> \xe2\x80\xa6210ClMechanisms for introducing forward references and cycles \xe2\x80\xa6CcInput argument range required to not show an error.CdOutput argument range required to not show an error.EhConverts this optional into a <code>Singleton</code> with a Rust <code>Option</code> \xe2\x80\xa6CkGiven an incoming stream of request-response responses, \xe2\x80\xa6BkMacros for the <code>lattices</code> crate.CkColor mode (pull vs. push, handoff vs. comp) for nodes. \xe2\x80\xa6CdDegree into a node, i.e. the number of predecessors.DjName of the operator (will match <code>OperatorConstraints::name</code>\xe2\x80\xa6CkA priority queue in which elements of the same priority \xe2\x80\xa6CfIterate through (entire) rows stored in this HashTrie.EaOutput filename for <code>samply</code>. Example: <code>my_worker.profile</code>.CkIteratively/recursively set the graph metadata for each \xe2\x80\xa6AnSets the input file reference.CeConvert self into it\xe2\x80\x99s single variant tuple Output.CdInput argument range required to not show a warning.CfOutput argument range required to not show an warning.EbHelper creates a TCP <code>Stream</code> and <code>Sink</code> for undelimited \xe2\x80\xa6CfReturn the name of the node as a string, excluding \xe2\x80\xa6EbHelper creates a UDP <code>Stream</code> and <code>Sink</code> for undelimited \xe2\x80\xa6CnReturns an unsync channel as a (1) sender and (2) receiver \xe2\x80\xa6CjThis macro generates a basic variadic trait where each \xe2\x80\xa6DjWeakens the retries guarantee provided by the stream to <code>R2</code>\xe2\x80\xa6DjGiven a stream with <code>ExactlyOnce</code> retry guarantees, weakens \xe2\x80\xa6BbEnd the graph. Last method called.CkIterator (or pusherator) code inside the subgraphs. The \xe2\x80\xa6CfCode which runs once outside any subgraphs, BEFORE \xe2\x80\xa6BeBegin the graph. First method called.CmA free variable representing the cluster\xe2\x80\x99s own ID. When \xe2\x80\xa6ClImplementation of the confidence Score semiring ([0, 1], \xe2\x80\xa6DgCopy a variadic of references <code>EitherRefVariadic</code> into a \xe2\x80\xa6CdID to identify a subgraph in <code>DfirGraph</code>.BlCommon error type used by all graph writers.CiTrait for writing textual representations of Hydro IR \xe2\x80\xa6ChComposable bimorphism, wraps an existing morphism by \xe2\x80\xa6ClSemilattice morphism. Lattice merge must distribute over \xe2\x80\xa6Dl<code>std::collections::HashMap</code>-backed <code>MapUnion</code> lattice.DgNaive lattice compare, based on the <code>Merge::merge</code> function.CiExposes the DFIR <code>Context</code> inside quoted code.Dl<code>std::collections::HashSet</code>-backed <code>SetUnion</code> lattice.BmA framed TCP <code>Stream</code> (receiving).CiA handle that can be used to complete a tick cycle by \xe2\x80\xa6AjImplementation for N U InfBmA framed UDP <code>Stream</code> (receiving).E`The <code>Boundedness</code> of the <code>Stream</code> underlying the keyed \xe2\x80\xa6ClHashSet that stores Variadics of owned values but allows \xe2\x80\xa6BgAsserts a <code>String</code> snapshot.CkAsserts that the variable\xe2\x80\x99s type implements the given \xe2\x80\xa6ClExplicitly \xe2\x80\x9ccasts\xe2\x80\x9d the keyed stream to a type with a \xe2\x80\xa6CfExplicitly \xe2\x80\x9ccasts\xe2\x80\x9d the stream to a type with a \xe2\x80\xa6CmTake the inner datastructure by swapping input and output \xe2\x80\xa6BjSee <code>Handoff::borrow_mut_swap</code>.0DfReturns an iterator of <code>N</code>-length arrays containing all \xe2\x80\xa6DgGenerates a stream that maps each input element <code>i</code> to a \xe2\x80\xa6B`Gets the current stratum nubmer.0CmFunction to extract an op_name from a print_root() result \xe2\x80\xa6CiCreates a stream containing only the elements of each \xe2\x80\xa6FeFor each value <code>v</code> in each group, treat <code>v</code> as an <code>Iterator</code> and \xe2\x80\xa6CmFlattens the optional value into a stream, preserving the \xe2\x80\xa6CnFlattens the singleton value into a stream, preserving the \xe2\x80\xa6FeFor each item <code>i</code> in the input stream, treat <code>i</code> as an <code>Iterator</code>\xe2\x80\xa6DkA variant of <code>Stream::fold</code>, intended for keyed streams. The \xe2\x80\xa6DgLike <code>Stream::fold_idempotent</code>, aggregates the values in \xe2\x80\xa6DeCombines elements of the stream into a <code>Singleton</code>, by \xe2\x80\xa6CfSee <code>include_mdtests!</code> macro documentation.Bn<code>include_mdtests::include_mdtests!</code>DkCreate a subgraph consisting of <code>node_ids</code>. Returns an error \xe2\x80\xa6CkUse the provided function to generate a value given the \xe2\x80\xa6BeDefines an integral domain structure.D`Definitions for the <code>KeyedSingleton</code> live collection.BfGets the current loop iteration count.AkWrite mermaid graph to fileCaCreate a new writer with the given configuration.CdDegree out of a node, i.e. the number of successors.DfSuccessors, iterator of <code>(GraphEdgeId, GraphNodeId)</code> of \xe2\x80\xa6BfDefines the non_zero inverse property.CgReturns true if expressions are omitted from snapshots.CgGet the operator lookup table, generating it if needed.DgMain method for this module. Partions a flat <code>DfirGraph</code> \xe2\x80\xa6CjCompiles the flow into DFIR using placeholders for the \xe2\x80\xa6ChProcess all network messages in the simulation. This \xe2\x80\xa6DoConsumes a stream of <code>Future&lt;T&gt;</code>, produces a new stream of \xe2\x80\xa6CiInterfaces to access DFIR runtime metadata from Hydro \xe2\x80\xa6AeSets the description.BdReturns the current snapshot suffix.CeGenerates a stream with values emitted at a fixed \xe2\x80\xa6DkSplits this variadic into two parts, first the <code>Prefix</code>, and \xe2\x80\xa6D`Return an iterator of all edge IDs coming out of <code>v</code>.ChEnqueues subgraphs triggered by events without blocking.EcHelper creates a Unix <code>Stream</code> and <code>Sink</code> for undelimited \xe2\x80\xa6Ai<code>tuple!</code> MacroDkWeakens the ordering guarantee provided by the stream to <code>O2</code>\xe2\x80\xa6CkWeakens the retries guarantee provided by the stream to \xe2\x80\xa6ClA single frame of a backtrace, corresponding to a single \xe2\x80\xa6DcIterator helper for <code>VariadicCountedHashSet::into_iter</code>.DgWraper around <code>DfirGraph</code> to build a flat graph from AST \xe2\x80\xa6B`Configuration for graph writing.ChAn error occurred in parsing a <code>LlvmVersion</code>.BkArray-backed <code>MapUnion</code> lattice.Dm<code>std::collections::BTreeMap</code>-backed <code>MapUnion</code> lattice.AnOperator categories, for docs.CgMeta-data relating to operators which may be useful \xe2\x80\xa6B`Persit or delete key-value pairsCdStructure for tracking expressions known to have \xe2\x80\xa6BoAST visitor that simplifies q! macro expansionsCjA secondary map used to associated data with keys from \xe2\x80\xa6Dm<code>std::collections::BTreeSet</code>-backed <code>SetUnion</code> lattice.AjThe contents of a SnapshotDm<code>std::collections::HashMap</code>-backed <code>UnionFind</code> lattice.AnTrait for a multiset of TuplesCkThe boundedness of the keyed singleton if the value for \xe2\x80\xa6DkContext arguments provided to <code>OperatorConstraints::write_fn</code>\xe2\x80\xa6CjAdds a new compiled subgraph with a variable number of \xe2\x80\xa6CmSynchronously yields this batch of keyed elements outside \xe2\x80\xa6CkSynchronously yields the value of this optional outside \xe2\x80\xa6ClSynchronously yields the value of this singleton outside \xe2\x80\xa6CkSynchronously yields this batch of elements outside the \xe2\x80\xa6CjUtility macro to permit a multi-snapshot run where all \xe2\x80\xa6BeDefines a commutative ring structure.BdGets the ID of the current subgraph.FbFor each value <code>v</code> in each group, transform <code>v</code> using <code>f</code> and \xe2\x80\xa6DjTransforms the optional value by applying a function <code>f</code> to \xe2\x80\xa6DkTransforms the singleton value by applying a function <code>f</code> to \xe2\x80\xa6FcFor each item <code>i</code> in the input stream, transform <code>i</code> using <code>f</code> \xe2\x80\xa6DhLike <code>Stream::fold_commutative</code>, aggregates the values in \xe2\x80\xa6DeCombines elements of the stream into a <code>Singleton</code>, by \xe2\x80\xa6BiGeneral graph algorithm utility functionsClAn operator which allows you to \xe2\x80\x9cinspect\xe2\x80\x9d each entry \xe2\x80\xa6CnAn operator which allows you to \xe2\x80\x9cinspect\xe2\x80\x9d each element \xe2\x80\xa6BfDefines the left distributive propertyCjDefinitions for live collections, which offer the core \xe2\x80\xa6DiOutput filename for the raw data emitted by <code>perf record</code>. \xe2\x80\xa6CnLifetime persistence arguments. Corresponds to a prefix of \xe2\x80\xa6ChHow many persistence lifetime arguments can be provided.DhA special case of <code>KeyedStream::reduce</code> where tuples with \xe2\x80\xa6BmSet the operator tag (for debugging/tracing).BhGets the stratum number of the subgraph.BkReturn the node as a human-readable string.CcOutput the operator as a formatted string using \xe2\x80\xa6CdReturns a lowercase string for the persistence type.CjParses a \xe2\x80\x9crustc -vV\xe2\x80\x9d output string and returns the \xe2\x80\xa6ClWeakens the ordering guarantee provided by the stream to \xe2\x80\xa6CkWrite an indented line using the current indentation level.CeA variadic of either shared references, exclusive \xe2\x80\xa6CiInternal macro for constructing a Ght struct with the \xe2\x80\xa6ClMetadata that is specific to the operator itself, rather \xe2\x80\xa6Dh<code>OperatorConstraints::write_fn</code> for unary identity operators.CnSemilattice bimorphism. Lattice merge must distribute over \xe2\x80\xa6Ci<code>Option</code>-backed <code>MapUnion</code> lattice.CkA variadic where all item implement <code>PartialEq</code>.Ci<code>Option</code>-backed <code>SetUnion</code> lattice.CjA state handle with the generic type parameter erased, \xe2\x80\xa6AcToo many componentsBlArray-backed <code>UnionFind</code> lattice.Dn<code>std::collections::BTreeMap</code>-backed <code>UnionFind</code> lattice.BgDefines the absorbing_element property.CoAdds a channel input which sends to the <code>send_port</code>.BnAdds a new compiled subgraph with all options.BgAdds a subgraph with specific topology:EdSame as <code>Self::arguments</code> but with only <code>StateHandle</code>s, no \xe2\x80\xa6CjBroadcasts elements of this stream to all members of a \xe2\x80\xa6ClBroadcasts elements of this stream at each source member \xe2\x80\xa6DeCheck that the lattice\xe2\x80\x99s <code>PartialOrd</code> implementation \xe2\x80\xa6CmClose this sender. No more messages can be sent from this \xe2\x80\xa6CmMakes requests for physical resources (servers) that this \xe2\x80\xa6CkMakes requests for physical resources server ports that \xe2\x80\xa6BkThe inverse of <code>bind_tcp_bytes</code>.DkThis is the same thing as <code>connect_tcp_bytes</code> except instead \xe2\x80\xa6C`<code>None</code> if no deployment was performedDfGiven a bounded stream of keys <code>K</code>, returns a new keyed \xe2\x80\xa60DbLike <code>KeyedStream::flatten_ordered</code>, but allows the \xe2\x80\xa6CoLike <code>Optional::flatten_ordered</code>, but allows the \xe2\x80\xa6D`Like <code>Singleton::flatten_ordered</code>, but allows the \xe2\x80\xa6CmLike <code>Stream::flatten_ordered</code>, but allows the \xe2\x80\xa6DkConverts this keyed singleton into a <code>KeyedStream</code> with each \xe2\x80\xa6CkIf this operator receives external inputs and therefore \xe2\x80\xa6B`Generate mermaid graph as stringDhPredecessors, iterator of <code>(GraphEdgeId, GraphNodeId)</code> of \xe2\x80\xa6CmReturn an iterator of all edge IDs going into <code>v</code>.AmWrite ReactFlow graph to fileCcEnqueues subgraphs triggered by external events \xe2\x80\xa6DiLike <code>Stream::reduce_idempotent</code>, aggregates the values in \xe2\x80\xa6DeCombines elements of the stream into an <code>Optional</code>, by \xe2\x80\xa6BaRemoves the input file reference.CdMutable version of <code>Self::resolve_inner</code>.BhDefines the right distributive property.BgSchedules a subgraph for the next tick.BmSchedules a subgraph to be run. See also: \xe2\x80\xa6AgSets the snapshot path.CgReturns a channel as a (1) unbounded sender and (2) \xe2\x80\xa6D`A variadic where all elements are the same type, <code>T</code>.ChHelper trait that determines the boundedness for the \xe2\x80\xa6BcA message with an delivery address.BiHTML template for ReactFlow visualizationCj<code>Option</code>-backed <code>UnionFind</code> lattice.BbTrait for a set of Variadic TuplesClThe boundedness of the keyed singleton if the values for \xe2\x80\xa6CgNumber of columns in the acceptor grid. Each column \xe2\x80\xa6CnNumber of rows in the acceptor grid. Each row represents a \xe2\x80\xa6BgAdds a subgraph with specific topology:ChGiven a pre-selected network type, computes concrete \xe2\x80\xa6CkCheck that the atomized lattice points re-merge to form \xe2\x80\xa6BgDefines a commutative monoid structure.ClSends the provided collection to the next tick, where it \xe2\x80\xa6ChGets the timestamp of the beginning of the current tick.Dh<code>dfir_syntax!</code> but will not emit any diagnostics (errors, \xe2\x80\xa60ChIf set, what to write the output flamegraph SVG file to.DcLike <code>KeyedStream::flat_map_ordered</code>, but allows the \xe2\x80\xa6D`Like <code>Optional::flat_map_ordered</code>, but allows the \xe2\x80\xa6DaLike <code>Singleton::flat_map_ordered</code>, but allows the \xe2\x80\xa6CnLike <code>Stream::flat_map_ordered</code>, but allows the \xe2\x80\xa6CkGenerate all graph types and save to files with a given \xe2\x80\xa6ClReturns a mutable reference to the value associated with \xe2\x80\xa6CkDetermines if this input must be preceeded by a stratum \xe2\x80\xa6Cgwrap all elements of the variadic in a <code>Vec</code>AmOpen mermaid graph in browserAo<code>multiplatform_test</code>BiSee the crate docs for usage information.AlDon\xe2\x80\x99t show location groupsCiOp text will exclude any line that starts with \xe2\x80\x9cuse\xe2\x80\x9d.ChUtility methods for processing singleton references: \xe2\x80\xa6DjLike <code>Stream::reduce_commutative</code>, aggregates the values in \xe2\x80\xa6DdCombines elements of the stream into a <code>Optional</code>, by \xe2\x80\xa6AhRemoves the description.CnA synchronous wrapper around <code>Self::run_available</code>.BkSerialize a message to bytes using bincode.ChIdentifies a network type that this host can use for \xe2\x80\xa6DaReturn an iterator of all successor vertex IDs of <code>v</code>.BbTees a <code>TeeingHandoff</code>.B`End writing a location grouping.C`Convert into a mermaid graph. Ignores subgraphs.BoGraph structure tracker for Hydro IR rendering.CeBase struct for text-based graph writers that use \xe2\x80\xa6CcA marker trait indicating which components of a \xe2\x80\xa6CgAn instance of this struct represents a single dfir \xe2\x80\xa6BhThe code generated and returned by a \xe2\x80\xa6BcTags the expression as commutative.BgAdds a subgraph with specific topology:0ChConverts a closure to a morphism. Does not check for \xe2\x80\xa6DiCollects the immediately available items from the <code>Stream</code> \xe2\x80\xa6CnExtract a short, readable label from the full token stream \xe2\x80\xa6CiAn operator that both filters and maps each key-value \xe2\x80\xa6CmGiven a keyed stream of lookup requests, where the key is \xe2\x80\xa6BaReturns the relative source path.CmInsert an operator instance for the given node. Panics if \xe2\x80\xa6ClInstantiate the sink, but as the sink host connecting to \xe2\x80\xa6DkConverts an iterator into a stream that emits <code>n</code> items at a \xe2\x80\xa6C`Convert into a mermaid graph. Ignores subgraphs.CnSets up a test with multiple processes / clusters declared \xe2\x80\xa6ChPrints transaction latency and throughput results to \xe2\x80\xa6BbGenerate ReactFlow graph as stringCmDistributes elements of this stream to cluster members in \xe2\x80\xa6DkCalls <code>ExampleChild::run_new</code> with the package name and test \xe2\x80\xa6CmTick all hosts until all hosts are quiescent (i.e. no new \xe2\x80\xa6CkSaves Hydro IR roots as a ReactFlow.js JSON file. If no \xe2\x80\xa6ClSave ReactFlow JSON to file using the consolidated debug \xe2\x80\xa6CiIf set to true, does not retain the expression in the \xe2\x80\xa6AiSets the snapshot suffix.AhSplits a refvar variadicBhReturns a shared reference to the state.DiMarks an output of a <code>TeeingHandoff</code> as dropped so that no \xe2\x80\xa6Ec<code>crate::collections::SingletonMap</code>-backed <code>MapUnion</code> lattice.Ec<code>crate::collections::SingletonSet</code>-backed <code>SetUnion</code> lattice.AoThe pre-release tag is unknown.BgAdds a subgraph with specific topology:0ClChecks that the item which is bot is less than (or equal \xe2\x80\xa6CiChecks that the item which is top is greater than (or \xe2\x80\xa6CiTests that the given warnings are emitted by the dfir \xe2\x80\xa6DkExtract the example name from the <code>std::file!</code> path, used by \xe2\x80\xa6Direturn the leaf below that contains this row, or <code>None</code> if \xe2\x80\xa6CjIf this operator has a singleton reference output. For \xe2\x80\xa6DhSuccessor edges, iterator of <code>GraphEdgeId</code> of outgoing edges.CfSuccessor nodes, iterator of <code>GraphNodeId</code>.DcReturn an iterator of all predecessor vertex IDs of <code>v</code>.AoOpen ReactFlow graph in browserCnRemoves a node from its subgraph. Returns true if the node \xe2\x80\xa6ClModule containing the <code>BinaryTrust</code> applications.ClSet subgraph\xe2\x80\x99s stratum number, returning the old value \xe2\x80\xa6BdShort version string of the compilerBhmodule of collection types for variadicsCmCode which runs after iterators have been run. Mainly for \xe2\x80\xa6CdBegin writing a location grouping (process/cluster).CnCode which runs once outside the subgraph, AFTER subgraphs \xe2\x80\xa6BaConvert back into surface syntax.AhLLVM Version Parse ErrorDhUsed in conjunction with the <code>HostBuilder</code> to construct a \xe2\x80\xa6CbReturned from <code>Settings::bind_to_scope</code>Ed<code>crate::collections::SingletonMap</code>-backed <code>UnionFind</code> lattice.CiAdds a subgraph which pulls from the async stream and \xe2\x80\xa6BgAdds a subgraph with specific topology:BfAsserts a <code>Debug</code> snapshot.CdBuild the graph structure by traversing the IR tree.CdBuild the graph structure recursively for this node.CjConverts a closure to a bimorphism. Does not check for \xe2\x80\xa6DiA special case of <code>Stream::fold_idempotent</code>, in the spirit \xe2\x80\xa6BlGets the generic arguments for the operator.CcCreate ReactFlow JSON from Hydro IR with type namesDgFinds all the singleton references <code>#my_var</code> and appends \xe2\x80\xa6ChConfigures the host to support copying and running a \xe2\x80\xa6DfSchedules the current loop block to be run again (<em>in this </em>\xe2\x80\xa6CdSends the elements of this stream to an external \xe2\x80\xa6CcSet subgraph\xe2\x80\x99s laziness, returning the old value.CcSingleton references within the operator arguments.DkSets up a test declared in <code>thunk</code> that executes on a single \xe2\x80\xa6BaConvert back into surface syntax.BeWrite a node definition with styling.ClCompiler Fusion Operators: Operators which are necessary \xe2\x80\xa6DeAn error occurred while trying to find the <code>rustc</code> to run.Bjbimorphism trait for equijoining Ght NodesBkMap-union-with-tombstones compound lattice.BbSet-union lattice with tombstones.ChColumn storage for Variadic tuples of type Schema An \xe2\x80\xa6CmHashMap keyed on Variadics of (owned value, count) pairs, \xe2\x80\xa6ClHow long to wait before resending message to a different \xe2\x80\xa6CfProgramatically add an pipeline, optionally adding \xe2\x80\xa6Cm(Experimental) Asserts a binary snapshot in the form of a \xe2\x80\xa6DjChecks that the <code>LatticeMorphism</code> is valid, i.e. that merge \xe2\x80\xa6CfCompute 99% confidence interval for the mean using \xe2\x80\xa6BmSerialize a message from bytes using bincode.CaFind an operator by an AST <code>Operator</code>.DjA special case of <code>Stream::fold_commutative</code>, in the spirit \xe2\x80\xa6CnGets whether this is the first time this subgraph is being \xe2\x80\xa6DgPredecessor edges, iterator of <code>GraphEdgeId</code> of incoming \xe2\x80\xa6ChPredecessor nodes, iterator of <code>GraphNodeId</code>.CnHelper to write the <code>write_iterator</code> portion of \xe2\x80\xa6CmOpens Hydro IR roots as a ReactFlow.js visualization in a \xe2\x80\xa6CeOpen ReactFlow visualization in browser using the \xe2\x80\xa6DkReplaces singleton references <code>#my_var</code> with the code needed \xe2\x80\xa6AlRemoves the snapshot suffix.ChIdent for the singleton output of this operator, if any.DfCreates a new, empty <code>PriorityStack</code> with pre-allocated \xe2\x80\xa6CmThe GeneralizedHashTrieNode trait captures the properties \xe2\x80\xa6DdThe output of <code>rustc -vV</code> was not in the expected format.CkAdds a new compiled subgraph with the specified inputs, \xe2\x80\xa6ChAllow another iteration of the loop, if more data comes.CkFormats self as a human-readable string for error messages.BhAsserts a <code>Display</code> snapshot.DkA special case of <code>Stream::reduce_idempotent</code>, in the spirit \xe2\x80\xa6DoConsumes a stream of <code>Future&lt;T&gt;</code>, produces a new stream of \xe2\x80\xa6ClSets a hook to modify the state at the end of each tick, \xe2\x80\xa60CnGenerates a stream with values emitted at a fixed interval \xe2\x80\xa6AnA version component has a signAnAutogenerated by buildstructorDfChecks that the <code>LatticeBimorphism</code> is valid, i.e. that \xe2\x80\xa6CcCheck lattice associativity, commutativity, and \xe2\x80\xa6BkFind an operator by <code>GraphNode</code>.BnHow often to send \xe2\x80\x9cI am leader\xe2\x80\x9d heartbeatsCnInserts a node between two existing nodes connected by the \xe2\x80\xa6CnAssign all operator instances if not set. Write diagnostic \xe2\x80\xa6BlDefines a no-nonzero-zero-divisors property.DeA special case of <code>Stream::reduce_commutative</code>, in the \xe2\x80\xa6DgRemove the node <code>node_id</code> but preserves and connects the \xe2\x80\xa6Cmallocate a new VariadicHashSet with a specific hasher and \xe2\x80\xa6Ciallocate a new VariadicCountedHashSet with a specific \xe2\x80\xa6DhA command to run on Debian-based systems to set up <code>perf</code> \xe2\x80\xa6Clbimorphism trait for equijoin on full tuple (keys in all \xe2\x80\xa6Ckbimorphism type for equijoin on full tuple (keys in all \xe2\x80\xa6Dd<code>Vec</code>-backed <code>SetUnionWithTombstones</code> lattice.AoReturns just the variant of \xe2\x80\xa6CnForms the cross-product (Cartesian product, cross-join) of \xe2\x80\xa6BlHow often to check if the leader has expiredEeStrip <code>DFIR_BASE_DIR</code> or <code>CARGO_MANIFEST_DIR</code> from the path \xe2\x80\xa6DiModule containing the <code>MapUnionWithTombstones</code> lattice and \xe2\x80\xa6CnGets the singletons referenced by a node. Returns an empty \xe2\x80\xa6ClAdvance time on all hosts by a single tick. Returns true \xe2\x80\xa6DiModule containing the <code>SetUnionWithTombstones</code> lattice and \xe2\x80\xa6CeSort a slice using a key fn which returns references.ClBimorphism for the cartesian product of two sets. Output \xe2\x80\xa6CmAsserts that running the given closure results in a panic \xe2\x80\xa6CjGenerate graph based on GraphConfig, delegating to the \xe2\x80\xa6CnHelper to write the <code>write_iterator</code> portion of \xe2\x80\xa6CmGenerates an incrementing u32 for each virtual client ID, \xe2\x80\xa6FhFor an <code>edge</code> from <code>A --&gt; B</code>, insert a new vertex <code>V</code> along that \xe2\x80\xa6CeReturns the current value for module name prepending.CnFor a vertex with one incoming edge and one outgoing edge, \xe2\x80\xa6ClForms the cartesian product of the ValTypes only Used on \xe2\x80\xa6ChMinor version component is required on LLVM versions \xe2\x80\xa6Eh<code>crate::collections::ArraySet</code>-backed <code>SetUnionWithTombstones</code> \xe2\x80\xa6CjAdds a new compiled subgraph with a variable number of \xe2\x80\xa6CkRemoves missing unions and tees. Must be applied BEFORE \xe2\x80\xa6DiLike <code>Stream::fold_commutative_idempotent</code>, aggregates the \xe2\x80\xa6DeCombines elements of the stream into a <code>Singleton</code>, by \xe2\x80\xa6DgA special case of <code>KeyedStream::reduce_idempotent</code> where \xe2\x80\xa6CiMinor version component must be zero on LLVM versions \xe2\x80\xa6DlAsserts that <code>IsBot</code> is true for <code>Default::default()</code>.EhChecks <code>PartialOrd</code> and <code>PartialEq</code>\xe2\x80\x99s reflexivity, symmetry, \xe2\x80\xa6CgImplements the Compartmentalized Paxos algorithm as \xe2\x80\xa6DhA special case of <code>KeyedStream::reduce_commutative</code> where \xe2\x80\xa6AnAutogenerated by buildstructorDbBimorphism for the cartesian product of two GHT <em>subtries</em>.Ee<code>std::collections::HashSet</code>-backed <code>SetUnionWithTombstones</code> \xe2\x80\xa6ChAsserts a <code>Debug</code> snapshot in compact format.DiReturns <code>#root::scheduled::graph::StateLifespan::#variant</code> \xe2\x80\xa6DkLike <code>Stream::reduce_commutative_idempotent</code>, aggregates the \xe2\x80\xa6DeCombines elements of the stream into an <code>Optional</code>, by \xe2\x80\xa6DhSet the singletons referenced for the <code>node_id</code> operator. \xe2\x80\xa67Ef<code>std::collections::BTreeSet</code>-backed <code>SetUnionWithTombstones</code> \xe2\x80\xa6BmGenerate all graph files based on GraphConfigBkLoop through each algebraic property in \xe2\x80\xa6DfSame as <code>postprocess_singletons</code> but generates just the \xe2\x80\xa6ChDisables prepending of modules to the snapshot filename.Dg<code>Option</code>-backed <code>SetUnionWithTombstones</code> lattice.CgHelper function to create a complete HTML file with \xe2\x80\xa6BoA version component must not have leading zerosDjA special case of <code>Stream::fold_commutative_idempotent</code>, in \xe2\x80\xa6CfReturns the given number of persistence arguments, \xe2\x80\xa6Ch<code>crate::collections::SingletonSet</code>-backed \xe2\x80\xa6Ee<code>std::collections::HashMap</code>-backed <code>MapUnionWithTombstones</code> \xe2\x80\xa6DiA special case of <code>Stream::reduce_commutative_idempotent</code>, \xe2\x80\xa6Ch<code>crate::collections::SingletonMap</code>-backed \xe2\x80\xa63AeA special case of \xe2\x80\xa6AnAutogenerated by buildstructorCiInitial delay, multiplied by proposer pid, to stagger \xe2\x80\xa66")