searchState.loadedDescShard("dfir_datalog_core", 0, "Compatibility for <code>proc_macro</code> diagnostics, which are …\nDiagnostic. A warning or error (or lower <code>Level</code>) with a …\nAn error.\nA help message.\nDiagnostic reporting level.\nA note.\nA serializable and deserializable version of <code>Span</code>. Cannot …\nA warning.\nColumn number, one-indexed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf this level is <code>Level::Error</code>.\nIf this diagnostic’s level is <code>Level::Error</code>.\nSeverity level.\nLine number, one-indexed.\nHuman-readable message.\nThe source file path.\nSpan (source code location).\nCreate a new diagnostic from the given span, level, and …\nConverts this into a serializable and deserializable …\nUsed to emulate <code>proc_macro::Diagnostic::emit</code> by turning …\nEmit if possible, otherwise return <code>Err</code> containing a …\nEmits all if possible, otherwise returns <code>Err</code> containing a …")