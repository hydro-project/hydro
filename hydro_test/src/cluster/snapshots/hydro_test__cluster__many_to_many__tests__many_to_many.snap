---
source: hydro_test/src/cluster/many_to_many.rs
expression: built.ir()
---
[
    ForEach {
        f: q!(| n | println!("cluster received: {:?}", n)),
        input: Network {
            from_key: None,
            to_location: Cluster(
                0,
            ),
            to_key: None,
            serialize_fn: None,
            instantiate_fn: <network instantiate>,
            deserialize_fn: Some(
                | res | { let (id , b) = res . unwrap () ; (hyd...,
            ),
            input: FlatMap {
                f: q!(| v | { ids__free.iter ().map (move | id | (id.raw_id, v.clone ())) }),
                input: Map {
                    f: q!(| v | bincode::serialize (& v).unwrap ().into ()),
                    input: Source {
                        source: Iter(
                            { use crate :: __staged :: __deps :: * ; use cr...,
                        ),
                        location_kind: Cluster(
                            0,
                        ),
                        metadata: HydroIrMetadata {
                            location_kind: Cluster(
                                0,
                            ),
                            output_type: Some(
                                i32,
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Cluster(
                            0,
                        ),
                        output_type: Some(
                            hydro_test :: __staged :: __deps :: hydro_lang :: __staged :: __deps :: bytes :: Bytes,
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Cluster(
                        0,
                    ),
                    output_type: Some(
                        (u32 , hydro_test :: __staged :: __deps :: hydro_lang :: __staged :: __deps :: bytes :: Bytes),
                    ),
                    cardinality: None,
                    cpu_usage: None,
                    network_recv_cpu_usage: None,
                    id: None,
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Cluster(
                    0,
                ),
                output_type: Some(
                    i32,
                ),
                cardinality: None,
                cpu_usage: None,
                network_recv_cpu_usage: None,
                id: None,
            },
        },
        metadata: HydroIrMetadata {
            location_kind: Cluster(
                0,
            ),
            output_type: Some(
                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < () > , i32),
            ),
            cardinality: None,
            cpu_usage: None,
            network_recv_cpu_usage: None,
            id: None,
        },
    },
]
