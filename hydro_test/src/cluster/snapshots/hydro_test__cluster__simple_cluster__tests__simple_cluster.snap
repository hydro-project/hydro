---
source: hydro_test/src/cluster/simple_cluster.rs
expression: built.ir()
---
[
    ForEach {
        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: cluster :: cluster_id :: ClusterId < () > , (hydro_lang :: location :: cluster :: cluster_id :: ClusterId < () > , i32)) , () > ({ use crate :: __staged :: cluster :: simple_cluster :: * ; | (id , d) | println ! ("node received: ({}, {:?})" , id , d) }),
        input: Network {
            from_location: Cluster(
                1,
            ),
            from_key: None,
            to_location: Process(
                0,
            ),
            to_key: None,
            serialize_fn: Some(
                | data | { hydro_lang :: runtime_support :: bincode :: serialize :: < (hydro_lang :: location :: cluster :: cluster_id :: ClusterId < () > , i32) > (& data) . unwrap () . into () },
            ),
            instantiate_fn: <network instantiate>,
            deserialize_fn: Some(
                | res | { let (id , b) = res . unwrap () ; (hydro_lang :: ClusterId :: < () > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_lang :: location :: cluster :: cluster_id :: ClusterId < () > , i32) > (& b) . unwrap ()) },
            ),
            input: Inspect {
                f: stageleft :: runtime_support :: fn1_borrow_type_hint :: < (hydro_lang :: location :: cluster :: cluster_id :: ClusterId < () > , i32) , () > ({ use crate :: __staged :: cluster :: simple_cluster :: * ; let CLUSTER_SELF_ID__free = hydro_lang :: ClusterId :: < () > :: from_raw (__hydro_lang_cluster_self_id_1) ; move | n | println ! ("cluster received: {:?} (self cluster id: {})" , n , CLUSTER_SELF_ID__free) }),
                input: Network {
                    from_location: Process(
                        0,
                    ),
                    from_key: None,
                    to_location: Cluster(
                        1,
                    ),
                    to_key: None,
                    serialize_fn: Some(
                        | (id , data) : (hydro_lang :: ClusterId < _ > , (hydro_lang :: location :: cluster :: cluster_id :: ClusterId < () > , i32)) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize :: < (hydro_lang :: location :: cluster :: cluster_id :: ClusterId < () > , i32) > (& data) . unwrap () . into ()) },
                    ),
                    instantiate_fn: <network instantiate>,
                    deserialize_fn: Some(
                        | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < (hydro_lang :: location :: cluster :: cluster_id :: ClusterId < () > , i32) > (& res . unwrap ()) . unwrap () },
                    ),
                    input: Map {
                        f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: cluster :: cluster_id :: ClusterId < () > , i32) , (hydro_lang :: location :: cluster :: cluster_id :: ClusterId < () > , (hydro_lang :: location :: cluster :: cluster_id :: ClusterId < () > , i32)) > ({ use crate :: __staged :: cluster :: simple_cluster :: * ; | (id , n) | (id , (id , n)) }),
                        input: Delta {
                            inner: CrossProduct {
                                left: Persist {
                                    inner: Map {
                                        f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_lang :: location :: cluster :: cluster_id :: ClusterId < () > , hydro_lang :: location :: cluster :: cluster_id :: ClusterId < () > > ({ use crate :: __staged :: cluster :: simple_cluster :: * ; | & id | id }),
                                        input: Source {
                                            source: Iter(
                                                unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: ClusterId < () >] > (__hydro_lang_cluster_ids_1) },
                                            ),
                                            location_kind: Process(
                                                0,
                                            ),
                                            metadata: HydroNodeMetadata {
                                                id: Some(
                                                    2,
                                                ),
                                                location_kind: Process(
                                                    0,
                                                ),
                                                output_type: Some(
                                                    Type::Reference {
                                                        and_token: And,
                                                        lifetime: None,
                                                        mutability: None,
                                                        elem: Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: hydro_lang,
                                                                            span: bytes(53..63),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: location,
                                                                            span: bytes(65..73),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: cluster,
                                                                            span: bytes(75..82),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: cluster_id,
                                                                            span: bytes(84..94),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: ClusterId,
                                                                            span: bytes(96..105),
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: None,
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Tuple {
                                                                                        paren_token: Paren,
                                                                                        elems: [],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    },
                                                ),
                                            },
                                        },
                                        metadata: HydroNodeMetadata {
                                            id: Some(
                                                4,
                                            ),
                                            location_kind: Process(
                                                0,
                                            ),
                                            output_type: Some(
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: hydro_lang,
                                                                    span: bytes(319..329),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: location,
                                                                    span: bytes(331..339),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cluster,
                                                                    span: bytes(341..348),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cluster_id,
                                                                    span: bytes(350..360),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: ClusterId,
                                                                    span: bytes(362..371),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Tuple {
                                                                                paren_token: Paren,
                                                                                elems: [],
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                    },
                                    metadata: HydroNodeMetadata {
                                        id: None,
                                        location_kind: Process(
                                            0,
                                        ),
                                        output_type: Some(
                                            Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: hydro_lang,
                                                                span: bytes(319..329),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: location,
                                                                span: bytes(331..339),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: cluster,
                                                                span: bytes(341..348),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: cluster_id,
                                                                span: bytes(350..360),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ClusterId,
                                                                span: bytes(362..371),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Type(
                                                                        Type::Tuple {
                                                                            paren_token: Paren,
                                                                            elems: [],
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                },
                                right: Persist {
                                    inner: Source {
                                        source: Iter(
                                            { use crate :: __staged :: cluster :: simple_cluster :: * ; 0 .. 5 },
                                        ),
                                        location_kind: Process(
                                            0,
                                        ),
                                        metadata: HydroNodeMetadata {
                                            id: Some(
                                                0,
                                            ),
                                            location_kind: Process(
                                                0,
                                            ),
                                            output_type: Some(
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: i32,
                                                                    span: bytes(41..44),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                    },
                                    metadata: HydroNodeMetadata {
                                        id: Some(
                                            1,
                                        ),
                                        location_kind: Process(
                                            0,
                                        ),
                                        output_type: Some(
                                            Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: i32,
                                                                span: bytes(45..48),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    },
                                },
                                metadata: HydroNodeMetadata {
                                    id: Some(
                                        5,
                                    ),
                                    location_kind: Process(
                                        0,
                                    ),
                                    output_type: Some(
                                        Type::Tuple {
                                            paren_token: Paren,
                                            elems: [
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: hydro_lang,
                                                                    span: bytes(377..387),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: location,
                                                                    span: bytes(389..397),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cluster,
                                                                    span: bytes(399..406),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cluster_id,
                                                                    span: bytes(408..418),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: ClusterId,
                                                                    span: bytes(420..429),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Tuple {
                                                                                paren_token: Paren,
                                                                                elems: [],
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                Comma,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: i32,
                                                                    span: bytes(435..438),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    ),
                                },
                            },
                            metadata: HydroNodeMetadata {
                                id: None,
                                location_kind: Process(
                                    0,
                                ),
                                output_type: Some(
                                    Type::Tuple {
                                        paren_token: Paren,
                                        elems: [
                                            Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: hydro_lang,
                                                                span: bytes(377..387),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: location,
                                                                span: bytes(389..397),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: cluster,
                                                                span: bytes(399..406),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: cluster_id,
                                                                span: bytes(408..418),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: ClusterId,
                                                                span: bytes(420..429),
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: None,
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Type(
                                                                        Type::Tuple {
                                                                            paren_token: Paren,
                                                                            elems: [],
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: i32,
                                                                span: bytes(435..438),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                ),
                            },
                        },
                        metadata: HydroNodeMetadata {
                            id: Some(
                                6,
                            ),
                            location_kind: Process(
                                0,
                            ),
                            output_type: Some(
                                Type::Tuple {
                                    paren_token: Paren,
                                    elems: [
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: hydro_lang,
                                                            span: bytes(665..675),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: location,
                                                            span: bytes(677..685),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cluster,
                                                            span: bytes(687..694),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: cluster_id,
                                                            span: bytes(696..706),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: ClusterId,
                                                            span: bytes(708..717),
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: None,
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Tuple {
                                                                        paren_token: Paren,
                                                                        elems: [],
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        Comma,
                                        Type::Tuple {
                                            paren_token: Paren,
                                            elems: [
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: hydro_lang,
                                                                    span: bytes(724..734),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: location,
                                                                    span: bytes(736..744),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cluster,
                                                                    span: bytes(746..753),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: cluster_id,
                                                                    span: bytes(755..765),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: ClusterId,
                                                                    span: bytes(767..776),
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: None,
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Tuple {
                                                                                paren_token: Paren,
                                                                                elems: [],
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                Comma,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: i32,
                                                                    span: bytes(782..785),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    ],
                                },
                            ),
                        },
                    },
                    metadata: HydroNodeMetadata {
                        id: Some(
                            7,
                        ),
                        location_kind: Cluster(
                            1,
                        ),
                        output_type: Some(
                            Type::Tuple {
                                paren_token: Paren,
                                elems: [
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: hydro_lang,
                                                        span: bytes(917..927),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: location,
                                                        span: bytes(929..937),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: cluster,
                                                        span: bytes(939..946),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: cluster_id,
                                                        span: bytes(948..958),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: ClusterId,
                                                        span: bytes(960..969),
                                                    },
                                                    arguments: PathArguments::AngleBracketed {
                                                        colon2_token: None,
                                                        lt_token: Lt,
                                                        args: [
                                                            GenericArgument::Type(
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [],
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Gt,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    Comma,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: i32,
                                                        span: bytes(975..978),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                            },
                        ),
                    },
                },
                metadata: HydroNodeMetadata {
                    id: Some(
                        9,
                    ),
                    location_kind: Cluster(
                        1,
                    ),
                    output_type: Some(
                        Type::Tuple {
                            paren_token: Paren,
                            elems: [
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: hydro_lang,
                                                    span: bytes(1198..1208),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: location,
                                                    span: bytes(1210..1218),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cluster,
                                                    span: bytes(1220..1227),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: cluster_id,
                                                    span: bytes(1229..1239),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: ClusterId,
                                                    span: bytes(1241..1250),
                                                },
                                                arguments: PathArguments::AngleBracketed {
                                                    colon2_token: None,
                                                    lt_token: Lt,
                                                    args: [
                                                        GenericArgument::Type(
                                                            Type::Tuple {
                                                                paren_token: Paren,
                                                                elems: [],
                                                            },
                                                        ),
                                                    ],
                                                    gt_token: Gt,
                                                },
                                            },
                                        ],
                                    },
                                },
                                Comma,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: i32,
                                                    span: bytes(1256..1259),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    ),
                },
            },
            metadata: HydroNodeMetadata {
                id: Some(
                    11,
                ),
                location_kind: Process(
                    0,
                ),
                output_type: Some(
                    Type::Tuple {
                        paren_token: Paren,
                        elems: [
                            Type::Path {
                                qself: None,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: hydro_lang,
                                                span: bytes(1457..1467),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: location,
                                                span: bytes(1469..1477),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: cluster,
                                                span: bytes(1479..1486),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: cluster_id,
                                                span: bytes(1488..1498),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: ClusterId,
                                                span: bytes(1500..1509),
                                            },
                                            arguments: PathArguments::AngleBracketed {
                                                colon2_token: None,
                                                lt_token: Lt,
                                                args: [
                                                    GenericArgument::Type(
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [],
                                                        },
                                                    ),
                                                ],
                                                gt_token: Gt,
                                            },
                                        },
                                    ],
                                },
                            },
                            Comma,
                            Type::Path {
                                qself: None,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: i32,
                                                span: bytes(1515..1518),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                ),
            },
        },
    },
]
