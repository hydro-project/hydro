---
source: hydro_test/src/cluster/compute_pi.rs
expression: built.ir()
---
[
    ForEach {
        f: stageleft :: runtime_support :: fn1_type_hint :: < (u64 , u64) , () > ({ use crate :: __staged :: cluster :: compute_pi :: * ; | (inside , total) | { println ! ("pi: {} ({} trials)" , 4.0 * inside as f64 / total as f64 , total) ; } }),
        input: Map {
            f: stageleft :: runtime_support :: fn1_type_hint :: < ((u64 , u64) , ()) , (u64 , u64) > ({ use hydro_lang :: __staged :: optional :: * ; | (d , _signal) | d }),
            input: CrossSingleton {
                left: Reduce {
                    f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (u64 , u64) , (u64 , u64) , () > ({ use crate :: __staged :: cluster :: compute_pi :: * ; | (inside , total) , (inside_batch , total_batch) | { * inside += inside_batch ; * total += total_batch ; } }),
                    input: Persist {
                        inner: Map {
                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: cluster :: compute_pi :: Worker > , (u64 , u64)) , (u64 , u64) > ({ use hydro_lang :: __staged :: stream :: * ; | (_ , b) | b }),
                            input: Network {
                                from_location: Cluster(
                                    0,
                                ),
                                from_key: None,
                                to_location: Process(
                                    1,
                                ),
                                to_key: None,
                                serialize_fn: Some(
                                    | data | { hydro_lang :: runtime_support :: bincode :: serialize :: < (u64 , u64) > (& data) . unwrap () . into () },
                                ),
                                instantiate_fn: <network instantiate>,
                                deserialize_fn: Some(
                                    | res | { let (id , b) = res . unwrap () ; (hydro_lang :: ClusterId :: < hydro_test :: cluster :: compute_pi :: Worker > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (u64 , u64) > (& b) . unwrap ()) },
                                ),
                                input: Fold {
                                    init: stageleft :: runtime_support :: fn0_type_hint :: < (u64 , u64) > ({ use crate :: __staged :: cluster :: compute_pi :: * ; | | (0u64 , 0u64) }),
                                    acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < (u64 , u64) , bool , () > ({ use crate :: __staged :: cluster :: compute_pi :: * ; | (inside , total) , sample_inside | { if sample_inside { * inside += 1 ; } * total += 1 ; } }),
                                    input: Map {
                                        f: stageleft :: runtime_support :: fn1_type_hint :: < (f64 , f64) , bool > ({ use crate :: __staged :: cluster :: compute_pi :: * ; | (x , y) | x * x + y * y < 1.0 }),
                                        input: Map {
                                            f: stageleft :: runtime_support :: fn1_type_hint :: < () , (f64 , f64) > ({ use crate :: __staged :: cluster :: compute_pi :: * ; | _ | rand :: random :: < (f64 , f64) > () }),
                                            input: Map {
                                                f: stageleft :: runtime_support :: fn1_type_hint :: < usize , () > ({ use hydro_lang :: __staged :: location :: tick :: * ; | _ | () }),
                                                input: FlatMap {
                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < () , std :: ops :: Range < usize > > ({ use hydro_lang :: __staged :: location :: tick :: * ; let batch_size__free = { use crate :: __staged :: cluster :: compute_pi :: * ; let batch_size__free = 8192usize ; batch_size__free } ; move | _ | 0 .. batch_size__free }),
                                                    input: Source {
                                                        source: Spin,
                                                        location_kind: Cluster(
                                                            0,
                                                        ),
                                                        metadata: HydroNodeMetadata {
                                                            id: Some(
                                                                0,
                                                            ),
                                                            location_kind: Cluster(
                                                                0,
                                                            ),
                                                            output_type: Some(
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [],
                                                                },
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroNodeMetadata {
                                                        id: Some(
                                                            2,
                                                        ),
                                                        location_kind: Cluster(
                                                            0,
                                                        ),
                                                        output_type: Some(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: usize,
                                                                                span: bytes(102..107),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    },
                                                },
                                                metadata: HydroNodeMetadata {
                                                    id: Some(
                                                        3,
                                                    ),
                                                    location_kind: Cluster(
                                                        0,
                                                    ),
                                                    output_type: Some(
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [],
                                                        },
                                                    ),
                                                },
                                            },
                                            metadata: HydroNodeMetadata {
                                                id: Some(
                                                    5,
                                                ),
                                                location_kind: Cluster(
                                                    0,
                                                ),
                                                output_type: Some(
                                                    Type::Tuple {
                                                        paren_token: Paren,
                                                        elems: [
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: f64,
                                                                                span: bytes(197..200),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: f64,
                                                                                span: bytes(202..205),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                ),
                                            },
                                        },
                                        metadata: HydroNodeMetadata {
                                            id: Some(
                                                6,
                                            ),
                                            location_kind: Cluster(
                                                0,
                                            ),
                                            output_type: Some(
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: bool,
                                                                    span: bytes(259..263),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                    },
                                    metadata: HydroNodeMetadata {
                                        id: Some(
                                            7,
                                        ),
                                        location_kind: Cluster(
                                            0,
                                        ),
                                        output_type: Some(
                                            Type::Tuple {
                                                paren_token: Paren,
                                                elems: [
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u64,
                                                                        span: bytes(373..376),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u64,
                                                                        span: bytes(378..381),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        ),
                                    },
                                },
                                metadata: HydroNodeMetadata {
                                    id: Some(
                                        9,
                                    ),
                                    location_kind: Process(
                                        1,
                                    ),
                                    output_type: Some(
                                        Type::Tuple {
                                            paren_token: Paren,
                                            elems: [
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(457..460),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                Comma,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: u64,
                                                                    span: bytes(462..465),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    ),
                                },
                            },
                            metadata: HydroNodeMetadata {
                                id: Some(
                                    10,
                                ),
                                location_kind: Process(
                                    1,
                                ),
                                output_type: Some(
                                    Type::Tuple {
                                        paren_token: Paren,
                                        elems: [
                                            Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: u64,
                                                                span: bytes(606..609),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: u64,
                                                                span: bytes(611..614),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                ),
                            },
                        },
                        metadata: HydroNodeMetadata {
                            id: None,
                            location_kind: Process(
                                1,
                            ),
                            output_type: Some(
                                Type::Tuple {
                                    paren_token: Paren,
                                    elems: [
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(606..609),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        Comma,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(611..614),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            ),
                        },
                    },
                    metadata: HydroNodeMetadata {
                        id: Some(
                            11,
                        ),
                        location_kind: Process(
                            1,
                        ),
                        output_type: Some(
                            Type::Tuple {
                                paren_token: Paren,
                                elems: [
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u64,
                                                        span: bytes(674..677),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    Comma,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: u64,
                                                        span: bytes(679..682),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                            },
                        ),
                    },
                },
                right: Map {
                    f: stageleft :: runtime_support :: fn1_type_hint :: < tokio :: time :: Instant , () > ({ use hydro_lang :: __staged :: optional :: * ; | _u | () }),
                    input: Source {
                        source: Stream(
                            { use hydro_lang :: __staged :: location :: * ; let interval__free = { use crate :: __staged :: cluster :: compute_pi :: * ; Duration :: from_secs (1) } ; tokio_stream :: wrappers :: IntervalStream :: new (tokio :: time :: interval (interval__free)) },
                        ),
                        location_kind: Process(
                            1,
                        ),
                        metadata: HydroNodeMetadata {
                            id: Some(
                                13,
                            ),
                            location_kind: Process(
                                1,
                            ),
                            output_type: Some(
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: tokio,
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: time,
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: Instant,
                                                    span: bytes(772..779),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ),
                        },
                    },
                    metadata: HydroNodeMetadata {
                        id: Some(
                            17,
                        ),
                        location_kind: Process(
                            1,
                        ),
                        output_type: Some(
                            Type::Tuple {
                                paren_token: Paren,
                                elems: [],
                            },
                        ),
                    },
                },
                metadata: HydroNodeMetadata {
                    id: Some(
                        18,
                    ),
                    location_kind: Process(
                        1,
                    ),
                    output_type: Some(
                        Type::Tuple {
                            paren_token: Paren,
                            elems: [
                                Type::Tuple {
                                    paren_token: Paren,
                                    elems: [
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(910..913),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        Comma,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: u64,
                                                            span: bytes(915..918),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                                Comma,
                                Type::Tuple {
                                    paren_token: Paren,
                                    elems: [],
                                },
                            ],
                        },
                    ),
                },
            },
            metadata: HydroNodeMetadata {
                id: Some(
                    19,
                ),
                location_kind: Process(
                    1,
                ),
                output_type: Some(
                    Type::Tuple {
                        paren_token: Paren,
                        elems: [
                            Type::Path {
                                qself: None,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: u64,
                                                span: bytes(975..978),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                            Comma,
                            Type::Path {
                                qself: None,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: u64,
                                                span: bytes(980..983),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                ),
            },
        },
    },
]
