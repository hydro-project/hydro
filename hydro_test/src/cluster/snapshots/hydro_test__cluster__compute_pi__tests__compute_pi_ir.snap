---
source: hydro_test/src/cluster/compute_pi.rs
expression: built.ir()
---
[
    ForEach {
        f: DebugExpr(
            Expr::Call {
                attrs: [],
                func: Expr::Path {
                    attrs: [],
                    qself: None,
                    path: Path {
                        leading_colon: None,
                        segments: [
                            PathSegment {
                                ident: Ident {
                                    sym: stageleft,
                                },
                                arguments: PathArguments::None,
                            },
                            PathSep,
                            PathSegment {
                                ident: Ident {
                                    sym: runtime_support,
                                },
                                arguments: PathArguments::None,
                            },
                            PathSep,
                            PathSegment {
                                ident: Ident {
                                    sym: fn1_type_hint,
                                },
                                arguments: PathArguments::AngleBracketed {
                                    colon2_token: Some(
                                        PathSep,
                                    ),
                                    lt_token: Lt,
                                    args: [
                                        GenericArgument::Type(
                                            Type::Tuple {
                                                paren_token: Paren,
                                                elems: [
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u64,
                                                                        span: bytes(1616..1619),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: u64,
                                                                        span: bytes(1621..1624),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        ),
                                        Comma,
                                        GenericArgument::Type(
                                            Type::Tuple {
                                                paren_token: Paren,
                                                elems: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Gt,
                                },
                            },
                        ],
                    },
                },
                paren_token: Paren,
                args: [
                    Expr::Block {
                        attrs: [],
                        label: None,
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Item(
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: crate,
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: __staged,
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Path(
                                                            UsePath {
                                                                ident: Ident {
                                                                    sym: __deps,
                                                                },
                                                                colon2_token: PathSep,
                                                                tree: UseTree::Glob(
                                                                    UseGlob {
                                                                        star_token: Star,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Item(
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: crate,
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: __staged,
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Path(
                                                            UsePath {
                                                                ident: Ident {
                                                                    sym: cluster,
                                                                    span: bytes(1487..1494),
                                                                },
                                                                colon2_token: PathSep,
                                                                tree: UseTree::Path(
                                                                    UsePath {
                                                                        ident: Ident {
                                                                            sym: compute_pi,
                                                                            span: bytes(1496..1506),
                                                                        },
                                                                        colon2_token: PathSep,
                                                                        tree: UseTree::Glob(
                                                                            UseGlob {
                                                                                star_token: Star,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Expr(
                                    Expr::Closure {
                                        attrs: [],
                                        lifetimes: None,
                                        constness: None,
                                        movability: None,
                                        asyncness: None,
                                        capture: None,
                                        or1_token: Or,
                                        inputs: [
                                            Pat::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: inside,
                                                            span: bytes(1510..1516),
                                                        },
                                                        subpat: None,
                                                    },
                                                    Comma,
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: total,
                                                            span: bytes(1518..1523),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                            },
                                        ],
                                        or2_token: Or,
                                        output: ReturnType::Default,
                                        body: Expr::Block {
                                            attrs: [],
                                            label: None,
                                            block: Block {
                                                brace_token: Brace,
                                                stmts: [
                                                    Stmt::Macro {
                                                        attrs: [],
                                                        mac: Macro {
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: println,
                                                                            span: bytes(1533..1540),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                            bang_token: Not,
                                                            delimiter: MacroDelimiter::Paren(
                                                                Paren,
                                                            ),
                                                            tokens: TokenStream [
                                                                Literal {
                                                                    lit: "pi: {} ({} trials)",
                                                                    span: bytes(1547..1567),
                                                                },
                                                                Punct {
                                                                    char: ',',
                                                                    spacing: Alone,
                                                                    span: bytes(1567..1568),
                                                                },
                                                                Literal {
                                                                    lit: 4.0,
                                                                    span: bytes(1569..1572),
                                                                },
                                                                Punct {
                                                                    char: '*',
                                                                    spacing: Alone,
                                                                    span: bytes(1573..1574),
                                                                },
                                                                Ident {
                                                                    sym: inside,
                                                                    span: bytes(1575..1581),
                                                                },
                                                                Ident {
                                                                    sym: as,
                                                                    span: bytes(1582..1584),
                                                                },
                                                                Ident {
                                                                    sym: f64,
                                                                    span: bytes(1585..1588),
                                                                },
                                                                Punct {
                                                                    char: '/',
                                                                    spacing: Alone,
                                                                    span: bytes(1589..1590),
                                                                },
                                                                Ident {
                                                                    sym: total,
                                                                    span: bytes(1591..1596),
                                                                },
                                                                Ident {
                                                                    sym: as,
                                                                    span: bytes(1597..1599),
                                                                },
                                                                Ident {
                                                                    sym: f64,
                                                                    span: bytes(1600..1603),
                                                                },
                                                                Punct {
                                                                    char: ',',
                                                                    spacing: Alone,
                                                                    span: bytes(1603..1604),
                                                                },
                                                                Ident {
                                                                    sym: total,
                                                                    span: bytes(1605..1610),
                                                                },
                                                            ],
                                                        },
                                                        semi_token: Some(
                                                            Semi,
                                                        ),
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ],
            },
        ),
        input: Map {
            f: DebugExpr(
                Expr::Call {
                    attrs: [],
                    func: Expr::Path {
                        attrs: [],
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident {
                                        sym: stageleft,
                                    },
                                    arguments: PathArguments::None,
                                },
                                PathSep,
                                PathSegment {
                                    ident: Ident {
                                        sym: runtime_support,
                                    },
                                    arguments: PathArguments::None,
                                },
                                PathSep,
                                PathSegment {
                                    ident: Ident {
                                        sym: fn1_type_hint,
                                    },
                                    arguments: PathArguments::AngleBracketed {
                                        colon2_token: Some(
                                            PathSep,
                                        ),
                                        lt_token: Lt,
                                        args: [
                                            GenericArgument::Type(
                                                Type::Tuple {
                                                    paren_token: Paren,
                                                    elems: [
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(1427..1430),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(1432..1435),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                        Comma,
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [],
                                                        },
                                                    ],
                                                },
                                            ),
                                            Comma,
                                            GenericArgument::Type(
                                                Type::Tuple {
                                                    paren_token: Paren,
                                                    elems: [
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u64,
                                                                            span: bytes(1443..1446),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        Comma,
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: u64,
                                                                            span: bytes(1448..1451),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                            ),
                                        ],
                                        gt_token: Gt,
                                    },
                                },
                            ],
                        },
                    },
                    paren_token: Paren,
                    args: [
                        Expr::Block {
                            attrs: [],
                            label: None,
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Item(
                                        Item::Use {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            use_token: Use,
                                            leading_colon: None,
                                            tree: UseTree::Path(
                                                UsePath {
                                                    ident: Ident {
                                                        sym: hydro_lang,
                                                    },
                                                    colon2_token: PathSep,
                                                    tree: UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: __staged,
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: __deps,
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Glob(
                                                                        UseGlob {
                                                                            star_token: Star,
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                    ),
                                    Stmt::Item(
                                        Item::Use {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            use_token: Use,
                                            leading_colon: None,
                                            tree: UseTree::Path(
                                                UsePath {
                                                    ident: Ident {
                                                        sym: hydro_lang,
                                                    },
                                                    colon2_token: PathSep,
                                                    tree: UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: __staged,
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: optional,
                                                                        span: bytes(1397..1405),
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Glob(
                                                                        UseGlob {
                                                                            star_token: Star,
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                    ),
                                    Stmt::Expr(
                                        Expr::Closure {
                                            attrs: [],
                                            lifetimes: None,
                                            constness: None,
                                            movability: None,
                                            asyncness: None,
                                            capture: None,
                                            or1_token: Or,
                                            inputs: [
                                                Pat::Tuple {
                                                    attrs: [],
                                                    paren_token: Paren,
                                                    elems: [
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: d,
                                                                span: bytes(1409..1410),
                                                            },
                                                            subpat: None,
                                                        },
                                                        Comma,
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: _signal,
                                                                span: bytes(1412..1419),
                                                            },
                                                            subpat: None,
                                                        },
                                                    ],
                                                },
                                            ],
                                            or2_token: Or,
                                            output: ReturnType::Default,
                                            body: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: d,
                                                                span: bytes(1423..1424),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                    ],
                },
            ),
            input: CrossSingleton {
                left: Reduce {
                    f: DebugExpr(
                        Expr::Call {
                            attrs: [],
                            func: Expr::Path {
                                attrs: [],
                                qself: None,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: stageleft,
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: runtime_support,
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: fn2_borrow_mut_type_hint,
                                            },
                                            arguments: PathArguments::AngleBracketed {
                                                colon2_token: Some(
                                                    PathSep,
                                                ),
                                                lt_token: Lt,
                                                args: [
                                                    GenericArgument::Type(
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(983..986),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(988..991),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                    GenericArgument::Type(
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(994..997),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: u64,
                                                                                    span: bytes(999..1002),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                    GenericArgument::Type(
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [],
                                                        },
                                                    ),
                                                ],
                                                gt_token: Gt,
                                            },
                                        },
                                    ],
                                },
                            },
                            paren_token: Paren,
                            args: [
                                Expr::Block {
                                    attrs: [],
                                    label: None,
                                    block: Block {
                                        brace_token: Brace,
                                        stmts: [
                                            Stmt::Item(
                                                Item::Use {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    use_token: Use,
                                                    leading_colon: None,
                                                    tree: UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: crate,
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: __staged,
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: __deps,
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Glob(
                                                                                UseGlob {
                                                                                    star_token: Star,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                            ),
                                            Stmt::Item(
                                                Item::Use {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    use_token: Use,
                                                    leading_colon: None,
                                                    tree: UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: crate,
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: __staged,
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: cluster,
                                                                                span: bytes(859..866),
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: compute_pi,
                                                                                        span: bytes(868..878),
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Glob(
                                                                                        UseGlob {
                                                                                            star_token: Star,
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                            ),
                                            Stmt::Expr(
                                                Expr::Closure {
                                                    attrs: [],
                                                    lifetimes: None,
                                                    constness: None,
                                                    movability: None,
                                                    asyncness: None,
                                                    capture: None,
                                                    or1_token: Or,
                                                    inputs: [
                                                        Pat::Tuple {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: inside,
                                                                        span: bytes(882..888),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                Comma,
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: total,
                                                                        span: bytes(890..895),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                        },
                                                        Comma,
                                                        Pat::Tuple {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: inside_batch,
                                                                        span: bytes(899..911),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                                Comma,
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: total_batch,
                                                                        span: bytes(913..924),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                        },
                                                    ],
                                                    or2_token: Or,
                                                    output: ReturnType::Default,
                                                    body: Expr::Block {
                                                        attrs: [],
                                                        label: None,
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Deref(
                                                                                Star,
                                                                            ),
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: inside,
                                                                                                span: bytes(932..938),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::AddAssign(
                                                                            PlusEq,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: inside_batch,
                                                                                            span: bytes(942..954),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                                Stmt::Expr(
                                                                    Expr::Binary {
                                                                        attrs: [],
                                                                        left: Expr::Unary {
                                                                            attrs: [],
                                                                            op: UnOp::Deref(
                                                                                Star,
                                                                            ),
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: total,
                                                                                                span: bytes(958..963),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                        op: BinOp::AddAssign(
                                                                            PlusEq,
                                                                        ),
                                                                        right: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: total_batch,
                                                                                            span: bytes(967..978),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    Some(
                                                                        Semi,
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                },
                                                None,
                                            ),
                                        ],
                                    },
                                },
                            ],
                        },
                    ),
                    input: Persist {
                        inner: Map {
                            f: DebugExpr(
                                Expr::Call {
                                    attrs: [],
                                    func: Expr::Path {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: stageleft,
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: runtime_support,
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: fn1_type_hint,
                                                    },
                                                    arguments: PathArguments::AngleBracketed {
                                                        colon2_token: Some(
                                                            PathSep,
                                                        ),
                                                        lt_token: Lt,
                                                        args: [
                                                            GenericArgument::Type(
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: hydro_test,
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: __staged,
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: __deps,
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: hydro_lang,
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: location,
                                                                                            span: bytes(730..738),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: cluster,
                                                                                            span: bytes(740..747),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: cluster_id,
                                                                                            span: bytes(749..759),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: ClusterId,
                                                                                            span: bytes(761..770),
                                                                                        },
                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                            colon2_token: None,
                                                                                            lt_token: Lt,
                                                                                            args: [
                                                                                                GenericArgument::Type(
                                                                                                    Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: hydro_test,
                                                                                                                        span: bytes(771..781),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: __staged,
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: cluster,
                                                                                                                        span: bytes(783..790),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: compute_pi,
                                                                                                                        span: bytes(792..802),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Worker,
                                                                                                                        span: bytes(804..810),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                            gt_token: Gt,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Tuple {
                                                                            paren_token: Paren,
                                                                            elems: [
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u64,
                                                                                                    span: bytes(814..817),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u64,
                                                                                                    span: bytes(819..822),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                            Comma,
                                                            GenericArgument::Type(
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u64,
                                                                                            span: bytes(826..829),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: u64,
                                                                                            span: bytes(831..834),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Gt,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    paren_token: Paren,
                                    args: [
                                        Expr::Block {
                                            attrs: [],
                                            label: None,
                                            block: Block {
                                                brace_token: Brace,
                                                stmts: [
                                                    Stmt::Item(
                                                        Item::Use {
                                                            attrs: [],
                                                            vis: Visibility::Inherited,
                                                            use_token: Use,
                                                            leading_colon: None,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: hydro_lang,
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: __staged,
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: __deps,
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Glob(
                                                                                        UseGlob {
                                                                                            star_token: Star,
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                    ),
                                                    Stmt::Item(
                                                        Item::Use {
                                                            attrs: [],
                                                            vis: Visibility::Inherited,
                                                            use_token: Use,
                                                            leading_colon: None,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: hydro_lang,
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: __staged,
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: stream,
                                                                                        span: bytes(697..703),
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Glob(
                                                                                        UseGlob {
                                                                                            star_token: Star,
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                    ),
                                                    Stmt::Expr(
                                                        Expr::Closure {
                                                            attrs: [],
                                                            lifetimes: None,
                                                            constness: None,
                                                            movability: None,
                                                            asyncness: None,
                                                            capture: None,
                                                            or1_token: Or,
                                                            inputs: [
                                                                Pat::Tuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Wild {
                                                                            attrs: [],
                                                                            underscore_token: Underscore,
                                                                        },
                                                                        Comma,
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: b,
                                                                                span: bytes(710..711),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ],
                                                            or2_token: Or,
                                                            output: ReturnType::Default,
                                                            body: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: b,
                                                                                span: bytes(715..716),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        None,
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            ),
                            input: Network {
                                from_key: None,
                                to_location: Process(
                                    1,
                                ),
                                to_key: None,
                                serialize_fn: Some(
                                    DebugExpr(
                                        Expr::Call {
                                            attrs: [],
                                            func: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: Some(
                                                        PathSep,
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: hydro_lang,
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: runtime_support,
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: stageleft,
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: runtime_support,
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fn1_type_hint,
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: Some(
                                                                    PathSep,
                                                                ),
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Type(
                                                                        Type::Tuple {
                                                                            paren_token: Paren,
                                                                            elems: [
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u64,
                                                                                                    span: bytes(613..616),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u64,
                                                                                                    span: bytes(618..621),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    GenericArgument::Type(
                                                                        Type::Infer {
                                                                            underscore_token: Underscore,
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            paren_token: Paren,
                                            args: [
                                                Expr::Closure {
                                                    attrs: [],
                                                    lifetimes: None,
                                                    constness: None,
                                                    movability: None,
                                                    asyncness: None,
                                                    capture: None,
                                                    or1_token: Or,
                                                    inputs: [
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: data,
                                                            },
                                                            subpat: None,
                                                        },
                                                    ],
                                                    or2_token: Or,
                                                    output: ReturnType::Default,
                                                    body: Expr::Block {
                                                        attrs: [],
                                                        label: None,
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::MethodCall {
                                                                            attrs: [],
                                                                            receiver: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: hydro_lang,
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                            PathSep,
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: runtime_support,
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                            PathSep,
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: bincode,
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                            PathSep,
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: serialize,
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [
                                                                                    Expr::Reference {
                                                                                        attrs: [],
                                                                                        and_token: And,
                                                                                        mutability: None,
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: data,
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            dot_token: Dot,
                                                                            method: Ident {
                                                                                sym: unwrap,
                                                                            },
                                                                            turbofish: None,
                                                                            paren_token: Paren,
                                                                            args: [],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: into,
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                },
                                            ],
                                        },
                                    ),
                                ),
                                instantiate_fn: <network instantiate>,
                                deserialize_fn: Some(
                                    DebugExpr(
                                        Expr::Closure {
                                            attrs: [],
                                            lifetimes: None,
                                            constness: None,
                                            movability: None,
                                            asyncness: None,
                                            capture: None,
                                            or1_token: Or,
                                            inputs: [
                                                Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: res,
                                                    },
                                                    subpat: None,
                                                },
                                            ],
                                            or2_token: Or,
                                            output: ReturnType::Default,
                                            body: Expr::Block {
                                                attrs: [],
                                                label: None,
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Local {
                                                            attrs: [],
                                                            let_token: Let,
                                                            pat: Pat::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: id,
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    Comma,
                                                                    Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: b,
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                ],
                                                            },
                                                            init: Some(
                                                                LocalInit {
                                                                    eq_token: Eq,
                                                                    expr: Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: res,
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: unwrap,
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    diverge: None,
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                        Stmt::Expr(
                                                            Expr::Tuple {
                                                                attrs: [],
                                                                paren_token: Paren,
                                                                elems: [
                                                                    Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: hydro_lang,
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: ClusterId,
                                                                                        },
                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                            colon2_token: Some(
                                                                                                PathSep,
                                                                                            ),
                                                                                            lt_token: Lt,
                                                                                            args: [
                                                                                                GenericArgument::Type(
                                                                                                    Type::Path {
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: None,
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: hydro_test,
                                                                                                                        span: bytes(623..633),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: __staged,
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: cluster,
                                                                                                                        span: bytes(635..642),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: compute_pi,
                                                                                                                        span: bytes(644..654),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: Worker,
                                                                                                                        span: bytes(656..662),
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                            gt_token: Gt,
                                                                                        },
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: from_raw,
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: id,
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    Comma,
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: hydro_lang,
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: runtime_support,
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: bincode,
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: deserialize,
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: Some(
                                                                                                    PathSep,
                                                                                                ),
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Tuple {
                                                                                                            paren_token: Paren,
                                                                                                            elems: [
                                                                                                                Type::Path {
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: u64,
                                                                                                                                    span: bytes(664..667),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                                Comma,
                                                                                                                Type::Path {
                                                                                                                    qself: None,
                                                                                                                    path: Path {
                                                                                                                        leading_colon: None,
                                                                                                                        segments: [
                                                                                                                            PathSegment {
                                                                                                                                ident: Ident {
                                                                                                                                    sym: u64,
                                                                                                                                    span: bytes(669..672),
                                                                                                                                },
                                                                                                                                arguments: PathArguments::None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Reference {
                                                                                    attrs: [],
                                                                                    and_token: And,
                                                                                    mutability: None,
                                                                                    expr: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: b,
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: unwrap,
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                ],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        },
                                    ),
                                ),
                                input: Fold {
                                    init: DebugExpr(
                                        Expr::Call {
                                            attrs: [],
                                            func: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: stageleft,
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: runtime_support,
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fn0_type_hint,
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: Some(
                                                                    PathSep,
                                                                ),
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Type(
                                                                        Type::Tuple {
                                                                            paren_token: Paren,
                                                                            elems: [
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u64,
                                                                                                    span: bytes(440..443),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u64,
                                                                                                    span: bytes(445..448),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            paren_token: Paren,
                                            args: [
                                                Expr::Block {
                                                    attrs: [],
                                                    label: None,
                                                    block: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Item(
                                                                Item::Use {
                                                                    attrs: [],
                                                                    vis: Visibility::Inherited,
                                                                    use_token: Use,
                                                                    leading_colon: None,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: crate,
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: __staged,
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: __deps,
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Glob(
                                                                                                UseGlob {
                                                                                                    star_token: Star,
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                            ),
                                                            Stmt::Item(
                                                                Item::Use {
                                                                    attrs: [],
                                                                    vis: Visibility::Inherited,
                                                                    use_token: Use,
                                                                    leading_colon: None,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: crate,
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: __staged,
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: cluster,
                                                                                                span: bytes(402..409),
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Path(
                                                                                                UsePath {
                                                                                                    ident: Ident {
                                                                                                        sym: compute_pi,
                                                                                                        span: bytes(411..421),
                                                                                                    },
                                                                                                    colon2_token: PathSep,
                                                                                                    tree: UseTree::Glob(
                                                                                                        UseGlob {
                                                                                                            star_token: Star,
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Closure {
                                                                    attrs: [],
                                                                    lifetimes: None,
                                                                    constness: None,
                                                                    movability: None,
                                                                    asyncness: None,
                                                                    capture: None,
                                                                    or1_token: Or,
                                                                    inputs: [],
                                                                    or2_token: Or,
                                                                    output: ReturnType::Default,
                                                                    body: Expr::Tuple {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 0u64,
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Int {
                                                                                    token: 0u64,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    ),
                                    acc: DebugExpr(
                                        Expr::Call {
                                            attrs: [],
                                            func: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: stageleft,
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: runtime_support,
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fn2_borrow_mut_type_hint,
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: Some(
                                                                    PathSep,
                                                                ),
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Type(
                                                                        Type::Tuple {
                                                                            paren_token: Paren,
                                                                            elems: [
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u64,
                                                                                                    span: bytes(572..575),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: u64,
                                                                                                    span: bytes(577..580),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    GenericArgument::Type(
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: bool,
                                                                                            span: bytes(582..586),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    GenericArgument::Type(
                                                                        Type::Tuple {
                                                                            paren_token: Paren,
                                                                            elems: [],
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            paren_token: Paren,
                                            args: [
                                                Expr::Block {
                                                    attrs: [],
                                                    label: None,
                                                    block: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Item(
                                                                Item::Use {
                                                                    attrs: [],
                                                                    vis: Visibility::Inherited,
                                                                    use_token: Use,
                                                                    leading_colon: None,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: crate,
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: __staged,
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: __deps,
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Glob(
                                                                                                UseGlob {
                                                                                                    star_token: Star,
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                            ),
                                                            Stmt::Item(
                                                                Item::Use {
                                                                    attrs: [],
                                                                    vis: Visibility::Inherited,
                                                                    use_token: Use,
                                                                    leading_colon: None,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: crate,
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: __staged,
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: cluster,
                                                                                                span: bytes(462..469),
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Path(
                                                                                                UsePath {
                                                                                                    ident: Ident {
                                                                                                        sym: compute_pi,
                                                                                                        span: bytes(471..481),
                                                                                                    },
                                                                                                    colon2_token: PathSep,
                                                                                                    tree: UseTree::Glob(
                                                                                                        UseGlob {
                                                                                                            star_token: Star,
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Closure {
                                                                    attrs: [],
                                                                    lifetimes: None,
                                                                    constness: None,
                                                                    movability: None,
                                                                    asyncness: None,
                                                                    capture: None,
                                                                    or1_token: Or,
                                                                    inputs: [
                                                                        Pat::Tuple {
                                                                            attrs: [],
                                                                            paren_token: Paren,
                                                                            elems: [
                                                                                Pat::Ident {
                                                                                    attrs: [],
                                                                                    by_ref: None,
                                                                                    mutability: None,
                                                                                    ident: Ident {
                                                                                        sym: inside,
                                                                                        span: bytes(485..491),
                                                                                    },
                                                                                    subpat: None,
                                                                                },
                                                                                Comma,
                                                                                Pat::Ident {
                                                                                    attrs: [],
                                                                                    by_ref: None,
                                                                                    mutability: None,
                                                                                    ident: Ident {
                                                                                        sym: total,
                                                                                        span: bytes(493..498),
                                                                                    },
                                                                                    subpat: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                        Comma,
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: sample_inside,
                                                                                span: bytes(501..514),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                    or2_token: Or,
                                                                    output: ReturnType::Default,
                                                                    body: Expr::Block {
                                                                        attrs: [],
                                                                        label: None,
                                                                        block: Block {
                                                                            brace_token: Brace,
                                                                            stmts: [
                                                                                Stmt::Expr(
                                                                                    Expr::If {
                                                                                        attrs: [],
                                                                                        if_token: If,
                                                                                        cond: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: sample_inside,
                                                                                                            span: bytes(522..535),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        then_branch: Block {
                                                                                            brace_token: Brace,
                                                                                            stmts: [
                                                                                                Stmt::Expr(
                                                                                                    Expr::Binary {
                                                                                                        attrs: [],
                                                                                                        left: Expr::Unary {
                                                                                                            attrs: [],
                                                                                                            op: UnOp::Deref(
                                                                                                                Star,
                                                                                                            ),
                                                                                                            expr: Expr::Path {
                                                                                                                attrs: [],
                                                                                                                qself: None,
                                                                                                                path: Path {
                                                                                                                    leading_colon: None,
                                                                                                                    segments: [
                                                                                                                        PathSegment {
                                                                                                                            ident: Ident {
                                                                                                                                sym: inside,
                                                                                                                                span: bytes(540..546),
                                                                                                                            },
                                                                                                                            arguments: PathArguments::None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        op: BinOp::AddAssign(
                                                                                                            PlusEq,
                                                                                                        ),
                                                                                                        right: Expr::Lit {
                                                                                                            attrs: [],
                                                                                                            lit: Lit::Int {
                                                                                                                token: 1,
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    Some(
                                                                                                        Semi,
                                                                                                    ),
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                        else_branch: None,
                                                                                    },
                                                                                    None,
                                                                                ),
                                                                                Stmt::Expr(
                                                                                    Expr::Binary {
                                                                                        attrs: [],
                                                                                        left: Expr::Unary {
                                                                                            attrs: [],
                                                                                            op: UnOp::Deref(
                                                                                                Star,
                                                                                            ),
                                                                                            expr: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: total,
                                                                                                                span: bytes(557..562),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        op: BinOp::AddAssign(
                                                                                            PlusEq,
                                                                                        ),
                                                                                        right: Expr::Lit {
                                                                                            attrs: [],
                                                                                            lit: Lit::Int {
                                                                                                token: 1,
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    Some(
                                                                                        Semi,
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    ),
                                    input: Map {
                                        f: DebugExpr(
                                            Expr::Call {
                                                attrs: [],
                                                func: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: stageleft,
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: runtime_support,
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: fn1_type_hint,
                                                                },
                                                                arguments: PathArguments::AngleBracketed {
                                                                    colon2_token: Some(
                                                                        PathSep,
                                                                    ),
                                                                    lt_token: Lt,
                                                                    args: [
                                                                        GenericArgument::Type(
                                                                            Type::Tuple {
                                                                                paren_token: Paren,
                                                                                elems: [
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: f64,
                                                                                                        span: bytes(370..373),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    Comma,
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: f64,
                                                                                                        span: bytes(375..378),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                        Comma,
                                                                        GenericArgument::Type(
                                                                            Type::Path {
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: bool,
                                                                                                span: bytes(380..384),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ),
                                                                    ],
                                                                    gt_token: Gt,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                paren_token: Paren,
                                                args: [
                                                    Expr::Block {
                                                        attrs: [],
                                                        label: None,
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Item(
                                                                    Item::Use {
                                                                        attrs: [],
                                                                        vis: Visibility::Inherited,
                                                                        use_token: Use,
                                                                        leading_colon: None,
                                                                        tree: UseTree::Path(
                                                                            UsePath {
                                                                                ident: Ident {
                                                                                    sym: crate,
                                                                                },
                                                                                colon2_token: PathSep,
                                                                                tree: UseTree::Path(
                                                                                    UsePath {
                                                                                        ident: Ident {
                                                                                            sym: __staged,
                                                                                        },
                                                                                        colon2_token: PathSep,
                                                                                        tree: UseTree::Path(
                                                                                            UsePath {
                                                                                                ident: Ident {
                                                                                                    sym: __deps,
                                                                                                },
                                                                                                colon2_token: PathSep,
                                                                                                tree: UseTree::Glob(
                                                                                                    UseGlob {
                                                                                                        star_token: Star,
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        semi_token: Semi,
                                                                    },
                                                                ),
                                                                Stmt::Item(
                                                                    Item::Use {
                                                                        attrs: [],
                                                                        vis: Visibility::Inherited,
                                                                        use_token: Use,
                                                                        leading_colon: None,
                                                                        tree: UseTree::Path(
                                                                            UsePath {
                                                                                ident: Ident {
                                                                                    sym: crate,
                                                                                },
                                                                                colon2_token: PathSep,
                                                                                tree: UseTree::Path(
                                                                                    UsePath {
                                                                                        ident: Ident {
                                                                                            sym: __staged,
                                                                                        },
                                                                                        colon2_token: PathSep,
                                                                                        tree: UseTree::Path(
                                                                                            UsePath {
                                                                                                ident: Ident {
                                                                                                    sym: cluster,
                                                                                                    span: bytes(318..325),
                                                                                                },
                                                                                                colon2_token: PathSep,
                                                                                                tree: UseTree::Path(
                                                                                                    UsePath {
                                                                                                        ident: Ident {
                                                                                                            sym: compute_pi,
                                                                                                            span: bytes(327..337),
                                                                                                        },
                                                                                                        colon2_token: PathSep,
                                                                                                        tree: UseTree::Glob(
                                                                                                            UseGlob {
                                                                                                                star_token: Star,
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        semi_token: Semi,
                                                                    },
                                                                ),
                                                                Stmt::Expr(
                                                                    Expr::Closure {
                                                                        attrs: [],
                                                                        lifetimes: None,
                                                                        constness: None,
                                                                        movability: None,
                                                                        asyncness: None,
                                                                        capture: None,
                                                                        or1_token: Or,
                                                                        inputs: [
                                                                            Pat::Tuple {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                elems: [
                                                                                    Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: x,
                                                                                            span: bytes(341..342),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                    Comma,
                                                                                    Pat::Ident {
                                                                                        attrs: [],
                                                                                        by_ref: None,
                                                                                        mutability: None,
                                                                                        ident: Ident {
                                                                                            sym: y,
                                                                                            span: bytes(344..345),
                                                                                        },
                                                                                        subpat: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ],
                                                                        or2_token: Or,
                                                                        output: ReturnType::Default,
                                                                        body: Expr::Binary {
                                                                            attrs: [],
                                                                            left: Expr::Binary {
                                                                                attrs: [],
                                                                                left: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: x,
                                                                                                        span: bytes(349..350),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Mul(
                                                                                        Star,
                                                                                    ),
                                                                                    right: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: x,
                                                                                                        span: bytes(353..354),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                                op: BinOp::Add(
                                                                                    Plus,
                                                                                ),
                                                                                right: Expr::Binary {
                                                                                    attrs: [],
                                                                                    left: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: y,
                                                                                                        span: bytes(357..358),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                    op: BinOp::Mul(
                                                                                        Star,
                                                                                    ),
                                                                                    right: Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: y,
                                                                                                        span: bytes(361..362),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                },
                                                                            },
                                                                            op: BinOp::Lt(
                                                                                Lt,
                                                                            ),
                                                                            right: Expr::Lit {
                                                                                attrs: [],
                                                                                lit: Lit::Float {
                                                                                    token: 1.0,
                                                                                },
                                                                            },
                                                                        },
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        ),
                                        input: Map {
                                            f: DebugExpr(
                                                Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: stageleft,
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: runtime_support,
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: fn1_type_hint,
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: Some(
                                                                            PathSep,
                                                                        ),
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Type(
                                                                                Type::Tuple {
                                                                                    paren_token: Paren,
                                                                                    elems: [],
                                                                                },
                                                                            ),
                                                                            Comma,
                                                                            GenericArgument::Type(
                                                                                Type::Tuple {
                                                                                    paren_token: Paren,
                                                                                    elems: [
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: f64,
                                                                                                            span: bytes(285..288),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        Comma,
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: f64,
                                                                                                            span: bytes(290..293),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Block {
                                                            attrs: [],
                                                            label: None,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Item(
                                                                        Item::Use {
                                                                            attrs: [],
                                                                            vis: Visibility::Inherited,
                                                                            use_token: Use,
                                                                            leading_colon: None,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: crate,
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: __staged,
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Path(
                                                                                                UsePath {
                                                                                                    ident: Ident {
                                                                                                        sym: __deps,
                                                                                                    },
                                                                                                    colon2_token: PathSep,
                                                                                                    tree: UseTree::Glob(
                                                                                                        UseGlob {
                                                                                                            star_token: Star,
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                    ),
                                                                    Stmt::Item(
                                                                        Item::Use {
                                                                            attrs: [],
                                                                            vis: Visibility::Inherited,
                                                                            use_token: Use,
                                                                            leading_colon: None,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: crate,
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: __staged,
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Path(
                                                                                                UsePath {
                                                                                                    ident: Ident {
                                                                                                        sym: cluster,
                                                                                                        span: bytes(219..226),
                                                                                                    },
                                                                                                    colon2_token: PathSep,
                                                                                                    tree: UseTree::Path(
                                                                                                        UsePath {
                                                                                                            ident: Ident {
                                                                                                                sym: compute_pi,
                                                                                                                span: bytes(228..238),
                                                                                                            },
                                                                                                            colon2_token: PathSep,
                                                                                                            tree: UseTree::Glob(
                                                                                                                UseGlob {
                                                                                                                    star_token: Star,
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                    ),
                                                                    Stmt::Expr(
                                                                        Expr::Closure {
                                                                            attrs: [],
                                                                            lifetimes: None,
                                                                            constness: None,
                                                                            movability: None,
                                                                            asyncness: None,
                                                                            capture: None,
                                                                            or1_token: Or,
                                                                            inputs: [
                                                                                Pat::Wild {
                                                                                    attrs: [],
                                                                                    underscore_token: Underscore,
                                                                                },
                                                                            ],
                                                                            or2_token: Or,
                                                                            output: ReturnType::Default,
                                                                            body: Expr::Call {
                                                                                attrs: [],
                                                                                func: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: rand,
                                                                                                    span: bytes(245..249),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                            PathSep,
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: random,
                                                                                                    span: bytes(253..259),
                                                                                                },
                                                                                                arguments: PathArguments::AngleBracketed {
                                                                                                    colon2_token: Some(
                                                                                                        PathSep,
                                                                                                    ),
                                                                                                    lt_token: Lt,
                                                                                                    args: [
                                                                                                        GenericArgument::Type(
                                                                                                            Type::Tuple {
                                                                                                                paren_token: Paren,
                                                                                                                elems: [
                                                                                                                    Type::Path {
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: f64,
                                                                                                                                        span: bytes(266..269),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                    Comma,
                                                                                                                    Type::Path {
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: f64,
                                                                                                                                        span: bytes(271..274),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                    gt_token: Gt,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                paren_token: Paren,
                                                                                args: [],
                                                                            },
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                            ),
                                            input: Map {
                                                f: DebugExpr(
                                                    Expr::Call {
                                                        attrs: [],
                                                        func: Expr::Path {
                                                            attrs: [],
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: stageleft,
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: runtime_support,
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: fn1_type_hint,
                                                                        },
                                                                        arguments: PathArguments::AngleBracketed {
                                                                            colon2_token: Some(
                                                                                PathSep,
                                                                            ),
                                                                            lt_token: Lt,
                                                                            args: [
                                                                                GenericArgument::Type(
                                                                                    Type::Path {
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: usize,
                                                                                                        span: bytes(192..197),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                Comma,
                                                                                GenericArgument::Type(
                                                                                    Type::Tuple {
                                                                                        paren_token: Paren,
                                                                                        elems: [],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            gt_token: Gt,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        paren_token: Paren,
                                                        args: [
                                                            Expr::Block {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Item(
                                                                            Item::Use {
                                                                                attrs: [],
                                                                                vis: Visibility::Inherited,
                                                                                use_token: Use,
                                                                                leading_colon: None,
                                                                                tree: UseTree::Path(
                                                                                    UsePath {
                                                                                        ident: Ident {
                                                                                            sym: hydro_lang,
                                                                                        },
                                                                                        colon2_token: PathSep,
                                                                                        tree: UseTree::Path(
                                                                                            UsePath {
                                                                                                ident: Ident {
                                                                                                    sym: __staged,
                                                                                                },
                                                                                                colon2_token: PathSep,
                                                                                                tree: UseTree::Path(
                                                                                                    UsePath {
                                                                                                        ident: Ident {
                                                                                                            sym: __deps,
                                                                                                        },
                                                                                                        colon2_token: PathSep,
                                                                                                        tree: UseTree::Glob(
                                                                                                            UseGlob {
                                                                                                                star_token: Star,
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                                semi_token: Semi,
                                                                            },
                                                                        ),
                                                                        Stmt::Item(
                                                                            Item::Use {
                                                                                attrs: [],
                                                                                vis: Visibility::Inherited,
                                                                                use_token: Use,
                                                                                leading_colon: None,
                                                                                tree: UseTree::Path(
                                                                                    UsePath {
                                                                                        ident: Ident {
                                                                                            sym: hydro_lang,
                                                                                        },
                                                                                        colon2_token: PathSep,
                                                                                        tree: UseTree::Path(
                                                                                            UsePath {
                                                                                                ident: Ident {
                                                                                                    sym: __staged,
                                                                                                },
                                                                                                colon2_token: PathSep,
                                                                                                tree: UseTree::Path(
                                                                                                    UsePath {
                                                                                                        ident: Ident {
                                                                                                            sym: location,
                                                                                                            span: bytes(168..176),
                                                                                                        },
                                                                                                        colon2_token: PathSep,
                                                                                                        tree: UseTree::Path(
                                                                                                            UsePath {
                                                                                                                ident: Ident {
                                                                                                                    sym: tick,
                                                                                                                    span: bytes(178..182),
                                                                                                                },
                                                                                                                colon2_token: PathSep,
                                                                                                                tree: UseTree::Glob(
                                                                                                                    UseGlob {
                                                                                                                        star_token: Star,
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                                semi_token: Semi,
                                                                            },
                                                                        ),
                                                                        Stmt::Expr(
                                                                            Expr::Closure {
                                                                                attrs: [],
                                                                                lifetimes: None,
                                                                                constness: None,
                                                                                movability: None,
                                                                                asyncness: None,
                                                                                capture: None,
                                                                                or1_token: Or,
                                                                                inputs: [
                                                                                    Pat::Wild {
                                                                                        attrs: [],
                                                                                        underscore_token: Underscore,
                                                                                    },
                                                                                ],
                                                                                or2_token: Or,
                                                                                output: ReturnType::Default,
                                                                                body: Expr::Tuple {
                                                                                    attrs: [],
                                                                                    paren_token: Paren,
                                                                                    elems: [],
                                                                                },
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                ),
                                                input: FlatMap {
                                                    f: DebugExpr(
                                                        Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: stageleft,
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: runtime_support,
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: fn1_type_hint,
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: Some(
                                                                                    PathSep,
                                                                                ),
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Tuple {
                                                                                            paren_token: Paren,
                                                                                            elems: [],
                                                                                        },
                                                                                    ),
                                                                                    Comma,
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: std,
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: ops,
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: Range,
                                                                                                            span: bytes(137..142),
                                                                                                        },
                                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                                            colon2_token: None,
                                                                                                            lt_token: Lt,
                                                                                                            args: [
                                                                                                                GenericArgument::Type(
                                                                                                                    Type::Path {
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: usize,
                                                                                                                                        span: bytes(143..148),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                            gt_token: Gt,
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Item(
                                                                                Item::Use {
                                                                                    attrs: [],
                                                                                    vis: Visibility::Inherited,
                                                                                    use_token: Use,
                                                                                    leading_colon: None,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: hydro_lang,
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Path(
                                                                                                UsePath {
                                                                                                    ident: Ident {
                                                                                                        sym: __staged,
                                                                                                    },
                                                                                                    colon2_token: PathSep,
                                                                                                    tree: UseTree::Path(
                                                                                                        UsePath {
                                                                                                            ident: Ident {
                                                                                                                sym: __deps,
                                                                                                            },
                                                                                                            colon2_token: PathSep,
                                                                                                            tree: UseTree::Glob(
                                                                                                                UseGlob {
                                                                                                                    star_token: Star,
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    semi_token: Semi,
                                                                                },
                                                                            ),
                                                                            Stmt::Item(
                                                                                Item::Use {
                                                                                    attrs: [],
                                                                                    vis: Visibility::Inherited,
                                                                                    use_token: Use,
                                                                                    leading_colon: None,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: hydro_lang,
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Path(
                                                                                                UsePath {
                                                                                                    ident: Ident {
                                                                                                        sym: __staged,
                                                                                                    },
                                                                                                    colon2_token: PathSep,
                                                                                                    tree: UseTree::Path(
                                                                                                        UsePath {
                                                                                                            ident: Ident {
                                                                                                                sym: location,
                                                                                                                span: bytes(68..76),
                                                                                                            },
                                                                                                            colon2_token: PathSep,
                                                                                                            tree: UseTree::Path(
                                                                                                                UsePath {
                                                                                                                    ident: Ident {
                                                                                                                        sym: tick,
                                                                                                                        span: bytes(78..82),
                                                                                                                    },
                                                                                                                    colon2_token: PathSep,
                                                                                                                    tree: UseTree::Glob(
                                                                                                                        UseGlob {
                                                                                                                            star_token: Star,
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    semi_token: Semi,
                                                                                },
                                                                            ),
                                                                            Stmt::Local {
                                                                                attrs: [],
                                                                                let_token: Let,
                                                                                pat: Pat::Ident {
                                                                                    attrs: [],
                                                                                    by_ref: None,
                                                                                    mutability: None,
                                                                                    ident: Ident {
                                                                                        sym: batch_size__free,
                                                                                    },
                                                                                    subpat: None,
                                                                                },
                                                                                init: Some(
                                                                                    LocalInit {
                                                                                        eq_token: Eq,
                                                                                        expr: Expr::Block {
                                                                                            attrs: [],
                                                                                            label: None,
                                                                                            block: Block {
                                                                                                brace_token: Brace,
                                                                                                stmts: [
                                                                                                    Stmt::Item(
                                                                                                        Item::Use {
                                                                                                            attrs: [],
                                                                                                            vis: Visibility::Inherited,
                                                                                                            use_token: Use,
                                                                                                            leading_colon: None,
                                                                                                            tree: UseTree::Path(
                                                                                                                UsePath {
                                                                                                                    ident: Ident {
                                                                                                                        sym: crate,
                                                                                                                    },
                                                                                                                    colon2_token: PathSep,
                                                                                                                    tree: UseTree::Path(
                                                                                                                        UsePath {
                                                                                                                            ident: Ident {
                                                                                                                                sym: __staged,
                                                                                                                            },
                                                                                                                            colon2_token: PathSep,
                                                                                                                            tree: UseTree::Path(
                                                                                                                                UsePath {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: __deps,
                                                                                                                                    },
                                                                                                                                    colon2_token: PathSep,
                                                                                                                                    tree: UseTree::Glob(
                                                                                                                                        UseGlob {
                                                                                                                                            star_token: Star,
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                            semi_token: Semi,
                                                                                                        },
                                                                                                    ),
                                                                                                    Stmt::Item(
                                                                                                        Item::Use {
                                                                                                            attrs: [],
                                                                                                            vis: Visibility::Inherited,
                                                                                                            use_token: Use,
                                                                                                            leading_colon: None,
                                                                                                            tree: UseTree::Path(
                                                                                                                UsePath {
                                                                                                                    ident: Ident {
                                                                                                                        sym: crate,
                                                                                                                    },
                                                                                                                    colon2_token: PathSep,
                                                                                                                    tree: UseTree::Path(
                                                                                                                        UsePath {
                                                                                                                            ident: Ident {
                                                                                                                                sym: __staged,
                                                                                                                            },
                                                                                                                            colon2_token: PathSep,
                                                                                                                            tree: UseTree::Path(
                                                                                                                                UsePath {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: cluster,
                                                                                                                                        span: bytes(19..26),
                                                                                                                                    },
                                                                                                                                    colon2_token: PathSep,
                                                                                                                                    tree: UseTree::Path(
                                                                                                                                        UsePath {
                                                                                                                                            ident: Ident {
                                                                                                                                                sym: compute_pi,
                                                                                                                                                span: bytes(28..38),
                                                                                                                                            },
                                                                                                                                            colon2_token: PathSep,
                                                                                                                                            tree: UseTree::Glob(
                                                                                                                                                UseGlob {
                                                                                                                                                    star_token: Star,
                                                                                                                                                },
                                                                                                                                            ),
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                            semi_token: Semi,
                                                                                                        },
                                                                                                    ),
                                                                                                    Stmt::Local {
                                                                                                        attrs: [],
                                                                                                        let_token: Let,
                                                                                                        pat: Pat::Ident {
                                                                                                            attrs: [],
                                                                                                            by_ref: None,
                                                                                                            mutability: None,
                                                                                                            ident: Ident {
                                                                                                                sym: batch_size__free,
                                                                                                            },
                                                                                                            subpat: None,
                                                                                                        },
                                                                                                        init: Some(
                                                                                                            LocalInit {
                                                                                                                eq_token: Eq,
                                                                                                                expr: Expr::Lit {
                                                                                                                    attrs: [],
                                                                                                                    lit: Lit::Int {
                                                                                                                        token: 8192usize,
                                                                                                                    },
                                                                                                                },
                                                                                                                diverge: None,
                                                                                                            },
                                                                                                        ),
                                                                                                        semi_token: Semi,
                                                                                                    },
                                                                                                    Stmt::Expr(
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: batch_size__free,
                                                                                                                            span: bytes(39..55),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        None,
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        diverge: None,
                                                                                    },
                                                                                ),
                                                                                semi_token: Semi,
                                                                            },
                                                                            Stmt::Expr(
                                                                                Expr::Closure {
                                                                                    attrs: [],
                                                                                    lifetimes: None,
                                                                                    constness: None,
                                                                                    movability: None,
                                                                                    asyncness: None,
                                                                                    capture: Some(
                                                                                        Move,
                                                                                    ),
                                                                                    or1_token: Or,
                                                                                    inputs: [
                                                                                        Pat::Wild {
                                                                                            attrs: [],
                                                                                            underscore_token: Underscore,
                                                                                        },
                                                                                    ],
                                                                                    or2_token: Or,
                                                                                    output: ReturnType::Default,
                                                                                    body: Expr::Range {
                                                                                        attrs: [],
                                                                                        start: Some(
                                                                                            Expr::Lit {
                                                                                                attrs: [],
                                                                                                lit: Lit::Int {
                                                                                                    token: 0,
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                        limits: RangeLimits::HalfOpen(
                                                                                            DotDot,
                                                                                        ),
                                                                                        end: Some(
                                                                                            Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: batch_size__free,
                                                                                                                span: bytes(99..115),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    input: Source {
                                                        source: Spin,
                                                        location_kind: Cluster(
                                                            0,
                                                        ),
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Cluster(
                                                                0,
                                                            ),
                                                            backtrace: [
                                                                hydro_lang::location::tick::Tick<L>::spin_batch,
                                                                hydro_test::cluster::compute_pi::compute_pi,
                                                                hydro_test::cluster::compute_pi::tests::compute_pi_ir,
                                                                hydro_test::cluster::compute_pi::tests::compute_pi_ir::{{closure}},
                                                                core::ops::function::FnOnce::call_once,
                                                            ],
                                                            output_type: Some(
                                                                (),
                                                            ),
                                                            cardinality: None,
                                                            cpu_usage: None,
                                                            network_recv_cpu_usage: None,
                                                            id: None,
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Cluster(
                                                            0,
                                                        ),
                                                        backtrace: [
                                                            hydro_lang::location::tick::Tick<L>::spin_batch,
                                                            hydro_test::cluster::compute_pi::compute_pi,
                                                            hydro_test::cluster::compute_pi::tests::compute_pi_ir,
                                                            hydro_test::cluster::compute_pi::tests::compute_pi_ir::{{closure}},
                                                            core::ops::function::FnOnce::call_once,
                                                        ],
                                                        output_type: Some(
                                                            usize,
                                                        ),
                                                        cardinality: None,
                                                        cpu_usage: None,
                                                        network_recv_cpu_usage: None,
                                                        id: None,
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Cluster(
                                                        0,
                                                    ),
                                                    backtrace: [
                                                        hydro_lang::location::tick::Tick<L>::spin_batch,
                                                        hydro_test::cluster::compute_pi::compute_pi,
                                                        hydro_test::cluster::compute_pi::tests::compute_pi_ir,
                                                        hydro_test::cluster::compute_pi::tests::compute_pi_ir::{{closure}},
                                                        core::ops::function::FnOnce::call_once,
                                                    ],
                                                    output_type: Some(
                                                        (),
                                                    ),
                                                    cardinality: None,
                                                    cpu_usage: None,
                                                    network_recv_cpu_usage: None,
                                                    id: None,
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Tick(
                                                    0,
                                                    Cluster(
                                                        0,
                                                    ),
                                                ),
                                                backtrace: [
                                                    hydro_test::cluster::compute_pi::compute_pi,
                                                    hydro_test::cluster::compute_pi::tests::compute_pi_ir,
                                                    hydro_test::cluster::compute_pi::tests::compute_pi_ir::{{closure}},
                                                    core::ops::function::FnOnce::call_once,
                                                ],
                                                output_type: Some(
                                                    (f64 , f64),
                                                ),
                                                cardinality: None,
                                                cpu_usage: None,
                                                network_recv_cpu_usage: None,
                                                id: None,
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Tick(
                                                0,
                                                Cluster(
                                                    0,
                                                ),
                                            ),
                                            backtrace: [
                                                hydro_test::cluster::compute_pi::compute_pi,
                                                hydro_test::cluster::compute_pi::tests::compute_pi_ir,
                                                hydro_test::cluster::compute_pi::tests::compute_pi_ir::{{closure}},
                                                core::ops::function::FnOnce::call_once,
                                            ],
                                            output_type: Some(
                                                bool,
                                            ),
                                            cardinality: None,
                                            cpu_usage: None,
                                            network_recv_cpu_usage: None,
                                            id: None,
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Tick(
                                            0,
                                            Cluster(
                                                0,
                                            ),
                                        ),
                                        backtrace: [
                                            hydro_test::cluster::compute_pi::compute_pi,
                                            hydro_test::cluster::compute_pi::tests::compute_pi_ir,
                                            hydro_test::cluster::compute_pi::tests::compute_pi_ir::{{closure}},
                                            core::ops::function::FnOnce::call_once,
                                        ],
                                        output_type: Some(
                                            (u64 , u64),
                                        ),
                                        cardinality: None,
                                        cpu_usage: None,
                                        network_recv_cpu_usage: None,
                                        id: None,
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Process(
                                        1,
                                    ),
                                    backtrace: [
                                        hydro_lang::stream::Stream<T,L,B,O,R>::send_bincode_anonymous,
                                        hydro_test::cluster::compute_pi::compute_pi,
                                        hydro_test::cluster::compute_pi::tests::compute_pi_ir,
                                        hydro_test::cluster::compute_pi::tests::compute_pi_ir::{{closure}},
                                        core::ops::function::FnOnce::call_once,
                                    ],
                                    output_type: Some(
                                        (u64 , u64),
                                    ),
                                    cardinality: None,
                                    cpu_usage: None,
                                    network_recv_cpu_usage: None,
                                    id: None,
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Process(
                                    1,
                                ),
                                backtrace: [
                                    hydro_lang::stream::Stream<T,L,B,O,R>::send_bincode_anonymous,
                                    hydro_test::cluster::compute_pi::compute_pi,
                                    hydro_test::cluster::compute_pi::tests::compute_pi_ir,
                                    hydro_test::cluster::compute_pi::tests::compute_pi_ir::{{closure}},
                                    core::ops::function::FnOnce::call_once,
                                ],
                                output_type: Some(
                                    (u64 , u64),
                                ),
                                cardinality: None,
                                cpu_usage: None,
                                network_recv_cpu_usage: None,
                                id: None,
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Process(
                                1,
                            ),
                            backtrace: [
                                hydro_lang::stream::Stream<T,L,B,O,R>::send_bincode_anonymous,
                                hydro_test::cluster::compute_pi::compute_pi,
                                hydro_test::cluster::compute_pi::tests::compute_pi_ir,
                                hydro_test::cluster::compute_pi::tests::compute_pi_ir::{{closure}},
                                core::ops::function::FnOnce::call_once,
                            ],
                            output_type: Some(
                                (u64 , u64),
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Process(
                            1,
                        ),
                        backtrace: [
                            hydro_lang::stream::Stream<T,L,B,O>::reduce_commutative,
                            hydro_test::cluster::compute_pi::compute_pi,
                            hydro_test::cluster::compute_pi::tests::compute_pi_ir,
                            hydro_test::cluster::compute_pi::tests::compute_pi_ir::{{closure}},
                            core::ops::function::FnOnce::call_once,
                        ],
                        output_type: Some(
                            (u64 , u64),
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                right: Map {
                    f: DebugExpr(
                        Expr::Call {
                            attrs: [],
                            func: Expr::Path {
                                attrs: [],
                                qself: None,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: stageleft,
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: runtime_support,
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: fn1_type_hint,
                                            },
                                            arguments: PathArguments::AngleBracketed {
                                                colon2_token: Some(
                                                    PathSep,
                                                ),
                                                lt_token: Lt,
                                                args: [
                                                    GenericArgument::Type(
                                                        Type::Path {
                                                            qself: None,
                                                            path: Path {
                                                                leading_colon: None,
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: hydro_test,
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: __staged,
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: __deps,
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: tokio,
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: time,
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                    PathSep,
                                                                    PathSegment {
                                                                        ident: Ident {
                                                                            sym: Instant,
                                                                            span: bytes(1354..1361),
                                                                        },
                                                                        arguments: PathArguments::None,
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ),
                                                    Comma,
                                                    GenericArgument::Type(
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [],
                                                        },
                                                    ),
                                                ],
                                                gt_token: Gt,
                                            },
                                        },
                                    ],
                                },
                            },
                            paren_token: Paren,
                            args: [
                                Expr::Block {
                                    attrs: [],
                                    label: None,
                                    block: Block {
                                        brace_token: Brace,
                                        stmts: [
                                            Stmt::Item(
                                                Item::Use {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    use_token: Use,
                                                    leading_colon: None,
                                                    tree: UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: hydro_lang,
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: __staged,
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: __deps,
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Glob(
                                                                                UseGlob {
                                                                                    star_token: Star,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                            ),
                                            Stmt::Item(
                                                Item::Use {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    use_token: Use,
                                                    leading_colon: None,
                                                    tree: UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: hydro_lang,
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: __staged,
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: optional,
                                                                                span: bytes(1313..1321),
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Glob(
                                                                                UseGlob {
                                                                                    star_token: Star,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                            ),
                                            Stmt::Expr(
                                                Expr::Closure {
                                                    attrs: [],
                                                    lifetimes: None,
                                                    constness: None,
                                                    movability: None,
                                                    asyncness: None,
                                                    capture: None,
                                                    or1_token: Or,
                                                    inputs: [
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: _u,
                                                                span: bytes(1324..1326),
                                                            },
                                                            subpat: None,
                                                        },
                                                    ],
                                                    or2_token: Or,
                                                    output: ReturnType::Default,
                                                    body: Expr::Tuple {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        elems: [],
                                                    },
                                                },
                                                None,
                                            ),
                                        ],
                                    },
                                },
                            ],
                        },
                    ),
                    input: Source {
                        source: Stream(
                            DebugExpr(
                                Expr::Block {
                                    attrs: [],
                                    label: None,
                                    block: Block {
                                        brace_token: Brace,
                                        stmts: [
                                            Stmt::Item(
                                                Item::Use {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    use_token: Use,
                                                    leading_colon: None,
                                                    tree: UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: hydro_lang,
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: __staged,
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: __deps,
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Glob(
                                                                                UseGlob {
                                                                                    star_token: Star,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                            ),
                                            Stmt::Item(
                                                Item::Use {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    use_token: Use,
                                                    leading_colon: None,
                                                    tree: UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: hydro_lang,
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: __staged,
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: location,
                                                                                span: bytes(1098..1106),
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Glob(
                                                                                UseGlob {
                                                                                    star_token: Star,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                            ),
                                            Stmt::Local {
                                                attrs: [],
                                                let_token: Let,
                                                pat: Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: interval__free,
                                                    },
                                                    subpat: None,
                                                },
                                                init: Some(
                                                    LocalInit {
                                                        eq_token: Eq,
                                                        expr: Expr::Block {
                                                            attrs: [],
                                                            label: None,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Item(
                                                                        Item::Use {
                                                                            attrs: [],
                                                                            vis: Visibility::Inherited,
                                                                            use_token: Use,
                                                                            leading_colon: None,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: crate,
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: __staged,
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Path(
                                                                                                UsePath {
                                                                                                    ident: Ident {
                                                                                                        sym: __deps,
                                                                                                    },
                                                                                                    colon2_token: PathSep,
                                                                                                    tree: UseTree::Glob(
                                                                                                        UseGlob {
                                                                                                            star_token: Star,
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                    ),
                                                                    Stmt::Item(
                                                                        Item::Use {
                                                                            attrs: [],
                                                                            vis: Visibility::Inherited,
                                                                            use_token: Use,
                                                                            leading_colon: None,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: crate,
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: __staged,
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Path(
                                                                                                UsePath {
                                                                                                    ident: Ident {
                                                                                                        sym: cluster,
                                                                                                        span: bytes(1041..1048),
                                                                                                    },
                                                                                                    colon2_token: PathSep,
                                                                                                    tree: UseTree::Path(
                                                                                                        UsePath {
                                                                                                            ident: Ident {
                                                                                                                sym: compute_pi,
                                                                                                                span: bytes(1050..1060),
                                                                                                            },
                                                                                                            colon2_token: PathSep,
                                                                                                            tree: UseTree::Glob(
                                                                                                                UseGlob {
                                                                                                                    star_token: Star,
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                    ),
                                                                    Stmt::Expr(
                                                                        Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: Duration,
                                                                                                span: bytes(1061..1069),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: from_secs,
                                                                                                span: bytes(1073..1082),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Lit {
                                                                                    attrs: [],
                                                                                    lit: Lit::Int {
                                                                                        token: 1,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                        diverge: None,
                                                    },
                                                ),
                                                semi_token: Semi,
                                            },
                                            Stmt::Expr(
                                                Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: tokio_stream,
                                                                        span: bytes(1107..1119),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: wrappers,
                                                                        span: bytes(1123..1131),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: IntervalStream,
                                                                        span: bytes(1135..1149),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: new,
                                                                        span: bytes(1153..1156),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: tokio,
                                                                                span: bytes(1157..1162),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: time,
                                                                                span: bytes(1166..1170),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: interval,
                                                                                span: bytes(1174..1182),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: interval__free,
                                                                                    span: bytes(1183..1197),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ],
                                                },
                                                None,
                                            ),
                                        ],
                                    },
                                },
                            ),
                        ),
                        location_kind: Process(
                            1,
                        ),
                        metadata: HydroIrMetadata {
                            location_kind: Process(
                                1,
                            ),
                            backtrace: [
                                hydro_lang::location::Location::source_interval,
                                hydro_lang::optional::Optional<T,L,B>::sample_every,
                                hydro_test::cluster::compute_pi::compute_pi,
                                hydro_test::cluster::compute_pi::tests::compute_pi_ir,
                                hydro_test::cluster::compute_pi::tests::compute_pi_ir::{{closure}},
                                core::ops::function::FnOnce::call_once,
                            ],
                            output_type: Some(
                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            1,
                            Process(
                                1,
                            ),
                        ),
                        backtrace: [
                            hydro_lang::optional::Optional<T,L,hydro_lang::boundedness::Bounded>::continue_if,
                            hydro_lang::optional::Optional<T,L,B>::sample_every,
                            hydro_test::cluster::compute_pi::compute_pi,
                            hydro_test::cluster::compute_pi::tests::compute_pi_ir,
                            hydro_test::cluster::compute_pi::tests::compute_pi_ir::{{closure}},
                            core::ops::function::FnOnce::call_once,
                        ],
                        output_type: Some(
                            (),
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        1,
                        Process(
                            1,
                        ),
                    ),
                    backtrace: [
                        hydro_lang::optional::Optional<T,L,hydro_lang::boundedness::Bounded>::continue_if,
                        hydro_lang::optional::Optional<T,L,B>::sample_every,
                        hydro_test::cluster::compute_pi::compute_pi,
                        hydro_test::cluster::compute_pi::tests::compute_pi_ir,
                        hydro_test::cluster::compute_pi::tests::compute_pi_ir::{{closure}},
                        core::ops::function::FnOnce::call_once,
                    ],
                    output_type: Some(
                        ((u64 , u64) , ()),
                    ),
                    cardinality: None,
                    cpu_usage: None,
                    network_recv_cpu_usage: None,
                    id: None,
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    1,
                    Process(
                        1,
                    ),
                ),
                backtrace: [
                    hydro_lang::optional::Optional<T,L,hydro_lang::boundedness::Bounded>::continue_if,
                    hydro_lang::optional::Optional<T,L,B>::sample_every,
                    hydro_test::cluster::compute_pi::compute_pi,
                    hydro_test::cluster::compute_pi::tests::compute_pi_ir,
                    hydro_test::cluster::compute_pi::tests::compute_pi_ir::{{closure}},
                    core::ops::function::FnOnce::call_once,
                ],
                output_type: Some(
                    (u64 , u64),
                ),
                cardinality: None,
                cpu_usage: None,
                network_recv_cpu_usage: None,
                id: None,
            },
        },
        metadata: HydroIrMetadata {
            location_kind: Process(
                1,
            ),
            backtrace: [
                hydro_test::cluster::compute_pi::compute_pi,
                hydro_test::cluster::compute_pi::tests::compute_pi_ir,
                hydro_test::cluster::compute_pi::tests::compute_pi_ir::{{closure}},
                core::ops::function::FnOnce::call_once,
            ],
            output_type: Some(
                (u64 , u64),
            ),
            cardinality: None,
            cpu_usage: None,
            network_recv_cpu_usage: None,
            id: None,
        },
    },
]
