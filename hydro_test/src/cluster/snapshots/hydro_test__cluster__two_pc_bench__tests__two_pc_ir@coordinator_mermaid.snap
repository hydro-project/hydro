---
source: hydro_test/src/cluster/two_pc_bench.rs
expression: "preview.dfir_for(&coordinator).to_mermaid(&WriteConfig\n{\n    no_subgraphs: true, no_pull_push: true, no_handoffs: true,\n    op_text_no_imports: true, ..WriteConfig::default()\n})"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1["<div style=text-align:center>(1v1)</div> <code><br>source_stream(DUMMY_SOURCE)</code>"]:::otherClass
2v1["<div style=text-align:center>(2v1)</div> <code><br>map(|res| {<br>    let (id, b) = res.unwrap();<br>    (<br>        hydro_lang::ClusterId::&lt;<br>            hydro_test::__staged::cluster::two_pc_bench::Client,<br>        &gt;::from_raw(id),<br>        hydro_lang::runtime_support::bincode::deserialize::&lt;<br>            (<br>                hydro_test::__staged::__deps::hydro_lang::location::cluster::cluster_id::ClusterId&lt;<br>                    hydro_test::__staged::cluster::two_pc_bench::Client,<br>                &gt;,<br>                (u32, u32),<br>            ),<br>        &gt;(&amp;b)<br>            .unwrap(),<br>    )<br>})</code>"]:::otherClass
3v1["<div style=text-align:center>(3v1)</div> <code><br>map({<br>    |(_, b)| b<br>})</code>"]:::otherClass
4v1["<div style=text-align:center>(4v1)</div> <code><br>map({<br>    |v| bincode::serialize(&amp;v).unwrap().into()<br>})</code>"]:::otherClass
5v1["<div style=text-align:center>(5v1)</div> <code><br>flat_map({<br>    let ids__free = unsafe {<br>        ::std::mem::transmute::&lt;<br>            _,<br>            &amp;[hydro_lang::ClusterId&lt;<br>                hydro_test::__staged::cluster::two_pc::Participant,<br>            &gt;],<br>        &gt;(__hydro_lang_cluster_ids_1)<br>    };<br>    |v| { ids__free.iter().map(move |id| (id.raw_id, v.clone())) }<br>})</code>"]:::otherClass
6v1["<div style=text-align:center>(6v1)</div> <code><br>dest_sink(DUMMY_SINK)</code>"]:::otherClass
7v1["<div style=text-align:center>(7v1)</div> <code><br>source_stream(DUMMY_SOURCE)</code>"]:::otherClass
8v1["<div style=text-align:center>(8v1)</div> <code><br>map(|res| {<br>    let (id, b) = res.unwrap();<br>    (<br>        hydro_lang::ClusterId::&lt;<br>            hydro_test::__staged::cluster::two_pc::Participant,<br>        &gt;::from_raw(id),<br>        hydro_lang::runtime_support::bincode::deserialize::&lt;<br>            (<br>                hydro_test::__staged::__deps::hydro_lang::location::cluster::cluster_id::ClusterId&lt;<br>                    hydro_test::__staged::cluster::two_pc_bench::Client,<br>                &gt;,<br>                (u32, u32),<br>            ),<br>        &gt;(&amp;b)<br>            .unwrap(),<br>    )<br>})</code>"]:::otherClass
9v1["<div style=text-align:center>(9v1)</div> <code><br>map({<br>    |(_, b)| b<br>})</code>"]:::otherClass
10v1["<div style=text-align:center>(10v1)</div> <code><br>map({<br>    |kv| (kv, Ok::&lt;(), ()&gt;(()))<br>})</code>"]:::otherClass
12v1["<div style=text-align:center>(12v1)</div> <code><br>chain()</code>"]:::otherClass
13v1["<div style=text-align:center>(13v1)</div> <code><br>tee()</code>"]:::otherClass
14v1["<div style=text-align:center>(14v1)</div> <code><br>fold_keyed::&lt;<br>    'tick,<br>&gt;(<br>    {<br>        move || (0, 0)<br>    },<br>    {<br>        move |accum, value| {<br>            if value.is_ok() {<br>                accum.0 += 1;<br>            } else {<br>                accum.1 += 1;<br>            }<br>        }<br>    },<br>)</code>"]:::otherClass
16v1["<div style=text-align:center>(16v1)</div> <code><br>filter_map({<br>    let min__free = 3usize;<br>    move |(key, (success, _error))| {<br>        if success &gt;= min__free { Some(key) } else { None }<br>    }<br>})</code>"]:::otherClass
17v1["<div style=text-align:center>(17v1)</div> <code><br>tee()</code>"]:::otherClass
18v1["<div style=text-align:center>(18v1)</div> <code><br>anti_join_multiset::&lt;'tick, 'tick&gt;()</code>"]:::otherClass
19v1["<div style=text-align:center>(19v1)</div> <code><br>defer_tick_lazy()</code>"]:::otherClass
20v1["<div style=text-align:center>(20v1)</div> <code><br>map({<br>    |v| bincode::serialize(&amp;v).unwrap().into()<br>})</code>"]:::otherClass
21v1["<div style=text-align:center>(21v1)</div> <code><br>flat_map({<br>    let ids__free = unsafe {<br>        ::std::mem::transmute::&lt;<br>            _,<br>            &amp;[hydro_lang::ClusterId&lt;<br>                hydro_test::__staged::cluster::two_pc::Participant,<br>            &gt;],<br>        &gt;(__hydro_lang_cluster_ids_1)<br>    };<br>    |v| { ids__free.iter().map(move |id| (id.raw_id, v.clone())) }<br>})</code>"]:::otherClass
22v1["<div style=text-align:center>(22v1)</div> <code><br>dest_sink(DUMMY_SINK)</code>"]:::otherClass
23v1["<div style=text-align:center>(23v1)</div> <code><br>source_stream(DUMMY_SOURCE)</code>"]:::otherClass
24v1["<div style=text-align:center>(24v1)</div> <code><br>map(|res| {<br>    let (id, b) = res.unwrap();<br>    (<br>        hydro_lang::ClusterId::&lt;<br>            hydro_test::__staged::cluster::two_pc::Participant,<br>        &gt;::from_raw(id),<br>        hydro_lang::runtime_support::bincode::deserialize::&lt;<br>            (<br>                hydro_test::__staged::__deps::hydro_lang::location::cluster::cluster_id::ClusterId&lt;<br>                    hydro_test::__staged::cluster::two_pc_bench::Client,<br>                &gt;,<br>                (u32, u32),<br>            ),<br>        &gt;(&amp;b)<br>            .unwrap(),<br>    )<br>})</code>"]:::otherClass
25v1["<div style=text-align:center>(25v1)</div> <code><br>map({<br>    |(_, b)| b<br>})</code>"]:::otherClass
26v1["<div style=text-align:center>(26v1)</div> <code><br>map({<br>    |kv| (kv, Ok::&lt;(), ()&gt;(()))<br>})</code>"]:::otherClass
28v1["<div style=text-align:center>(28v1)</div> <code><br>chain()</code>"]:::otherClass
29v1["<div style=text-align:center>(29v1)</div> <code><br>tee()</code>"]:::otherClass
30v1["<div style=text-align:center>(30v1)</div> <code><br>fold_keyed::&lt;<br>    'tick,<br>&gt;(<br>    {<br>        move || (0, 0)<br>    },<br>    {<br>        move |accum, value| {<br>            if value.is_ok() {<br>                accum.0 += 1;<br>            } else {<br>                accum.1 += 1;<br>            }<br>        }<br>    },<br>)</code>"]:::otherClass
32v1["<div style=text-align:center>(32v1)</div> <code><br>filter_map({<br>    let min__free = 3usize;<br>    move |(key, (success, _error))| {<br>        if success &gt;= min__free { Some(key) } else { None }<br>    }<br>})</code>"]:::otherClass
33v1["<div style=text-align:center>(33v1)</div> <code><br>tee()</code>"]:::otherClass
34v1["<div style=text-align:center>(34v1)</div> <code><br>anti_join_multiset::&lt;'tick, 'tick&gt;()</code>"]:::otherClass
35v1["<div style=text-align:center>(35v1)</div> <code><br>defer_tick_lazy()</code>"]:::otherClass
36v1["<div style=text-align:center>(36v1)</div> <code><br>map(|(id, data)| {<br>    (<br>        id.raw_id,<br>        hydro_lang::runtime_support::bincode::serialize(&amp;data).unwrap().into(),<br>    )<br>})</code>"]:::otherClass
37v1["<div style=text-align:center>(37v1)</div> <code><br>dest_sink(DUMMY_SINK)</code>"]:::otherClass
44v1["<div style=text-align:center>(44v1)</div> <code><br>identity()</code>"]:::otherClass
46v1["<div style=text-align:center>(46v1)</div> <code><br>identity()</code>"]:::otherClass
1v1-->2v1
2v1-->3v1
3v1-->4v1
4v1-->5v1
5v1-->6v1
7v1-->8v1
8v1-->9v1
9v1-->10v1
19v1--x|0|12v1; linkStyle 8 stroke:red
10v1-->|1|12v1
12v1-->13v1
13v1--x14v1; linkStyle 11 stroke:red
14v1-->16v1
16v1-->17v1
13v1-->|pos|18v1
17v1--x|neg|18v1; linkStyle 15 stroke:red
18v1-->44v1
17v1-->20v1
20v1-->21v1
21v1-->22v1
23v1-->24v1
24v1-->25v1
25v1-->26v1
35v1--x|0|28v1; linkStyle 23 stroke:red
26v1-->|1|28v1
28v1-->29v1
29v1--x30v1; linkStyle 26 stroke:red
30v1-->32v1
32v1-->33v1
29v1-->|pos|34v1
33v1--x|neg|34v1; linkStyle 30 stroke:red
34v1-->46v1
36v1-->37v1
33v1-->36v1
44v1--o19v1; linkStyle 34 stroke:red
46v1--o35v1; linkStyle 35 stroke:red
6v1
22v1
36v1
37v1
44v1
46v1
subgraph var_stream_10 ["var <tt>stream_10</tt>"]
    style var_stream_10 fill:transparent
    10v1
end
subgraph var_stream_12 ["var <tt>stream_12</tt>"]
    style var_stream_12 fill:transparent
    12v1
end
subgraph var_stream_13 ["var <tt>stream_13</tt>"]
    style var_stream_13 fill:transparent
    13v1
end
subgraph var_stream_15 ["var <tt>stream_15</tt>"]
    style var_stream_15 fill:transparent
    14v1
end
subgraph var_stream_17 ["var <tt>stream_17</tt>"]
    style var_stream_17 fill:transparent
    16v1
end
subgraph var_stream_18 ["var <tt>stream_18</tt>"]
    style var_stream_18 fill:transparent
    17v1
end
subgraph var_stream_19 ["var <tt>stream_19</tt>"]
    style var_stream_19 fill:transparent
    18v1
end
subgraph var_stream_20 ["var <tt>stream_20</tt>"]
    style var_stream_20 fill:transparent
    19v1
end
subgraph var_stream_23 ["var <tt>stream_23</tt>"]
    style var_stream_23 fill:transparent
    20v1
end
subgraph var_stream_24 ["var <tt>stream_24</tt>"]
    style var_stream_24 fill:transparent
    21v1
end
subgraph var_stream_26 ["var <tt>stream_26</tt>"]
    style var_stream_26 fill:transparent
    24v1
    23v1
end
subgraph var_stream_27 ["var <tt>stream_27</tt>"]
    style var_stream_27 fill:transparent
    25v1
end
subgraph var_stream_28 ["var <tt>stream_28</tt>"]
    style var_stream_28 fill:transparent
    26v1
end
subgraph var_stream_3 ["var <tt>stream_3</tt>"]
    style var_stream_3 fill:transparent
    1v1
    2v1
end
subgraph var_stream_30 ["var <tt>stream_30</tt>"]
    style var_stream_30 fill:transparent
    28v1
end
subgraph var_stream_31 ["var <tt>stream_31</tt>"]
    style var_stream_31 fill:transparent
    29v1
end
subgraph var_stream_33 ["var <tt>stream_33</tt>"]
    style var_stream_33 fill:transparent
    30v1
end
subgraph var_stream_35 ["var <tt>stream_35</tt>"]
    style var_stream_35 fill:transparent
    32v1
end
subgraph var_stream_36 ["var <tt>stream_36</tt>"]
    style var_stream_36 fill:transparent
    33v1
end
subgraph var_stream_37 ["var <tt>stream_37</tt>"]
    style var_stream_37 fill:transparent
    34v1
end
subgraph var_stream_38 ["var <tt>stream_38</tt>"]
    style var_stream_38 fill:transparent
    35v1
end
subgraph var_stream_4 ["var <tt>stream_4</tt>"]
    style var_stream_4 fill:transparent
    3v1
end
subgraph var_stream_5 ["var <tt>stream_5</tt>"]
    style var_stream_5 fill:transparent
    4v1
end
subgraph var_stream_6 ["var <tt>stream_6</tt>"]
    style var_stream_6 fill:transparent
    5v1
end
subgraph var_stream_8 ["var <tt>stream_8</tt>"]
    style var_stream_8 fill:transparent
    8v1
    7v1
end
subgraph var_stream_9 ["var <tt>stream_9</tt>"]
    style var_stream_9 fill:transparent
    9v1
end
