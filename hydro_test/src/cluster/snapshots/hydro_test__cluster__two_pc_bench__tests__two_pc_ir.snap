---
source: hydro_test/src/cluster/two_pc_bench.rs
expression: built.ir()
---
[
    CycleSink {
        ident: Ident {
            sym: cycle_1,
        },
        location_kind: Tick(
            1,
            Process(
                0,
            ),
        ),
        input: DeferTick {
            input: AntiJoin {
                pos: Tee {
                    inner: <tee 0>: Chain {
                        first: CycleSource {
                            ident: Ident {
                                sym: cycle_1,
                            },
                            location_kind: Tick(
                                1,
                                Process(
                                    0,
                                ),
                            ),
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    1,
                                    Process(
                                        0,
                                    ),
                                ),
                                output_type: Some(
                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                ),
                                cardinality: None,
                                cpu_usage: None,
                                network_recv_cpu_usage: None,
                                id: None,
                            },
                        },
                        second: Tee {
                            inner: <tee 1>: Map {
                                f: q!(| kv | (kv, Ok::< (), () > (()))),
                                input: Map {
                                    f: q!(| (_, b) | b),
                                    input: Network {
                                        from_key: None,
                                        to_location: Process(
                                            0,
                                        ),
                                        to_key: None,
                                        serialize_fn: Some(
                                            q!(...),
                                        ),
                                        instantiate_fn: <network instantiate>,
                                        deserialize_fn: Some(
                                            | res | { let (id , b) = res . unwrap () ; (hyd...,
                                        ),
                                        input: Network {
                                            from_key: None,
                                            to_location: Cluster(
                                                1,
                                            ),
                                            to_key: None,
                                            serialize_fn: None,
                                            instantiate_fn: <network instantiate>,
                                            deserialize_fn: Some(
                                                | res | { hydro_lang :: runtime_support :: binc...,
                                            ),
                                            input: FlatMap {
                                                f: q!(| v | { ids__free.iter ().map (move | id | (id.raw_id, v.clone ())) }),
                                                input: Map {
                                                    f: q!(| v | bincode::serialize (& v).unwrap ().into ()),
                                                    input: Map {
                                                        f: q!(| (_, b) | b),
                                                        input: Network {
                                                            from_key: None,
                                                            to_location: Process(
                                                                0,
                                                            ),
                                                            to_key: None,
                                                            serialize_fn: Some(
                                                                q!(...),
                                                            ),
                                                            instantiate_fn: <network instantiate>,
                                                            deserialize_fn: Some(
                                                                | res | { let (id , b) = res . unwrap () ; (hyd...,
                                                            ),
                                                            input: Map {
                                                                f: q!(| payload | (CLUSTER_SELF_ID__free, payload)),
                                                                input: CycleSource {
                                                                    ident: Ident {
                                                                        sym: cycle_0,
                                                                    },
                                                                    location_kind: Cluster(
                                                                        2,
                                                                    ),
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Cluster(
                                                                            2,
                                                                        ),
                                                                        output_type: Some(
                                                                            (u32 , u32),
                                                                        ),
                                                                        cardinality: None,
                                                                        cpu_usage: None,
                                                                        network_recv_cpu_usage: None,
                                                                        id: None,
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Cluster(
                                                                        2,
                                                                    ),
                                                                    output_type: Some(
                                                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                    ),
                                                                    cardinality: None,
                                                                    cpu_usage: None,
                                                                    network_recv_cpu_usage: None,
                                                                    id: None,
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Process(
                                                                    0,
                                                                ),
                                                                output_type: Some(
                                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                                ),
                                                                cardinality: None,
                                                                cpu_usage: None,
                                                                network_recv_cpu_usage: None,
                                                                id: None,
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Process(
                                                                0,
                                                            ),
                                                            output_type: Some(
                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                            ),
                                                            cardinality: None,
                                                            cpu_usage: None,
                                                            network_recv_cpu_usage: None,
                                                            id: None,
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Process(
                                                            0,
                                                        ),
                                                        output_type: Some(
                                                            hydro_test :: __staged :: __deps :: hydro_lang :: __staged :: __deps :: bytes :: Bytes,
                                                        ),
                                                        cardinality: None,
                                                        cpu_usage: None,
                                                        network_recv_cpu_usage: None,
                                                        id: None,
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Process(
                                                        0,
                                                    ),
                                                    output_type: Some(
                                                        (u32 , hydro_test :: __staged :: __deps :: hydro_lang :: __staged :: __deps :: bytes :: Bytes),
                                                    ),
                                                    cardinality: None,
                                                    cpu_usage: None,
                                                    network_recv_cpu_usage: None,
                                                    id: None,
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Cluster(
                                                    1,
                                                ),
                                                output_type: Some(
                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                ),
                                                cardinality: None,
                                                cpu_usage: None,
                                                network_recv_cpu_usage: None,
                                                id: None,
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Process(
                                                0,
                                            ),
                                            output_type: Some(
                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                            ),
                                            cardinality: None,
                                            cpu_usage: None,
                                            network_recv_cpu_usage: None,
                                            id: None,
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Process(
                                            0,
                                        ),
                                        output_type: Some(
                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                        ),
                                        cardinality: None,
                                        cpu_usage: None,
                                        network_recv_cpu_usage: None,
                                        id: None,
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Process(
                                        0,
                                    ),
                                    output_type: Some(
                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                    ),
                                    cardinality: None,
                                    cpu_usage: None,
                                    network_recv_cpu_usage: None,
                                    id: None,
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    1,
                                    Process(
                                        0,
                                    ),
                                ),
                                output_type: Some(
                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                ),
                                cardinality: None,
                                cpu_usage: None,
                                network_recv_cpu_usage: None,
                                id: None,
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                1,
                                Process(
                                    0,
                                ),
                            ),
                            output_type: Some(
                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            1,
                            Process(
                                0,
                            ),
                        ),
                        output_type: Some(
                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                neg: Tee {
                    inner: <tee 2>: FilterMap {
                        f: q!(| (key, (success, _error)) | if success >= min__free { Some (key) } else { None }),
                        input: Tee {
                            inner: <tee 3>: FoldKeyed {
                                init: q!(| | (0, 0)),
                                acc: q!(| accum, value | { if value.is_ok () { accum.0 += 1 ; } else { accum.1 += 1 ; } }),
                                input: Tee {
                                    inner: <tee 0>,
                                    metadata: HydroIrMetadata {
                                        location_kind: Tick(
                                            1,
                                            Process(
                                                0,
                                            ),
                                        ),
                                        output_type: Some(
                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                        ),
                                        cardinality: None,
                                        cpu_usage: None,
                                        network_recv_cpu_usage: None,
                                        id: None,
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        1,
                                        Process(
                                            0,
                                        ),
                                    ),
                                    output_type: Some(
                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                    ),
                                    cardinality: None,
                                    cpu_usage: None,
                                    network_recv_cpu_usage: None,
                                    id: None,
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    1,
                                    Process(
                                        0,
                                    ),
                                ),
                                output_type: Some(
                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                ),
                                cardinality: None,
                                cpu_usage: None,
                                network_recv_cpu_usage: None,
                                id: None,
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                1,
                                Process(
                                    0,
                                ),
                            ),
                            output_type: Some(
                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            1,
                            Process(
                                0,
                            ),
                        ),
                        output_type: Some(
                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        1,
                        Process(
                            0,
                        ),
                    ),
                    output_type: Some(
                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                    ),
                    cardinality: None,
                    cpu_usage: None,
                    network_recv_cpu_usage: None,
                    id: None,
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    1,
                    Process(
                        0,
                    ),
                ),
                output_type: Some(
                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                ),
                cardinality: None,
                cpu_usage: None,
                network_recv_cpu_usage: None,
                id: None,
            },
        },
        metadata: HydroIrMetadata {
            location_kind: Tick(
                1,
                Process(
                    0,
                ),
            ),
            output_type: Some(
                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
            ),
            cardinality: None,
            cpu_usage: None,
            network_recv_cpu_usage: None,
            id: None,
        },
    },
    CycleSink {
        ident: Ident {
            sym: cycle_2,
        },
        location_kind: Tick(
            1,
            Process(
                0,
            ),
        ),
        input: DeferTick {
            input: AntiJoin {
                pos: Tee {
                    inner: <tee 4>: Chain {
                        first: CycleSource {
                            ident: Ident {
                                sym: cycle_2,
                            },
                            location_kind: Tick(
                                1,
                                Process(
                                    0,
                                ),
                            ),
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    1,
                                    Process(
                                        0,
                                    ),
                                ),
                                output_type: Some(
                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                ),
                                cardinality: None,
                                cpu_usage: None,
                                network_recv_cpu_usage: None,
                                id: None,
                            },
                        },
                        second: Tee {
                            inner: <tee 5>: Map {
                                f: q!(| kv | (kv, Ok::< (), () > (()))),
                                input: Map {
                                    f: q!(| (_, b) | b),
                                    input: Network {
                                        from_key: None,
                                        to_location: Process(
                                            0,
                                        ),
                                        to_key: None,
                                        serialize_fn: Some(
                                            q!(...),
                                        ),
                                        instantiate_fn: <network instantiate>,
                                        deserialize_fn: Some(
                                            | res | { let (id , b) = res . unwrap () ; (hyd...,
                                        ),
                                        input: Network {
                                            from_key: None,
                                            to_location: Cluster(
                                                1,
                                            ),
                                            to_key: None,
                                            serialize_fn: None,
                                            instantiate_fn: <network instantiate>,
                                            deserialize_fn: Some(
                                                | res | { hydro_lang :: runtime_support :: binc...,
                                            ),
                                            input: FlatMap {
                                                f: q!(| v | { ids__free.iter ().map (move | id | (id.raw_id, v.clone ())) }),
                                                input: Map {
                                                    f: q!(| v | bincode::serialize (& v).unwrap ().into ()),
                                                    input: Tee {
                                                        inner: <tee 2>,
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Tick(
                                                                1,
                                                                Process(
                                                                    0,
                                                                ),
                                                            ),
                                                            output_type: Some(
                                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                            ),
                                                            cardinality: None,
                                                            cpu_usage: None,
                                                            network_recv_cpu_usage: None,
                                                            id: None,
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Tick(
                                                            1,
                                                            Process(
                                                                0,
                                                            ),
                                                        ),
                                                        output_type: Some(
                                                            hydro_test :: __staged :: __deps :: hydro_lang :: __staged :: __deps :: bytes :: Bytes,
                                                        ),
                                                        cardinality: None,
                                                        cpu_usage: None,
                                                        network_recv_cpu_usage: None,
                                                        id: None,
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Tick(
                                                        1,
                                                        Process(
                                                            0,
                                                        ),
                                                    ),
                                                    output_type: Some(
                                                        (u32 , hydro_test :: __staged :: __deps :: hydro_lang :: __staged :: __deps :: bytes :: Bytes),
                                                    ),
                                                    cardinality: None,
                                                    cpu_usage: None,
                                                    network_recv_cpu_usage: None,
                                                    id: None,
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Cluster(
                                                    1,
                                                ),
                                                output_type: Some(
                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                                ),
                                                cardinality: None,
                                                cpu_usage: None,
                                                network_recv_cpu_usage: None,
                                                id: None,
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Process(
                                                0,
                                            ),
                                            output_type: Some(
                                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                            ),
                                            cardinality: None,
                                            cpu_usage: None,
                                            network_recv_cpu_usage: None,
                                            id: None,
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Process(
                                            0,
                                        ),
                                        output_type: Some(
                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                        ),
                                        cardinality: None,
                                        cpu_usage: None,
                                        network_recv_cpu_usage: None,
                                        id: None,
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Process(
                                        0,
                                    ),
                                    output_type: Some(
                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                    ),
                                    cardinality: None,
                                    cpu_usage: None,
                                    network_recv_cpu_usage: None,
                                    id: None,
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    1,
                                    Process(
                                        0,
                                    ),
                                ),
                                output_type: Some(
                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                ),
                                cardinality: None,
                                cpu_usage: None,
                                network_recv_cpu_usage: None,
                                id: None,
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                1,
                                Process(
                                    0,
                                ),
                            ),
                            output_type: Some(
                                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            1,
                            Process(
                                0,
                            ),
                        ),
                        output_type: Some(
                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                neg: Tee {
                    inner: <tee 6>: FilterMap {
                        f: q!(| (key, (success, _error)) | if success >= min__free { Some (key) } else { None }),
                        input: Tee {
                            inner: <tee 7>: FoldKeyed {
                                init: q!(| | (0, 0)),
                                acc: q!(| accum, value | { if value.is_ok () { accum.0 += 1 ; } else { accum.1 += 1 ; } }),
                                input: Tee {
                                    inner: <tee 4>,
                                    metadata: HydroIrMetadata {
                                        location_kind: Tick(
                                            1,
                                            Process(
                                                0,
                                            ),
                                        ),
                                        output_type: Some(
                                            ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                                        ),
                                        cardinality: None,
                                        cpu_usage: None,
                                        network_recv_cpu_usage: None,
                                        id: None,
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        1,
                                        Process(
                                            0,
                                        ),
                                    ),
                                    output_type: Some(
                                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                    ),
                                    cardinality: None,
                                    cpu_usage: None,
                                    network_recv_cpu_usage: None,
                                    id: None,
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    1,
                                    Process(
                                        0,
                                    ),
                                ),
                                output_type: Some(
                                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , (usize , usize)),
                                ),
                                cardinality: None,
                                cpu_usage: None,
                                network_recv_cpu_usage: None,
                                id: None,
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                1,
                                Process(
                                    0,
                                ),
                            ),
                            output_type: Some(
                                (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            1,
                            Process(
                                0,
                            ),
                        ),
                        output_type: Some(
                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        1,
                        Process(
                            0,
                        ),
                    ),
                    output_type: Some(
                        ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                    ),
                    cardinality: None,
                    cpu_usage: None,
                    network_recv_cpu_usage: None,
                    id: None,
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    1,
                    Process(
                        0,
                    ),
                ),
                output_type: Some(
                    ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
                ),
                cardinality: None,
                cpu_usage: None,
                network_recv_cpu_usage: None,
                id: None,
            },
        },
        metadata: HydroIrMetadata {
            location_kind: Tick(
                1,
                Process(
                    0,
                ),
            ),
            output_type: Some(
                ((hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)) , core :: result :: Result < () , () >),
            ),
            cardinality: None,
            cpu_usage: None,
            network_recv_cpu_usage: None,
            id: None,
        },
    },
    CycleSink {
        ident: Ident {
            sym: cycle_0,
        },
        location_kind: Cluster(
            2,
        ),
        input: Chain {
            first: FlatMap {
                f: q!(| _ | (0 .. num_clients_per_node__free).map (move | i | ((CLUSTER_SELF_ID__free.raw_id * (num_clients_per_node__free as u32)) + i as u32, 0))),
                input: Tee {
                    inner: <tee 8>: Source {
                        source: Iter(
                            { use hydro_lang :: __staged :: __deps :: * ; u...,
                        ),
                        location_kind: Cluster(
                            2,
                        ),
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                0,
                                Cluster(
                                    2,
                                ),
                            ),
                            output_type: Some(
                                (),
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            0,
                            Cluster(
                                2,
                            ),
                        ),
                        output_type: Some(
                            (),
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        0,
                        Cluster(
                            2,
                        ),
                    ),
                    output_type: Some(
                        (u32 , u32),
                    ),
                    cardinality: None,
                    cpu_usage: None,
                    network_recv_cpu_usage: None,
                    id: None,
                },
            },
            second: Map {
                f: q!(| payload | (payload.0, payload.1 + 1)),
                input: Tee {
                    inner: <tee 9>: Network {
                        from_key: None,
                        to_location: Cluster(
                            2,
                        ),
                        to_key: None,
                        serialize_fn: Some(
                            q!(...),
                        ),
                        instantiate_fn: <network instantiate>,
                        deserialize_fn: Some(
                            | res | { hydro_lang :: runtime_support :: binc...,
                        ),
                        input: Tee {
                            inner: <tee 6>,
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    1,
                                    Process(
                                        0,
                                    ),
                                ),
                                output_type: Some(
                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , (u32 , u32)),
                                ),
                                cardinality: None,
                                cpu_usage: None,
                                network_recv_cpu_usage: None,
                                id: None,
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Cluster(
                                2,
                            ),
                            output_type: Some(
                                (u32 , u32),
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            0,
                            Cluster(
                                2,
                            ),
                        ),
                        output_type: Some(
                            (u32 , u32),
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        0,
                        Cluster(
                            2,
                        ),
                    ),
                    output_type: Some(
                        (u32 , u32),
                    ),
                    cardinality: None,
                    cpu_usage: None,
                    network_recv_cpu_usage: None,
                    id: None,
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    0,
                    Cluster(
                        2,
                    ),
                ),
                output_type: Some(
                    (u32 , u32),
                ),
                cardinality: None,
                cpu_usage: None,
                network_recv_cpu_usage: None,
                id: None,
            },
        },
        metadata: HydroIrMetadata {
            location_kind: Cluster(
                2,
            ),
            output_type: Some(
                (u32 , u32),
            ),
            cardinality: None,
            cpu_usage: None,
            network_recv_cpu_usage: None,
            id: None,
        },
    },
    CycleSink {
        ident: Ident {
            sym: cycle_3,
        },
        location_kind: Tick(
            0,
            Cluster(
                2,
            ),
        ),
        input: DeferTick {
            input: ReduceKeyed {
                f: q!(| curr_time, new_time | { if new_time > * curr_time { * curr_time = new_time ; } }),
                input: Chain {
                    first: Chain {
                        first: Tee {
                            inner: <tee 10>: CycleSource {
                                ident: Ident {
                                    sym: cycle_3,
                                },
                                location_kind: Tick(
                                    0,
                                    Cluster(
                                        2,
                                    ),
                                ),
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        0,
                                        Cluster(
                                            2,
                                        ),
                                    ),
                                    output_type: Some(
                                        (usize , std :: time :: Instant),
                                    ),
                                    cardinality: None,
                                    cpu_usage: None,
                                    network_recv_cpu_usage: None,
                                    id: None,
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    0,
                                    Cluster(
                                        2,
                                    ),
                                ),
                                output_type: Some(
                                    (usize , std :: time :: Instant),
                                ),
                                cardinality: None,
                                cpu_usage: None,
                                network_recv_cpu_usage: None,
                                id: None,
                            },
                        },
                        second: FlatMap {
                            f: q!(| now | (0 .. num_clients_per_node__free).map (move | virtual_id | (virtual_id, now))),
                            input: Map {
                                f: q!(| _ | Instant::now ()),
                                input: Tee {
                                    inner: <tee 8>,
                                    metadata: HydroIrMetadata {
                                        location_kind: Tick(
                                            0,
                                            Cluster(
                                                2,
                                            ),
                                        ),
                                        output_type: Some(
                                            (),
                                        ),
                                        cardinality: None,
                                        cpu_usage: None,
                                        network_recv_cpu_usage: None,
                                        id: None,
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        0,
                                        Cluster(
                                            2,
                                        ),
                                    ),
                                    output_type: Some(
                                        std :: time :: Instant,
                                    ),
                                    cardinality: None,
                                    cpu_usage: None,
                                    network_recv_cpu_usage: None,
                                    id: None,
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    0,
                                    Cluster(
                                        2,
                                    ),
                                ),
                                output_type: Some(
                                    (usize , std :: time :: Instant),
                                ),
                                cardinality: None,
                                cpu_usage: None,
                                network_recv_cpu_usage: None,
                                id: None,
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                0,
                                Cluster(
                                    2,
                                ),
                            ),
                            output_type: Some(
                                (usize , std :: time :: Instant),
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    second: Tee {
                        inner: <tee 11>: Map {
                            f: q!(| (key, _prev_count) | (key as usize, Instant::now ())),
                            input: Tee {
                                inner: <tee 9>,
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        0,
                                        Cluster(
                                            2,
                                        ),
                                    ),
                                    output_type: Some(
                                        (u32 , u32),
                                    ),
                                    cardinality: None,
                                    cpu_usage: None,
                                    network_recv_cpu_usage: None,
                                    id: None,
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    0,
                                    Cluster(
                                        2,
                                    ),
                                ),
                                output_type: Some(
                                    (usize , std :: time :: Instant),
                                ),
                                cardinality: None,
                                cpu_usage: None,
                                network_recv_cpu_usage: None,
                                id: None,
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                0,
                                Cluster(
                                    2,
                                ),
                            ),
                            output_type: Some(
                                (usize , std :: time :: Instant),
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            0,
                            Cluster(
                                2,
                            ),
                        ),
                        output_type: Some(
                            (usize , std :: time :: Instant),
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        0,
                        Cluster(
                            2,
                        ),
                    ),
                    output_type: Some(
                        (usize , std :: time :: Instant),
                    ),
                    cardinality: None,
                    cpu_usage: None,
                    network_recv_cpu_usage: None,
                    id: None,
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    0,
                    Cluster(
                        2,
                    ),
                ),
                output_type: Some(
                    (usize , std :: time :: Instant),
                ),
                cardinality: None,
                cpu_usage: None,
                network_recv_cpu_usage: None,
                id: None,
            },
        },
        metadata: HydroIrMetadata {
            location_kind: Tick(
                0,
                Cluster(
                    2,
                ),
            ),
            output_type: Some(
                (usize , std :: time :: Instant),
            ),
            cardinality: None,
            cpu_usage: None,
            network_recv_cpu_usage: None,
            id: None,
        },
    },
    ForEach {
        f: q!(| latencies | { println!("Latency p50: {:.3} | p99 {:.3} ms | p999 {:.3} ms ({:} samples)", Duration::from_nanos (latencies.value_at_quantile (0.5)).as_micros () as f64 / 1000.0, Duration::from_nanos (latencies.value_at_quantile (0.99)).as_micros () as f64 / 1000.0, Duration::from_nanos (latencies.value_at_quantile (0.999)).as_micros () as f64 / 1000.0, latencies.len ()) ; }),
        input: Map {
            f: q!(| (d, _signal) | d),
            input: CrossSingleton {
                left: Reduce {
                    f: q!(| combined, new | { combined.add (new).unwrap () ; }),
                    input: Map {
                        f: q!(| (_id, histogram) | histogram),
                        input: ReduceKeyed {
                            f: q!(| combined, new | { * combined = new ; }),
                            input: Persist {
                                inner: Map {
                                    f: q!(| (id, histogram) | (id, histogram.histogram.borrow_mut ().clone ())),
                                    input: Network {
                                        from_key: None,
                                        to_location: Process(
                                            3,
                                        ),
                                        to_key: None,
                                        serialize_fn: Some(
                                            q!(...),
                                        ),
                                        instantiate_fn: <network instantiate>,
                                        deserialize_fn: Some(
                                            | res | { let (id , b) = res . unwrap () ; (hyd...,
                                        ),
                                        input: Map {
                                            f: q!(| latencies | { SerializableHistogramWrapper { histogram : latencies, } }),
                                            input: Map {
                                                f: q!(| (d, _signal) | d),
                                                input: CrossSingleton {
                                                    left: Fold {
                                                        init: q!(| | Rc::new (RefCell::new (Histogram::< u64 >::new (3).unwrap ()))),
                                                        acc: q!(| latencies, latency | { latencies.borrow_mut ().record (latency.as_nanos () as u64).unwrap () ; }),
                                                        input: Persist {
                                                            inner: Map {
                                                                f: q!(| (_virtual_id, (prev_time, curr_time)) | curr_time.duration_since (prev_time)),
                                                                input: Join {
                                                                    left: Tee {
                                                                        inner: <tee 10>,
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Tick(
                                                                                0,
                                                                                Cluster(
                                                                                    2,
                                                                                ),
                                                                            ),
                                                                            output_type: Some(
                                                                                (usize , std :: time :: Instant),
                                                                            ),
                                                                            cardinality: None,
                                                                            cpu_usage: None,
                                                                            network_recv_cpu_usage: None,
                                                                            id: None,
                                                                        },
                                                                    },
                                                                    right: Tee {
                                                                        inner: <tee 11>,
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Tick(
                                                                                0,
                                                                                Cluster(
                                                                                    2,
                                                                                ),
                                                                            ),
                                                                            output_type: Some(
                                                                                (usize , std :: time :: Instant),
                                                                            ),
                                                                            cardinality: None,
                                                                            cpu_usage: None,
                                                                            network_recv_cpu_usage: None,
                                                                            id: None,
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Tick(
                                                                            0,
                                                                            Cluster(
                                                                                2,
                                                                            ),
                                                                        ),
                                                                        output_type: Some(
                                                                            (usize , (std :: time :: Instant , std :: time :: Instant)),
                                                                        ),
                                                                        cardinality: None,
                                                                        cpu_usage: None,
                                                                        network_recv_cpu_usage: None,
                                                                        id: None,
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Tick(
                                                                        0,
                                                                        Cluster(
                                                                            2,
                                                                        ),
                                                                    ),
                                                                    output_type: Some(
                                                                        core :: time :: Duration,
                                                                    ),
                                                                    cardinality: None,
                                                                    cpu_usage: None,
                                                                    network_recv_cpu_usage: None,
                                                                    id: None,
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Tick(
                                                                    0,
                                                                    Cluster(
                                                                        2,
                                                                    ),
                                                                ),
                                                                output_type: Some(
                                                                    core :: time :: Duration,
                                                                ),
                                                                cardinality: None,
                                                                cpu_usage: None,
                                                                network_recv_cpu_usage: None,
                                                                id: None,
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Cluster(
                                                                2,
                                                            ),
                                                            output_type: Some(
                                                                std :: rc :: Rc < core :: cell :: RefCell < hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > > >,
                                                            ),
                                                            cardinality: None,
                                                            cpu_usage: None,
                                                            network_recv_cpu_usage: None,
                                                            id: None,
                                                        },
                                                    },
                                                    right: Map {
                                                        f: q!(| _u | ()),
                                                        input: Source {
                                                            source: Stream(
                                                                { use hydro_lang :: __staged :: __deps :: * ; u...,
                                                            ),
                                                            location_kind: Cluster(
                                                                2,
                                                            ),
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Cluster(
                                                                    2,
                                                                ),
                                                                output_type: Some(
                                                                    hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                ),
                                                                cardinality: None,
                                                                cpu_usage: None,
                                                                network_recv_cpu_usage: None,
                                                                id: None,
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Tick(
                                                                2,
                                                                Cluster(
                                                                    2,
                                                                ),
                                                            ),
                                                            output_type: Some(
                                                                (),
                                                            ),
                                                            cardinality: None,
                                                            cpu_usage: None,
                                                            network_recv_cpu_usage: None,
                                                            id: None,
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Tick(
                                                            2,
                                                            Cluster(
                                                                2,
                                                            ),
                                                        ),
                                                        output_type: Some(
                                                            (std :: rc :: Rc < core :: cell :: RefCell < hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > > > , ()),
                                                        ),
                                                        cardinality: None,
                                                        cpu_usage: None,
                                                        network_recv_cpu_usage: None,
                                                        id: None,
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Tick(
                                                        2,
                                                        Cluster(
                                                            2,
                                                        ),
                                                    ),
                                                    output_type: Some(
                                                        std :: rc :: Rc < core :: cell :: RefCell < hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > > >,
                                                    ),
                                                    cardinality: None,
                                                    cpu_usage: None,
                                                    network_recv_cpu_usage: None,
                                                    id: None,
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Cluster(
                                                    2,
                                                ),
                                                output_type: Some(
                                                    hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: SerializableHistogramWrapper,
                                                ),
                                                cardinality: None,
                                                cpu_usage: None,
                                                network_recv_cpu_usage: None,
                                                id: None,
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Process(
                                                3,
                                            ),
                                            output_type: Some(
                                                hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: SerializableHistogramWrapper,
                                            ),
                                            cardinality: None,
                                            cpu_usage: None,
                                            network_recv_cpu_usage: None,
                                            id: None,
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Process(
                                            3,
                                        ),
                                        output_type: Some(
                                            (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >),
                                        ),
                                        cardinality: None,
                                        cpu_usage: None,
                                        network_recv_cpu_usage: None,
                                        id: None,
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        3,
                                        Process(
                                            3,
                                        ),
                                    ),
                                    output_type: Some(
                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >),
                                    ),
                                    cardinality: None,
                                    cpu_usage: None,
                                    network_recv_cpu_usage: None,
                                    id: None,
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    3,
                                    Process(
                                        3,
                                    ),
                                ),
                                output_type: Some(
                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >),
                                ),
                                cardinality: None,
                                cpu_usage: None,
                                network_recv_cpu_usage: None,
                                id: None,
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                3,
                                Process(
                                    3,
                                ),
                            ),
                            output_type: Some(
                                hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >,
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            3,
                            Process(
                                3,
                            ),
                        ),
                        output_type: Some(
                            hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >,
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                right: Map {
                    f: q!(| _u | ()),
                    input: Source {
                        source: Stream(
                            { use hydro_lang :: __staged :: __deps :: * ; u...,
                        ),
                        location_kind: Process(
                            3,
                        ),
                        metadata: HydroIrMetadata {
                            location_kind: Process(
                                3,
                            ),
                            output_type: Some(
                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            4,
                            Process(
                                3,
                            ),
                        ),
                        output_type: Some(
                            (),
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        4,
                        Process(
                            3,
                        ),
                    ),
                    output_type: Some(
                        (hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 > , ()),
                    ),
                    cardinality: None,
                    cpu_usage: None,
                    network_recv_cpu_usage: None,
                    id: None,
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    4,
                    Process(
                        3,
                    ),
                ),
                output_type: Some(
                    hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >,
                ),
                cardinality: None,
                cpu_usage: None,
                network_recv_cpu_usage: None,
                id: None,
            },
        },
        metadata: HydroIrMetadata {
            location_kind: Process(
                3,
            ),
            output_type: Some(
                hydro_test :: __staged :: __deps :: hydro_std :: __staged :: __deps :: hdrhistogram :: Histogram < u64 >,
            ),
            cardinality: None,
            cpu_usage: None,
            network_recv_cpu_usage: None,
            id: None,
        },
    },
    ForEach {
        f: q!(| throughputs | { if throughputs.sample_count () >= 2 { let num_client_machines = client_members__free.len () ; let mean = throughputs.sample_mean () * num_client_machines as f64 ; if let Some ((lower, upper)) = throughputs.confidence_interval_99 () { println!("Throughput: {:.2} - {:.2} - {:.2} requests/s", lower * num_client_machines as f64, mean, upper * num_client_machines as f64) ; } } }),
        input: Map {
            f: q!(| (d, _signal) | d),
            input: CrossSingleton {
                left: Reduce {
                    f: q!(| combined, new | { combined.add (new) ; }),
                    input: Map {
                        f: q!(| (_id, throughput) | throughput),
                        input: ReduceKeyed {
                            f: q!(| combined, new | { * combined = new ; }),
                            input: Persist {
                                inner: Network {
                                    from_key: None,
                                    to_location: Process(
                                        3,
                                    ),
                                    to_key: None,
                                    serialize_fn: Some(
                                        q!(...),
                                    ),
                                    instantiate_fn: <network instantiate>,
                                    deserialize_fn: Some(
                                        | res | { let (id , b) = res . unwrap () ; (hyd...,
                                    ),
                                    input: Map {
                                        f: q!(| (d, _signal) | d),
                                        input: CrossSingleton {
                                            left: Map {
                                                f: q!(| (_, stats) | { stats }),
                                                input: Fold {
                                                    init: q!(| | (0, { RollingAverage::new () })),
                                                    acc: q!(| (total, stats), (batch_size, reset) | { if reset { if * total > 0 { stats.add_sample (* total as f64) ; } * total = 0 ; } else { * total += batch_size ; } }),
                                                    input: Persist {
                                                        inner: Chain {
                                                            first: Map {
                                                                f: q!(| batch_size | (batch_size, false)),
                                                                input: Map {
                                                                    f: q!(| (d, _signal) | d),
                                                                    input: CrossSingleton {
                                                                        left: Fold {
                                                                            init: q!(| | 0usize),
                                                                            acc: q!(| count, _ | * count += 1),
                                                                            input: Tee {
                                                                                inner: <tee 9>,
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Tick(
                                                                                        0,
                                                                                        Cluster(
                                                                                            2,
                                                                                        ),
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        (u32 , u32),
                                                                                    ),
                                                                                    cardinality: None,
                                                                                    cpu_usage: None,
                                                                                    network_recv_cpu_usage: None,
                                                                                    id: None,
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Tick(
                                                                                    0,
                                                                                    Cluster(
                                                                                        2,
                                                                                    ),
                                                                                ),
                                                                                output_type: Some(
                                                                                    usize,
                                                                                ),
                                                                                cardinality: None,
                                                                                cpu_usage: None,
                                                                                network_recv_cpu_usage: None,
                                                                                id: None,
                                                                            },
                                                                        },
                                                                        right: Map {
                                                                            f: q!(| _u | ()),
                                                                            input: Filter {
                                                                                f: q!(| c | * c == 0),
                                                                                input: Fold {
                                                                                    init: q!(| | 0usize),
                                                                                    acc: q!(| count, _ | * count += 1),
                                                                                    input: Tee {
                                                                                        inner: <tee 12>: Source {
                                                                                            source: Stream(
                                                                                                { use hydro_lang :: __staged :: __deps :: * ; u...,
                                                                                            ),
                                                                                            location_kind: Cluster(
                                                                                                2,
                                                                                            ),
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Cluster(
                                                                                                    2,
                                                                                                ),
                                                                                                output_type: Some(
                                                                                                    hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                                ),
                                                                                                cardinality: None,
                                                                                                cpu_usage: None,
                                                                                                network_recv_cpu_usage: None,
                                                                                                id: None,
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Tick(
                                                                                                0,
                                                                                                Cluster(
                                                                                                    2,
                                                                                                ),
                                                                                            ),
                                                                                            output_type: Some(
                                                                                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                                            ),
                                                                                            cardinality: None,
                                                                                            cpu_usage: None,
                                                                                            network_recv_cpu_usage: None,
                                                                                            id: None,
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Tick(
                                                                                            0,
                                                                                            Cluster(
                                                                                                2,
                                                                                            ),
                                                                                        ),
                                                                                        output_type: Some(
                                                                                            usize,
                                                                                        ),
                                                                                        cardinality: None,
                                                                                        cpu_usage: None,
                                                                                        network_recv_cpu_usage: None,
                                                                                        id: None,
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Tick(
                                                                                        0,
                                                                                        Cluster(
                                                                                            2,
                                                                                        ),
                                                                                    ),
                                                                                    output_type: Some(
                                                                                        usize,
                                                                                    ),
                                                                                    cardinality: None,
                                                                                    cpu_usage: None,
                                                                                    network_recv_cpu_usage: None,
                                                                                    id: None,
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Tick(
                                                                                    0,
                                                                                    Cluster(
                                                                                        2,
                                                                                    ),
                                                                                ),
                                                                                output_type: Some(
                                                                                    (),
                                                                                ),
                                                                                cardinality: None,
                                                                                cpu_usage: None,
                                                                                network_recv_cpu_usage: None,
                                                                                id: None,
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Tick(
                                                                                0,
                                                                                Cluster(
                                                                                    2,
                                                                                ),
                                                                            ),
                                                                            output_type: Some(
                                                                                (usize , ()),
                                                                            ),
                                                                            cardinality: None,
                                                                            cpu_usage: None,
                                                                            network_recv_cpu_usage: None,
                                                                            id: None,
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Tick(
                                                                            0,
                                                                            Cluster(
                                                                                2,
                                                                            ),
                                                                        ),
                                                                        output_type: Some(
                                                                            usize,
                                                                        ),
                                                                        cardinality: None,
                                                                        cpu_usage: None,
                                                                        network_recv_cpu_usage: None,
                                                                        id: None,
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Tick(
                                                                        0,
                                                                        Cluster(
                                                                            2,
                                                                        ),
                                                                    ),
                                                                    output_type: Some(
                                                                        (usize , bool),
                                                                    ),
                                                                    cardinality: None,
                                                                    cpu_usage: None,
                                                                    network_recv_cpu_usage: None,
                                                                    id: None,
                                                                },
                                                            },
                                                            second: DeferTick {
                                                                input: Map {
                                                                    f: q!(| _ | (0, true)),
                                                                    input: Tee {
                                                                        inner: <tee 12>,
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Tick(
                                                                                0,
                                                                                Cluster(
                                                                                    2,
                                                                                ),
                                                                            ),
                                                                            output_type: Some(
                                                                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                                            ),
                                                                            cardinality: None,
                                                                            cpu_usage: None,
                                                                            network_recv_cpu_usage: None,
                                                                            id: None,
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Tick(
                                                                            0,
                                                                            Cluster(
                                                                                2,
                                                                            ),
                                                                        ),
                                                                        output_type: Some(
                                                                            (usize , bool),
                                                                        ),
                                                                        cardinality: None,
                                                                        cpu_usage: None,
                                                                        network_recv_cpu_usage: None,
                                                                        id: None,
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Tick(
                                                                        0,
                                                                        Cluster(
                                                                            2,
                                                                        ),
                                                                    ),
                                                                    output_type: Some(
                                                                        (usize , bool),
                                                                    ),
                                                                    cardinality: None,
                                                                    cpu_usage: None,
                                                                    network_recv_cpu_usage: None,
                                                                    id: None,
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Tick(
                                                                    0,
                                                                    Cluster(
                                                                        2,
                                                                    ),
                                                                ),
                                                                output_type: Some(
                                                                    (usize , bool),
                                                                ),
                                                                cardinality: None,
                                                                cpu_usage: None,
                                                                network_recv_cpu_usage: None,
                                                                id: None,
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Tick(
                                                                0,
                                                                Cluster(
                                                                    2,
                                                                ),
                                                            ),
                                                            output_type: Some(
                                                                (usize , bool),
                                                            ),
                                                            cardinality: None,
                                                            cpu_usage: None,
                                                            network_recv_cpu_usage: None,
                                                            id: None,
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Cluster(
                                                            2,
                                                        ),
                                                        output_type: Some(
                                                            (usize , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                                        ),
                                                        cardinality: None,
                                                        cpu_usage: None,
                                                        network_recv_cpu_usage: None,
                                                        id: None,
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Cluster(
                                                        2,
                                                    ),
                                                    output_type: Some(
                                                        hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                                                    ),
                                                    cardinality: None,
                                                    cpu_usage: None,
                                                    network_recv_cpu_usage: None,
                                                    id: None,
                                                },
                                            },
                                            right: Map {
                                                f: q!(| _u | ()),
                                                input: Source {
                                                    source: Stream(
                                                        { use hydro_lang :: __staged :: __deps :: * ; u...,
                                                    ),
                                                    location_kind: Cluster(
                                                        2,
                                                    ),
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Cluster(
                                                            2,
                                                        ),
                                                        output_type: Some(
                                                            hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                                                        ),
                                                        cardinality: None,
                                                        cpu_usage: None,
                                                        network_recv_cpu_usage: None,
                                                        id: None,
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Tick(
                                                        5,
                                                        Cluster(
                                                            2,
                                                        ),
                                                    ),
                                                    output_type: Some(
                                                        (),
                                                    ),
                                                    cardinality: None,
                                                    cpu_usage: None,
                                                    network_recv_cpu_usage: None,
                                                    id: None,
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Tick(
                                                    5,
                                                    Cluster(
                                                        2,
                                                    ),
                                                ),
                                                output_type: Some(
                                                    (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , ()),
                                                ),
                                                cardinality: None,
                                                cpu_usage: None,
                                                network_recv_cpu_usage: None,
                                                id: None,
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Tick(
                                                5,
                                                Cluster(
                                                    2,
                                                ),
                                            ),
                                            output_type: Some(
                                                hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                                            ),
                                            cardinality: None,
                                            cpu_usage: None,
                                            network_recv_cpu_usage: None,
                                            id: None,
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Process(
                                            3,
                                        ),
                                        output_type: Some(
                                            hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                                        ),
                                        cardinality: None,
                                        cpu_usage: None,
                                        network_recv_cpu_usage: None,
                                        id: None,
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        6,
                                        Process(
                                            3,
                                        ),
                                    ),
                                    output_type: Some(
                                        (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                    ),
                                    cardinality: None,
                                    cpu_usage: None,
                                    network_recv_cpu_usage: None,
                                    id: None,
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    6,
                                    Process(
                                        3,
                                    ),
                                ),
                                output_type: Some(
                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: two_pc_bench :: Client > , hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage),
                                ),
                                cardinality: None,
                                cpu_usage: None,
                                network_recv_cpu_usage: None,
                                id: None,
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                6,
                                Process(
                                    3,
                                ),
                            ),
                            output_type: Some(
                                hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            6,
                            Process(
                                3,
                            ),
                        ),
                        output_type: Some(
                            hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                right: Map {
                    f: q!(| _u | ()),
                    input: Source {
                        source: Stream(
                            { use hydro_lang :: __staged :: __deps :: * ; u...,
                        ),
                        location_kind: Process(
                            3,
                        ),
                        metadata: HydroIrMetadata {
                            location_kind: Process(
                                3,
                            ),
                            output_type: Some(
                                hydro_test :: __staged :: __deps :: tokio :: time :: Instant,
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            7,
                            Process(
                                3,
                            ),
                        ),
                        output_type: Some(
                            (),
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        7,
                        Process(
                            3,
                        ),
                    ),
                    output_type: Some(
                        (hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage , ()),
                    ),
                    cardinality: None,
                    cpu_usage: None,
                    network_recv_cpu_usage: None,
                    id: None,
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    7,
                    Process(
                        3,
                    ),
                ),
                output_type: Some(
                    hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
                ),
                cardinality: None,
                cpu_usage: None,
                network_recv_cpu_usage: None,
                id: None,
            },
        },
        metadata: HydroIrMetadata {
            location_kind: Process(
                3,
            ),
            output_type: Some(
                hydro_test :: __staged :: __deps :: hydro_std :: bench_client :: rolling_average :: RollingAverage,
            ),
            cardinality: None,
            cpu_usage: None,
            network_recv_cpu_usage: None,
            id: None,
        },
    },
]
