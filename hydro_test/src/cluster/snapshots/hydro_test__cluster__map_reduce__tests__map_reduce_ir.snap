---
source: hydro_test/src/cluster/map_reduce.rs
expression: built.ir()
---
[
    ForEach {
        f: q!(| (string, count) | println!("{}: {}", string, count)),
        input: ReduceKeyed {
            f: q!(| total, count | * total += count),
            input: Persist {
                inner: Map {
                    f: q!(| (_, b) | b),
                    input: Network {
                        from_key: None,
                        to_location: Process(
                            0,
                        ),
                        to_key: None,
                        serialize_fn: Some(
                            q!(...),
                        ),
                        instantiate_fn: <network instantiate>,
                        deserialize_fn: Some(
                            | res | { let (id , b) = res . unwrap () ; (hyd...,
                        ),
                        input: Inspect {
                            f: q!(| (string, count) | println!("partition count: {} - {}", string, count)),
                            input: FoldKeyed {
                                init: q!(| | 0),
                                acc: q!(| count, _ | * count += 1),
                                input: Map {
                                    f: q!(| string | (string, ())),
                                    input: Network {
                                        from_key: None,
                                        to_location: Cluster(
                                            1,
                                        ),
                                        to_key: None,
                                        serialize_fn: Some(
                                            q!(...),
                                        ),
                                        instantiate_fn: <network instantiate>,
                                        deserialize_fn: Some(
                                            | res | { hydro_lang :: runtime_support :: binc...,
                                        ),
                                        input: Map {
                                            f: q!(| (i, w) | (ids__free [i % ids__free.len ()], w)),
                                            input: Enumerate {
                                                is_static: true,
                                                input: Map {
                                                    f: q!(| s | s.to_string ()),
                                                    input: Source {
                                                        source: Iter(
                                                            { use crate :: __staged :: __deps :: * ; use cr...,
                                                        ),
                                                        location_kind: Process(
                                                            0,
                                                        ),
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Process(
                                                                0,
                                                            ),
                                                            output_type: Some(
                                                                & str,
                                                            ),
                                                            cardinality: None,
                                                            cpu_usage: None,
                                                            network_recv_cpu_usage: None,
                                                            id: None,
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Process(
                                                            0,
                                                        ),
                                                        output_type: Some(
                                                            std :: string :: String,
                                                        ),
                                                        cardinality: None,
                                                        cpu_usage: None,
                                                        network_recv_cpu_usage: None,
                                                        id: None,
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Process(
                                                        0,
                                                    ),
                                                    output_type: Some(
                                                        (usize , std :: string :: String),
                                                    ),
                                                    cardinality: None,
                                                    cpu_usage: None,
                                                    network_recv_cpu_usage: None,
                                                    id: None,
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Process(
                                                    0,
                                                ),
                                                output_type: Some(
                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , std :: string :: String),
                                                ),
                                                cardinality: None,
                                                cpu_usage: None,
                                                network_recv_cpu_usage: None,
                                                id: None,
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Cluster(
                                                1,
                                            ),
                                            output_type: Some(
                                                std :: string :: String,
                                            ),
                                            cardinality: None,
                                            cpu_usage: None,
                                            network_recv_cpu_usage: None,
                                            id: None,
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Cluster(
                                            1,
                                        ),
                                        output_type: Some(
                                            (std :: string :: String , ()),
                                        ),
                                        cardinality: None,
                                        cpu_usage: None,
                                        network_recv_cpu_usage: None,
                                        id: None,
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        0,
                                        Cluster(
                                            1,
                                        ),
                                    ),
                                    output_type: Some(
                                        (std :: string :: String , i32),
                                    ),
                                    cardinality: None,
                                    cpu_usage: None,
                                    network_recv_cpu_usage: None,
                                    id: None,
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    0,
                                    Cluster(
                                        1,
                                    ),
                                ),
                                output_type: Some(
                                    (std :: string :: String , i32),
                                ),
                                cardinality: None,
                                cpu_usage: None,
                                network_recv_cpu_usage: None,
                                id: None,
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Process(
                                0,
                            ),
                            output_type: Some(
                                (std :: string :: String , i32),
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Process(
                            0,
                        ),
                        output_type: Some(
                            (std :: string :: String , i32),
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        1,
                        Process(
                            0,
                        ),
                    ),
                    output_type: Some(
                        (std :: string :: String , i32),
                    ),
                    cardinality: None,
                    cpu_usage: None,
                    network_recv_cpu_usage: None,
                    id: None,
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    1,
                    Process(
                        0,
                    ),
                ),
                output_type: Some(
                    (std :: string :: String , i32),
                ),
                cardinality: None,
                cpu_usage: None,
                network_recv_cpu_usage: None,
                id: None,
            },
        },
        metadata: HydroIrMetadata {
            location_kind: Process(
                0,
            ),
            output_type: Some(
                (std :: string :: String , i32),
            ),
            cardinality: None,
            cpu_usage: None,
            network_recv_cpu_usage: None,
            id: None,
        },
    },
]
