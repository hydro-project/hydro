---
source: hydro_test/src/cluster/map_reduce.rs
expression: built.ir()
---
[
    ForEach {
        f: DebugExpr(
            Expr::Call {
                attrs: [],
                func: Expr::Path {
                    attrs: [],
                    qself: None,
                    path: Path {
                        leading_colon: None,
                        segments: [
                            PathSegment {
                                ident: Ident {
                                    sym: stageleft,
                                },
                                arguments: PathArguments::None,
                            },
                            PathSep,
                            PathSegment {
                                ident: Ident {
                                    sym: runtime_support,
                                },
                                arguments: PathArguments::None,
                            },
                            PathSep,
                            PathSegment {
                                ident: Ident {
                                    sym: fn1_type_hint,
                                },
                                arguments: PathArguments::AngleBracketed {
                                    colon2_token: Some(
                                        PathSep,
                                    ),
                                    lt_token: Lt,
                                    args: [
                                        GenericArgument::Type(
                                            Type::Tuple {
                                                paren_token: Paren,
                                                elems: [
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: std,
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: string,
                                                                        span: bytes(1831..1837),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: String,
                                                                        span: bytes(1839..1845),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: i32,
                                                                        span: bytes(1847..1850),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        ),
                                        Comma,
                                        GenericArgument::Type(
                                            Type::Tuple {
                                                paren_token: Paren,
                                                elems: [],
                                            },
                                        ),
                                    ],
                                    gt_token: Gt,
                                },
                            },
                        ],
                    },
                },
                paren_token: Paren,
                args: [
                    Expr::Block {
                        attrs: [],
                        label: None,
                        block: Block {
                            brace_token: Brace,
                            stmts: [
                                Stmt::Item(
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: crate,
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: __staged,
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Path(
                                                            UsePath {
                                                                ident: Ident {
                                                                    sym: __deps,
                                                                },
                                                                colon2_token: PathSep,
                                                                tree: UseTree::Glob(
                                                                    UseGlob {
                                                                        star_token: Star,
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Item(
                                    Item::Use {
                                        attrs: [],
                                        vis: Visibility::Inherited,
                                        use_token: Use,
                                        leading_colon: None,
                                        tree: UseTree::Path(
                                            UsePath {
                                                ident: Ident {
                                                    sym: crate,
                                                },
                                                colon2_token: PathSep,
                                                tree: UseTree::Path(
                                                    UsePath {
                                                        ident: Ident {
                                                            sym: __staged,
                                                        },
                                                        colon2_token: PathSep,
                                                        tree: UseTree::Path(
                                                            UsePath {
                                                                ident: Ident {
                                                                    sym: cluster,
                                                                    span: bytes(1748..1755),
                                                                },
                                                                colon2_token: PathSep,
                                                                tree: UseTree::Path(
                                                                    UsePath {
                                                                        ident: Ident {
                                                                            sym: map_reduce,
                                                                            span: bytes(1757..1767),
                                                                        },
                                                                        colon2_token: PathSep,
                                                                        tree: UseTree::Glob(
                                                                            UseGlob {
                                                                                star_token: Star,
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        semi_token: Semi,
                                    },
                                ),
                                Stmt::Expr(
                                    Expr::Closure {
                                        attrs: [],
                                        lifetimes: None,
                                        constness: None,
                                        movability: None,
                                        asyncness: None,
                                        capture: None,
                                        or1_token: Or,
                                        inputs: [
                                            Pat::Tuple {
                                                attrs: [],
                                                paren_token: Paren,
                                                elems: [
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: string,
                                                            span: bytes(1771..1777),
                                                        },
                                                        subpat: None,
                                                    },
                                                    Comma,
                                                    Pat::Ident {
                                                        attrs: [],
                                                        by_ref: None,
                                                        mutability: None,
                                                        ident: Ident {
                                                            sym: count,
                                                            span: bytes(1779..1784),
                                                        },
                                                        subpat: None,
                                                    },
                                                ],
                                            },
                                        ],
                                        or2_token: Or,
                                        output: ReturnType::Default,
                                        body: Expr::Macro {
                                            attrs: [],
                                            mac: Macro {
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: println,
                                                                span: bytes(1788..1795),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                                bang_token: Not,
                                                delimiter: MacroDelimiter::Paren(
                                                    Paren,
                                                ),
                                                tokens: TokenStream [
                                                    Literal {
                                                        lit: "{}: {}",
                                                        span: bytes(1798..1806),
                                                    },
                                                    Punct {
                                                        char: ',',
                                                        spacing: Alone,
                                                        span: bytes(1806..1807),
                                                    },
                                                    Ident {
                                                        sym: string,
                                                        span: bytes(1808..1814),
                                                    },
                                                    Punct {
                                                        char: ',',
                                                        spacing: Alone,
                                                        span: bytes(1814..1815),
                                                    },
                                                    Ident {
                                                        sym: count,
                                                        span: bytes(1816..1821),
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                    None,
                                ),
                            ],
                        },
                    },
                ],
            },
        ),
        input: ReduceKeyed {
            f: DebugExpr(
                Expr::Call {
                    attrs: [],
                    func: Expr::Path {
                        attrs: [],
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident {
                                        sym: stageleft,
                                    },
                                    arguments: PathArguments::None,
                                },
                                PathSep,
                                PathSegment {
                                    ident: Ident {
                                        sym: runtime_support,
                                    },
                                    arguments: PathArguments::None,
                                },
                                PathSep,
                                PathSegment {
                                    ident: Ident {
                                        sym: fn2_borrow_mut_type_hint,
                                    },
                                    arguments: PathArguments::AngleBracketed {
                                        colon2_token: Some(
                                            PathSep,
                                        ),
                                        lt_token: Lt,
                                        args: [
                                            GenericArgument::Type(
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: i32,
                                                                    span: bytes(1667..1670),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                            Comma,
                                            GenericArgument::Type(
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: i32,
                                                                    span: bytes(1671..1674),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                            Comma,
                                            GenericArgument::Type(
                                                Type::Tuple {
                                                    paren_token: Paren,
                                                    elems: [],
                                                },
                                            ),
                                        ],
                                        gt_token: Gt,
                                    },
                                },
                            ],
                        },
                    },
                    paren_token: Paren,
                    args: [
                        Expr::Block {
                            attrs: [],
                            label: None,
                            block: Block {
                                brace_token: Brace,
                                stmts: [
                                    Stmt::Item(
                                        Item::Use {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            use_token: Use,
                                            leading_colon: None,
                                            tree: UseTree::Path(
                                                UsePath {
                                                    ident: Ident {
                                                        sym: crate,
                                                    },
                                                    colon2_token: PathSep,
                                                    tree: UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: __staged,
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: __deps,
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Glob(
                                                                        UseGlob {
                                                                            star_token: Star,
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                    ),
                                    Stmt::Item(
                                        Item::Use {
                                            attrs: [],
                                            vis: Visibility::Inherited,
                                            use_token: Use,
                                            leading_colon: None,
                                            tree: UseTree::Path(
                                                UsePath {
                                                    ident: Ident {
                                                        sym: crate,
                                                    },
                                                    colon2_token: PathSep,
                                                    tree: UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: __staged,
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: cluster,
                                                                        span: bytes(1613..1620),
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: map_reduce,
                                                                                span: bytes(1622..1632),
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Glob(
                                                                                UseGlob {
                                                                                    star_token: Star,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            semi_token: Semi,
                                        },
                                    ),
                                    Stmt::Expr(
                                        Expr::Closure {
                                            attrs: [],
                                            lifetimes: None,
                                            constness: None,
                                            movability: None,
                                            asyncness: None,
                                            capture: None,
                                            or1_token: Or,
                                            inputs: [
                                                Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: total,
                                                        span: bytes(1635..1640),
                                                    },
                                                    subpat: None,
                                                },
                                                Comma,
                                                Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: count,
                                                        span: bytes(1642..1647),
                                                    },
                                                    subpat: None,
                                                },
                                            ],
                                            or2_token: Or,
                                            output: ReturnType::Default,
                                            body: Expr::Binary {
                                                attrs: [],
                                                left: Expr::Unary {
                                                    attrs: [],
                                                    op: UnOp::Deref(
                                                        Star,
                                                    ),
                                                    expr: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: total,
                                                                        span: bytes(1652..1657),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                op: BinOp::AddAssign(
                                                    PlusEq,
                                                ),
                                                right: Expr::Path {
                                                    attrs: [],
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: count,
                                                                    span: bytes(1661..1666),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            },
                                        },
                                        None,
                                    ),
                                ],
                            },
                        },
                    ],
                },
            ),
            input: Persist {
                inner: Map {
                    f: DebugExpr(
                        Expr::Call {
                            attrs: [],
                            func: Expr::Path {
                                attrs: [],
                                qself: None,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: stageleft,
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: runtime_support,
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: fn1_type_hint,
                                            },
                                            arguments: PathArguments::AngleBracketed {
                                                colon2_token: Some(
                                                    PathSep,
                                                ),
                                                lt_token: Lt,
                                                args: [
                                                    GenericArgument::Type(
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: hydro_test,
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: __staged,
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: __deps,
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: hydro_lang,
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: location,
                                                                                    span: bytes(1372..1380),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: cluster,
                                                                                    span: bytes(1382..1389),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: cluster_id,
                                                                                    span: bytes(1391..1401),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ClusterId,
                                                                                    span: bytes(1403..1412),
                                                                                },
                                                                                arguments: PathArguments::AngleBracketed {
                                                                                    colon2_token: None,
                                                                                    lt_token: Lt,
                                                                                    args: [
                                                                                        GenericArgument::Type(
                                                                                            Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: hydro_test,
                                                                                                                span: bytes(1413..1423),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: __staged,
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: cluster,
                                                                                                                span: bytes(1425..1432),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: map_reduce,
                                                                                                                span: bytes(1434..1444),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Worker,
                                                                                                                span: bytes(1446..1452),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    gt_token: Gt,
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: std,
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: string,
                                                                                            span: bytes(1463..1469),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: String,
                                                                                            span: bytes(1471..1477),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: i32,
                                                                                            span: bytes(1479..1482),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    Comma,
                                                    GenericArgument::Type(
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: std,
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: string,
                                                                                    span: bytes(1493..1499),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: String,
                                                                                    span: bytes(1501..1507),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: i32,
                                                                                    span: bytes(1509..1512),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                ],
                                                gt_token: Gt,
                                            },
                                        },
                                    ],
                                },
                            },
                            paren_token: Paren,
                            args: [
                                Expr::Block {
                                    attrs: [],
                                    label: None,
                                    block: Block {
                                        brace_token: Brace,
                                        stmts: [
                                            Stmt::Item(
                                                Item::Use {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    use_token: Use,
                                                    leading_colon: None,
                                                    tree: UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: hydro_lang,
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: __staged,
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: __deps,
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Glob(
                                                                                UseGlob {
                                                                                    star_token: Star,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                            ),
                                            Stmt::Item(
                                                Item::Use {
                                                    attrs: [],
                                                    vis: Visibility::Inherited,
                                                    use_token: Use,
                                                    leading_colon: None,
                                                    tree: UseTree::Path(
                                                        UsePath {
                                                            ident: Ident {
                                                                sym: hydro_lang,
                                                            },
                                                            colon2_token: PathSep,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: __staged,
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: stream,
                                                                                span: bytes(1339..1345),
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Glob(
                                                                                UseGlob {
                                                                                    star_token: Star,
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                            ),
                                            Stmt::Expr(
                                                Expr::Closure {
                                                    attrs: [],
                                                    lifetimes: None,
                                                    constness: None,
                                                    movability: None,
                                                    asyncness: None,
                                                    capture: None,
                                                    or1_token: Or,
                                                    inputs: [
                                                        Pat::Tuple {
                                                            attrs: [],
                                                            paren_token: Paren,
                                                            elems: [
                                                                Pat::Wild {
                                                                    attrs: [],
                                                                    underscore_token: Underscore,
                                                                },
                                                                Comma,
                                                                Pat::Ident {
                                                                    attrs: [],
                                                                    by_ref: None,
                                                                    mutability: None,
                                                                    ident: Ident {
                                                                        sym: b,
                                                                        span: bytes(1352..1353),
                                                                    },
                                                                    subpat: None,
                                                                },
                                                            ],
                                                        },
                                                    ],
                                                    or2_token: Or,
                                                    output: ReturnType::Default,
                                                    body: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: b,
                                                                        span: bytes(1357..1358),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                                None,
                                            ),
                                        ],
                                    },
                                },
                            ],
                        },
                    ),
                    input: Network {
                        from_key: None,
                        to_location: Process(
                            0,
                        ),
                        to_key: None,
                        serialize_fn: Some(
                            DebugExpr(
                                Expr::Call {
                                    attrs: [],
                                    func: Expr::Path {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: Some(
                                                PathSep,
                                            ),
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: hydro_lang,
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: runtime_support,
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: stageleft,
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: runtime_support,
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: fn1_type_hint,
                                                    },
                                                    arguments: PathArguments::AngleBracketed {
                                                        colon2_token: Some(
                                                            PathSep,
                                                        ),
                                                        lt_token: Lt,
                                                        args: [
                                                            GenericArgument::Type(
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: std,
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: string,
                                                                                            span: bytes(1208..1214),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: String,
                                                                                            span: bytes(1216..1222),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: i32,
                                                                                            span: bytes(1224..1227),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                            Comma,
                                                            GenericArgument::Type(
                                                                Type::Infer {
                                                                    underscore_token: Underscore,
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Gt,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    paren_token: Paren,
                                    args: [
                                        Expr::Closure {
                                            attrs: [],
                                            lifetimes: None,
                                            constness: None,
                                            movability: None,
                                            asyncness: None,
                                            capture: None,
                                            or1_token: Or,
                                            inputs: [
                                                Pat::Ident {
                                                    attrs: [],
                                                    by_ref: None,
                                                    mutability: None,
                                                    ident: Ident {
                                                        sym: data,
                                                    },
                                                    subpat: None,
                                                },
                                            ],
                                            or2_token: Or,
                                            output: ReturnType::Default,
                                            body: Expr::Block {
                                                attrs: [],
                                                label: None,
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Expr(
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::MethodCall {
                                                                    attrs: [],
                                                                    receiver: Expr::Call {
                                                                        attrs: [],
                                                                        func: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: hydro_lang,
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: runtime_support,
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: bincode,
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: serialize,
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        paren_token: Paren,
                                                                        args: [
                                                                            Expr::Reference {
                                                                                attrs: [],
                                                                                and_token: And,
                                                                                mutability: None,
                                                                                expr: Expr::Path {
                                                                                    attrs: [],
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: data,
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                    dot_token: Dot,
                                                                    method: Ident {
                                                                        sym: unwrap,
                                                                    },
                                                                    turbofish: None,
                                                                    paren_token: Paren,
                                                                    args: [],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: into,
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        },
                                    ],
                                },
                            ),
                        ),
                        instantiate_fn: <network instantiate>,
                        deserialize_fn: Some(
                            DebugExpr(
                                Expr::Closure {
                                    attrs: [],
                                    lifetimes: None,
                                    constness: None,
                                    movability: None,
                                    asyncness: None,
                                    capture: None,
                                    or1_token: Or,
                                    inputs: [
                                        Pat::Ident {
                                            attrs: [],
                                            by_ref: None,
                                            mutability: None,
                                            ident: Ident {
                                                sym: res,
                                            },
                                            subpat: None,
                                        },
                                    ],
                                    or2_token: Or,
                                    output: ReturnType::Default,
                                    body: Expr::Block {
                                        attrs: [],
                                        label: None,
                                        block: Block {
                                            brace_token: Brace,
                                            stmts: [
                                                Stmt::Local {
                                                    attrs: [],
                                                    let_token: Let,
                                                    pat: Pat::Tuple {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        elems: [
                                                            Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: id,
                                                                },
                                                                subpat: None,
                                                            },
                                                            Comma,
                                                            Pat::Ident {
                                                                attrs: [],
                                                                by_ref: None,
                                                                mutability: None,
                                                                ident: Ident {
                                                                    sym: b,
                                                                },
                                                                subpat: None,
                                                            },
                                                        ],
                                                    },
                                                    init: Some(
                                                        LocalInit {
                                                            eq_token: Eq,
                                                            expr: Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: res,
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: unwrap,
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                            diverge: None,
                                                        },
                                                    ),
                                                    semi_token: Semi,
                                                },
                                                Stmt::Expr(
                                                    Expr::Tuple {
                                                        attrs: [],
                                                        paren_token: Paren,
                                                        elems: [
                                                            Expr::Call {
                                                                attrs: [],
                                                                func: Expr::Path {
                                                                    attrs: [],
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: hydro_lang,
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: ClusterId,
                                                                                },
                                                                                arguments: PathArguments::AngleBracketed {
                                                                                    colon2_token: Some(
                                                                                        PathSep,
                                                                                    ),
                                                                                    lt_token: Lt,
                                                                                    args: [
                                                                                        GenericArgument::Type(
                                                                                            Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: hydro_test,
                                                                                                                span: bytes(1229..1239),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: __staged,
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: cluster,
                                                                                                                span: bytes(1241..1248),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: map_reduce,
                                                                                                                span: bytes(1250..1260),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                        PathSep,
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: Worker,
                                                                                                                span: bytes(1262..1268),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    gt_token: Gt,
                                                                                },
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: from_raw,
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                paren_token: Paren,
                                                                args: [
                                                                    Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: id,
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                            Comma,
                                                            Expr::MethodCall {
                                                                attrs: [],
                                                                receiver: Expr::Call {
                                                                    attrs: [],
                                                                    func: Expr::Path {
                                                                        attrs: [],
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: hydro_lang,
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: runtime_support,
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: bincode,
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                                PathSep,
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: deserialize,
                                                                                    },
                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                        colon2_token: Some(
                                                                                            PathSep,
                                                                                        ),
                                                                                        lt_token: Lt,
                                                                                        args: [
                                                                                            GenericArgument::Type(
                                                                                                Type::Tuple {
                                                                                                    paren_token: Paren,
                                                                                                    elems: [
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: std,
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                    PathSep,
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: string,
                                                                                                                            span: bytes(1277..1283),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                    PathSep,
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: String,
                                                                                                                            span: bytes(1285..1291),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                        Comma,
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: i32,
                                                                                                                            span: bytes(1293..1296),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        gt_token: Gt,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    paren_token: Paren,
                                                                    args: [
                                                                        Expr::Reference {
                                                                            attrs: [],
                                                                            and_token: And,
                                                                            mutability: None,
                                                                            expr: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: b,
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                                dot_token: Dot,
                                                                method: Ident {
                                                                    sym: unwrap,
                                                                },
                                                                turbofish: None,
                                                                paren_token: Paren,
                                                                args: [],
                                                            },
                                                        ],
                                                    },
                                                    None,
                                                ),
                                            ],
                                        },
                                    },
                                },
                            ),
                        ),
                        input: Inspect {
                            f: DebugExpr(
                                Expr::Call {
                                    attrs: [],
                                    func: Expr::Path {
                                        attrs: [],
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: stageleft,
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: runtime_support,
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: fn1_borrow_type_hint,
                                                    },
                                                    arguments: PathArguments::AngleBracketed {
                                                        colon2_token: Some(
                                                            PathSep,
                                                        ),
                                                        lt_token: Lt,
                                                        args: [
                                                            GenericArgument::Type(
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: std,
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: string,
                                                                                            span: bytes(1118..1124),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: String,
                                                                                            span: bytes(1126..1132),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Comma,
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: i32,
                                                                                            span: bytes(1134..1137),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                            Comma,
                                                            GenericArgument::Type(
                                                                Type::Tuple {
                                                                    paren_token: Paren,
                                                                    elems: [],
                                                                },
                                                            ),
                                                        ],
                                                        gt_token: Gt,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    paren_token: Paren,
                                    args: [
                                        Expr::Block {
                                            attrs: [],
                                            label: None,
                                            block: Block {
                                                brace_token: Brace,
                                                stmts: [
                                                    Stmt::Item(
                                                        Item::Use {
                                                            attrs: [],
                                                            vis: Visibility::Inherited,
                                                            use_token: Use,
                                                            leading_colon: None,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: crate,
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: __staged,
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: __deps,
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Glob(
                                                                                        UseGlob {
                                                                                            star_token: Star,
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                    ),
                                                    Stmt::Item(
                                                        Item::Use {
                                                            attrs: [],
                                                            vis: Visibility::Inherited,
                                                            use_token: Use,
                                                            leading_colon: None,
                                                            tree: UseTree::Path(
                                                                UsePath {
                                                                    ident: Ident {
                                                                        sym: crate,
                                                                    },
                                                                    colon2_token: PathSep,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: __staged,
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: cluster,
                                                                                        span: bytes(1017..1024),
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: map_reduce,
                                                                                                span: bytes(1026..1036),
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Glob(
                                                                                                UseGlob {
                                                                                                    star_token: Star,
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            semi_token: Semi,
                                                        },
                                                    ),
                                                    Stmt::Expr(
                                                        Expr::Closure {
                                                            attrs: [],
                                                            lifetimes: None,
                                                            constness: None,
                                                            movability: None,
                                                            asyncness: None,
                                                            capture: None,
                                                            or1_token: Or,
                                                            inputs: [
                                                                Pat::Tuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: string,
                                                                                span: bytes(1040..1046),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        Comma,
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: count,
                                                                                span: bytes(1048..1053),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ],
                                                            or2_token: Or,
                                                            output: ReturnType::Default,
                                                            body: Expr::Macro {
                                                                attrs: [],
                                                                mac: Macro {
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: println,
                                                                                    span: bytes(1057..1064),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                    bang_token: Not,
                                                                    delimiter: MacroDelimiter::Paren(
                                                                        Paren,
                                                                    ),
                                                                    tokens: TokenStream [
                                                                        Literal {
                                                                            lit: "partition count: {} - {}",
                                                                            span: bytes(1067..1093),
                                                                        },
                                                                        Punct {
                                                                            char: ',',
                                                                            spacing: Alone,
                                                                            span: bytes(1093..1094),
                                                                        },
                                                                        Ident {
                                                                            sym: string,
                                                                            span: bytes(1095..1101),
                                                                        },
                                                                        Punct {
                                                                            char: ',',
                                                                            spacing: Alone,
                                                                            span: bytes(1101..1102),
                                                                        },
                                                                        Ident {
                                                                            sym: count,
                                                                            span: bytes(1103..1108),
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                        None,
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            ),
                            input: FoldKeyed {
                                init: DebugExpr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: stageleft,
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: runtime_support,
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: fn0_type_hint,
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: Some(
                                                                PathSep,
                                                            ),
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: i32,
                                                                                        span: bytes(904..907),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Block {
                                                attrs: [],
                                                label: None,
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Item(
                                                            Item::Use {
                                                                attrs: [],
                                                                vis: Visibility::Inherited,
                                                                use_token: Use,
                                                                leading_colon: None,
                                                                tree: UseTree::Path(
                                                                    UsePath {
                                                                        ident: Ident {
                                                                            sym: crate,
                                                                        },
                                                                        colon2_token: PathSep,
                                                                        tree: UseTree::Path(
                                                                            UsePath {
                                                                                ident: Ident {
                                                                                    sym: __staged,
                                                                                },
                                                                                colon2_token: PathSep,
                                                                                tree: UseTree::Path(
                                                                                    UsePath {
                                                                                        ident: Ident {
                                                                                            sym: __deps,
                                                                                        },
                                                                                        colon2_token: PathSep,
                                                                                        tree: UseTree::Glob(
                                                                                            UseGlob {
                                                                                                star_token: Star,
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                        ),
                                                        Stmt::Item(
                                                            Item::Use {
                                                                attrs: [],
                                                                vis: Visibility::Inherited,
                                                                use_token: Use,
                                                                leading_colon: None,
                                                                tree: UseTree::Path(
                                                                    UsePath {
                                                                        ident: Ident {
                                                                            sym: crate,
                                                                        },
                                                                        colon2_token: PathSep,
                                                                        tree: UseTree::Path(
                                                                            UsePath {
                                                                                ident: Ident {
                                                                                    sym: __staged,
                                                                                },
                                                                                colon2_token: PathSep,
                                                                                tree: UseTree::Path(
                                                                                    UsePath {
                                                                                        ident: Ident {
                                                                                            sym: cluster,
                                                                                            span: bytes(878..885),
                                                                                        },
                                                                                        colon2_token: PathSep,
                                                                                        tree: UseTree::Path(
                                                                                            UsePath {
                                                                                                ident: Ident {
                                                                                                    sym: map_reduce,
                                                                                                    span: bytes(887..897),
                                                                                                },
                                                                                                colon2_token: PathSep,
                                                                                                tree: UseTree::Glob(
                                                                                                    UseGlob {
                                                                                                        star_token: Star,
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Closure {
                                                                attrs: [],
                                                                lifetimes: None,
                                                                constness: None,
                                                                movability: None,
                                                                asyncness: None,
                                                                capture: None,
                                                                or1_token: Or,
                                                                inputs: [],
                                                                or2_token: Or,
                                                                output: ReturnType::Default,
                                                                body: Expr::Lit {
                                                                    attrs: [],
                                                                    lit: Lit::Int {
                                                                        token: 0,
                                                                    },
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                ),
                                acc: DebugExpr(
                                    Expr::Call {
                                        attrs: [],
                                        func: Expr::Path {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: stageleft,
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: runtime_support,
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: fn2_borrow_mut_type_hint,
                                                        },
                                                        arguments: PathArguments::AngleBracketed {
                                                            colon2_token: Some(
                                                                PathSep,
                                                            ),
                                                            lt_token: Lt,
                                                            args: [
                                                                GenericArgument::Type(
                                                                    Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: i32,
                                                                                        span: bytes(966..969),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Tuple {
                                                                        paren_token: Paren,
                                                                        elems: [],
                                                                    },
                                                                ),
                                                                Comma,
                                                                GenericArgument::Type(
                                                                    Type::Tuple {
                                                                        paren_token: Paren,
                                                                        elems: [],
                                                                    },
                                                                ),
                                                            ],
                                                            gt_token: Gt,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        paren_token: Paren,
                                        args: [
                                            Expr::Block {
                                                attrs: [],
                                                label: None,
                                                block: Block {
                                                    brace_token: Brace,
                                                    stmts: [
                                                        Stmt::Item(
                                                            Item::Use {
                                                                attrs: [],
                                                                vis: Visibility::Inherited,
                                                                use_token: Use,
                                                                leading_colon: None,
                                                                tree: UseTree::Path(
                                                                    UsePath {
                                                                        ident: Ident {
                                                                            sym: crate,
                                                                        },
                                                                        colon2_token: PathSep,
                                                                        tree: UseTree::Path(
                                                                            UsePath {
                                                                                ident: Ident {
                                                                                    sym: __staged,
                                                                                },
                                                                                colon2_token: PathSep,
                                                                                tree: UseTree::Path(
                                                                                    UsePath {
                                                                                        ident: Ident {
                                                                                            sym: __deps,
                                                                                        },
                                                                                        colon2_token: PathSep,
                                                                                        tree: UseTree::Glob(
                                                                                            UseGlob {
                                                                                                star_token: Star,
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                        ),
                                                        Stmt::Item(
                                                            Item::Use {
                                                                attrs: [],
                                                                vis: Visibility::Inherited,
                                                                use_token: Use,
                                                                leading_colon: None,
                                                                tree: UseTree::Path(
                                                                    UsePath {
                                                                        ident: Ident {
                                                                            sym: crate,
                                                                        },
                                                                        colon2_token: PathSep,
                                                                        tree: UseTree::Path(
                                                                            UsePath {
                                                                                ident: Ident {
                                                                                    sym: __staged,
                                                                                },
                                                                                colon2_token: PathSep,
                                                                                tree: UseTree::Path(
                                                                                    UsePath {
                                                                                        ident: Ident {
                                                                                            sym: cluster,
                                                                                            span: bytes(920..927),
                                                                                        },
                                                                                        colon2_token: PathSep,
                                                                                        tree: UseTree::Path(
                                                                                            UsePath {
                                                                                                ident: Ident {
                                                                                                    sym: map_reduce,
                                                                                                    span: bytes(929..939),
                                                                                                },
                                                                                                colon2_token: PathSep,
                                                                                                tree: UseTree::Glob(
                                                                                                    UseGlob {
                                                                                                        star_token: Star,
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                semi_token: Semi,
                                                            },
                                                        ),
                                                        Stmt::Expr(
                                                            Expr::Closure {
                                                                attrs: [],
                                                                lifetimes: None,
                                                                constness: None,
                                                                movability: None,
                                                                asyncness: None,
                                                                capture: None,
                                                                or1_token: Or,
                                                                inputs: [
                                                                    Pat::Ident {
                                                                        attrs: [],
                                                                        by_ref: None,
                                                                        mutability: None,
                                                                        ident: Ident {
                                                                            sym: count,
                                                                            span: bytes(942..947),
                                                                        },
                                                                        subpat: None,
                                                                    },
                                                                    Comma,
                                                                    Pat::Wild {
                                                                        attrs: [],
                                                                        underscore_token: Underscore,
                                                                    },
                                                                ],
                                                                or2_token: Or,
                                                                output: ReturnType::Default,
                                                                body: Expr::Binary {
                                                                    attrs: [],
                                                                    left: Expr::Unary {
                                                                        attrs: [],
                                                                        op: UnOp::Deref(
                                                                            Star,
                                                                        ),
                                                                        expr: Expr::Path {
                                                                            attrs: [],
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: count,
                                                                                            span: bytes(955..960),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    },
                                                                    op: BinOp::AddAssign(
                                                                        PlusEq,
                                                                    ),
                                                                    right: Expr::Lit {
                                                                        attrs: [],
                                                                        lit: Lit::Int {
                                                                            token: 1,
                                                                        },
                                                                    },
                                                                },
                                                            },
                                                            None,
                                                        ),
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                ),
                                input: Map {
                                    f: DebugExpr(
                                        Expr::Call {
                                            attrs: [],
                                            func: Expr::Path {
                                                attrs: [],
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: stageleft,
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: runtime_support,
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: fn1_type_hint,
                                                            },
                                                            arguments: PathArguments::AngleBracketed {
                                                                colon2_token: Some(
                                                                    PathSep,
                                                                ),
                                                                lt_token: Lt,
                                                                args: [
                                                                    GenericArgument::Type(
                                                                        Type::Path {
                                                                            qself: None,
                                                                            path: Path {
                                                                                leading_colon: None,
                                                                                segments: [
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: std,
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: string,
                                                                                            span: bytes(767..773),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                    PathSep,
                                                                                    PathSegment {
                                                                                        ident: Ident {
                                                                                            sym: String,
                                                                                            span: bytes(775..781),
                                                                                        },
                                                                                        arguments: PathArguments::None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ),
                                                                    Comma,
                                                                    GenericArgument::Type(
                                                                        Type::Tuple {
                                                                            paren_token: Paren,
                                                                            elems: [
                                                                                Type::Path {
                                                                                    qself: None,
                                                                                    path: Path {
                                                                                        leading_colon: None,
                                                                                        segments: [
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: std,
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                            PathSep,
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: string,
                                                                                                    span: bytes(790..796),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                            PathSep,
                                                                                            PathSegment {
                                                                                                ident: Ident {
                                                                                                    sym: String,
                                                                                                    span: bytes(798..804),
                                                                                                },
                                                                                                arguments: PathArguments::None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                Comma,
                                                                                Type::Tuple {
                                                                                    paren_token: Paren,
                                                                                    elems: [],
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                gt_token: Gt,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            paren_token: Paren,
                                            args: [
                                                Expr::Block {
                                                    attrs: [],
                                                    label: None,
                                                    block: Block {
                                                        brace_token: Brace,
                                                        stmts: [
                                                            Stmt::Item(
                                                                Item::Use {
                                                                    attrs: [],
                                                                    vis: Visibility::Inherited,
                                                                    use_token: Use,
                                                                    leading_colon: None,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: crate,
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: __staged,
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: __deps,
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Glob(
                                                                                                UseGlob {
                                                                                                    star_token: Star,
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                            ),
                                                            Stmt::Item(
                                                                Item::Use {
                                                                    attrs: [],
                                                                    vis: Visibility::Inherited,
                                                                    use_token: Use,
                                                                    leading_colon: None,
                                                                    tree: UseTree::Path(
                                                                        UsePath {
                                                                            ident: Ident {
                                                                                sym: crate,
                                                                            },
                                                                            colon2_token: PathSep,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: __staged,
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: cluster,
                                                                                                span: bytes(716..723),
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Path(
                                                                                                UsePath {
                                                                                                    ident: Ident {
                                                                                                        sym: map_reduce,
                                                                                                        span: bytes(725..735),
                                                                                                    },
                                                                                                    colon2_token: PathSep,
                                                                                                    tree: UseTree::Glob(
                                                                                                        UseGlob {
                                                                                                            star_token: Star,
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    semi_token: Semi,
                                                                },
                                                            ),
                                                            Stmt::Expr(
                                                                Expr::Closure {
                                                                    attrs: [],
                                                                    lifetimes: None,
                                                                    constness: None,
                                                                    movability: None,
                                                                    asyncness: None,
                                                                    capture: None,
                                                                    or1_token: Or,
                                                                    inputs: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: string,
                                                                                span: bytes(738..744),
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                    or2_token: Or,
                                                                    output: ReturnType::Default,
                                                                    body: Expr::Tuple {
                                                                        attrs: [],
                                                                        paren_token: Paren,
                                                                        elems: [
                                                                            Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: string,
                                                                                                span: bytes(748..754),
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            Comma,
                                                                            Expr::Tuple {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                elems: [],
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                None,
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    ),
                                    input: Network {
                                        from_key: None,
                                        to_location: Cluster(
                                            1,
                                        ),
                                        to_key: None,
                                        serialize_fn: Some(
                                            DebugExpr(
                                                Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: Some(
                                                                PathSep,
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: hydro_lang,
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: runtime_support,
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: stageleft,
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: runtime_support,
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: fn1_type_hint,
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: Some(
                                                                            PathSep,
                                                                        ),
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Type(
                                                                                Type::Tuple {
                                                                                    paren_token: Paren,
                                                                                    elems: [
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: hydro_lang,
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: ClusterId,
                                                                                                        },
                                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                                            colon2_token: None,
                                                                                                            lt_token: Lt,
                                                                                                            args: [
                                                                                                                GenericArgument::Type(
                                                                                                                    Type::Infer {
                                                                                                                        underscore_token: Underscore,
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                            gt_token: Gt,
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        Comma,
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: std,
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: string,
                                                                                                            span: bytes(645..651),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: String,
                                                                                                            span: bytes(653..659),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            Comma,
                                                                            GenericArgument::Type(
                                                                                Type::Infer {
                                                                                    underscore_token: Underscore,
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Closure {
                                                            attrs: [],
                                                            lifetimes: None,
                                                            constness: None,
                                                            movability: None,
                                                            asyncness: None,
                                                            capture: None,
                                                            or1_token: Or,
                                                            inputs: [
                                                                Pat::Tuple {
                                                                    attrs: [],
                                                                    paren_token: Paren,
                                                                    elems: [
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: id,
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        Comma,
                                                                        Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: data,
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ],
                                                            or2_token: Or,
                                                            output: ReturnType::Default,
                                                            body: Expr::Block {
                                                                attrs: [],
                                                                label: None,
                                                                block: Block {
                                                                    brace_token: Brace,
                                                                    stmts: [
                                                                        Stmt::Expr(
                                                                            Expr::Tuple {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                elems: [
                                                                                    Expr::Field {
                                                                                        attrs: [],
                                                                                        base: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: id,
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        member: Member::Named(
                                                                                            Ident {
                                                                                                sym: raw_id,
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                    Comma,
                                                                                    Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::MethodCall {
                                                                                            attrs: [],
                                                                                            receiver: Expr::Call {
                                                                                                attrs: [],
                                                                                                func: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: hydro_lang,
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                            PathSep,
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: runtime_support,
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                            PathSep,
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: bincode,
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                            PathSep,
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: serialize,
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                paren_token: Paren,
                                                                                                args: [
                                                                                                    Expr::Reference {
                                                                                                        attrs: [],
                                                                                                        and_token: And,
                                                                                                        mutability: None,
                                                                                                        expr: Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: data,
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                            dot_token: Dot,
                                                                                            method: Ident {
                                                                                                sym: unwrap,
                                                                                            },
                                                                                            turbofish: None,
                                                                                            paren_token: Paren,
                                                                                            args: [],
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: into,
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                ],
                                                                            },
                                                                            None,
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        },
                                                    ],
                                                },
                                            ),
                                        ),
                                        instantiate_fn: <network instantiate>,
                                        deserialize_fn: Some(
                                            DebugExpr(
                                                Expr::Closure {
                                                    attrs: [],
                                                    lifetimes: None,
                                                    constness: None,
                                                    movability: None,
                                                    asyncness: None,
                                                    capture: None,
                                                    or1_token: Or,
                                                    inputs: [
                                                        Pat::Ident {
                                                            attrs: [],
                                                            by_ref: None,
                                                            mutability: None,
                                                            ident: Ident {
                                                                sym: res,
                                                            },
                                                            subpat: None,
                                                        },
                                                    ],
                                                    or2_token: Or,
                                                    output: ReturnType::Default,
                                                    body: Expr::Block {
                                                        attrs: [],
                                                        label: None,
                                                        block: Block {
                                                            brace_token: Brace,
                                                            stmts: [
                                                                Stmt::Expr(
                                                                    Expr::MethodCall {
                                                                        attrs: [],
                                                                        receiver: Expr::Call {
                                                                            attrs: [],
                                                                            func: Expr::Path {
                                                                                attrs: [],
                                                                                qself: None,
                                                                                path: Path {
                                                                                    leading_colon: None,
                                                                                    segments: [
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: hydro_lang,
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: runtime_support,
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: bincode,
                                                                                            },
                                                                                            arguments: PathArguments::None,
                                                                                        },
                                                                                        PathSep,
                                                                                        PathSegment {
                                                                                            ident: Ident {
                                                                                                sym: deserialize,
                                                                                            },
                                                                                            arguments: PathArguments::AngleBracketed {
                                                                                                colon2_token: Some(
                                                                                                    PathSep,
                                                                                                ),
                                                                                                lt_token: Lt,
                                                                                                args: [
                                                                                                    GenericArgument::Type(
                                                                                                        Type::Path {
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: std,
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                    PathSep,
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: string,
                                                                                                                            span: bytes(667..673),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                    PathSep,
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: String,
                                                                                                                            span: bytes(675..681),
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                gt_token: Gt,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                            paren_token: Paren,
                                                                            args: [
                                                                                Expr::Reference {
                                                                                    attrs: [],
                                                                                    and_token: And,
                                                                                    mutability: None,
                                                                                    expr: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: res,
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: unwrap,
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                        dot_token: Dot,
                                                                        method: Ident {
                                                                            sym: unwrap,
                                                                        },
                                                                        turbofish: None,
                                                                        paren_token: Paren,
                                                                        args: [],
                                                                    },
                                                                    None,
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                },
                                            ),
                                        ),
                                        input: Map {
                                            f: DebugExpr(
                                                Expr::Call {
                                                    attrs: [],
                                                    func: Expr::Path {
                                                        attrs: [],
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: stageleft,
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: runtime_support,
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: fn1_type_hint,
                                                                    },
                                                                    arguments: PathArguments::AngleBracketed {
                                                                        colon2_token: Some(
                                                                            PathSep,
                                                                        ),
                                                                        lt_token: Lt,
                                                                        args: [
                                                                            GenericArgument::Type(
                                                                                Type::Tuple {
                                                                                    paren_token: Paren,
                                                                                    elems: [
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: usize,
                                                                                                            span: bytes(370..375),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        Comma,
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: std,
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: string,
                                                                                                            span: bytes(384..390),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: String,
                                                                                                            span: bytes(392..398),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            Comma,
                                                                            GenericArgument::Type(
                                                                                Type::Tuple {
                                                                                    paren_token: Paren,
                                                                                    elems: [
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: hydro_test,
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: __staged,
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: __deps,
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: hydro_lang,
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: location,
                                                                                                            span: bytes(413..421),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: cluster,
                                                                                                            span: bytes(423..430),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: cluster_id,
                                                                                                            span: bytes(432..442),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: ClusterId,
                                                                                                            span: bytes(444..453),
                                                                                                        },
                                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                                            colon2_token: None,
                                                                                                            lt_token: Lt,
                                                                                                            args: [
                                                                                                                GenericArgument::Type(
                                                                                                                    Type::Path {
                                                                                                                        qself: None,
                                                                                                                        path: Path {
                                                                                                                            leading_colon: None,
                                                                                                                            segments: [
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: hydro_test,
                                                                                                                                        span: bytes(454..464),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                                PathSep,
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: __staged,
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                                PathSep,
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: cluster,
                                                                                                                                        span: bytes(466..473),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                                PathSep,
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: map_reduce,
                                                                                                                                        span: bytes(475..485),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                                PathSep,
                                                                                                                                PathSegment {
                                                                                                                                    ident: Ident {
                                                                                                                                        sym: Worker,
                                                                                                                                        span: bytes(487..493),
                                                                                                                                    },
                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                            gt_token: Gt,
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        Comma,
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: std,
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: string,
                                                                                                            span: bytes(503..509),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: String,
                                                                                                            span: bytes(511..517),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                        gt_token: Gt,
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    paren_token: Paren,
                                                    args: [
                                                        Expr::Block {
                                                            attrs: [],
                                                            label: None,
                                                            block: Block {
                                                                brace_token: Brace,
                                                                stmts: [
                                                                    Stmt::Item(
                                                                        Item::Use {
                                                                            attrs: [],
                                                                            vis: Visibility::Inherited,
                                                                            use_token: Use,
                                                                            leading_colon: None,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: hydro_lang,
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: __staged,
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Path(
                                                                                                UsePath {
                                                                                                    ident: Ident {
                                                                                                        sym: __deps,
                                                                                                    },
                                                                                                    colon2_token: PathSep,
                                                                                                    tree: UseTree::Glob(
                                                                                                        UseGlob {
                                                                                                            star_token: Star,
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                    ),
                                                                    Stmt::Item(
                                                                        Item::Use {
                                                                            attrs: [],
                                                                            vis: Visibility::Inherited,
                                                                            use_token: Use,
                                                                            leading_colon: None,
                                                                            tree: UseTree::Path(
                                                                                UsePath {
                                                                                    ident: Ident {
                                                                                        sym: hydro_lang,
                                                                                    },
                                                                                    colon2_token: PathSep,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: __staged,
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Path(
                                                                                                UsePath {
                                                                                                    ident: Ident {
                                                                                                        sym: stream,
                                                                                                        span: bytes(314..320),
                                                                                                    },
                                                                                                    colon2_token: PathSep,
                                                                                                    tree: UseTree::Glob(
                                                                                                        UseGlob {
                                                                                                            star_token: Star,
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            semi_token: Semi,
                                                                        },
                                                                    ),
                                                                    Stmt::Local {
                                                                        attrs: [],
                                                                        let_token: Let,
                                                                        pat: Pat::Ident {
                                                                            attrs: [],
                                                                            by_ref: None,
                                                                            mutability: None,
                                                                            ident: Ident {
                                                                                sym: ids__free,
                                                                            },
                                                                            subpat: None,
                                                                        },
                                                                        init: Some(
                                                                            LocalInit {
                                                                                eq_token: Eq,
                                                                                expr: Expr::Unsafe {
                                                                                    attrs: [],
                                                                                    unsafe_token: Unsafe,
                                                                                    block: Block {
                                                                                        brace_token: Brace,
                                                                                        stmts: [
                                                                                            Stmt::Expr(
                                                                                                Expr::Call {
                                                                                                    attrs: [],
                                                                                                    func: Expr::Path {
                                                                                                        attrs: [],
                                                                                                        qself: None,
                                                                                                        path: Path {
                                                                                                            leading_colon: Some(
                                                                                                                PathSep,
                                                                                                            ),
                                                                                                            segments: [
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: std,
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: mem,
                                                                                                                    },
                                                                                                                    arguments: PathArguments::None,
                                                                                                                },
                                                                                                                PathSep,
                                                                                                                PathSegment {
                                                                                                                    ident: Ident {
                                                                                                                        sym: transmute,
                                                                                                                    },
                                                                                                                    arguments: PathArguments::AngleBracketed {
                                                                                                                        colon2_token: Some(
                                                                                                                            PathSep,
                                                                                                                        ),
                                                                                                                        lt_token: Lt,
                                                                                                                        args: [
                                                                                                                            GenericArgument::Type(
                                                                                                                                Type::Infer {
                                                                                                                                    underscore_token: Underscore,
                                                                                                                                },
                                                                                                                            ),
                                                                                                                            Comma,
                                                                                                                            GenericArgument::Type(
                                                                                                                                Type::Reference {
                                                                                                                                    and_token: And,
                                                                                                                                    lifetime: None,
                                                                                                                                    mutability: None,
                                                                                                                                    elem: Type::Slice {
                                                                                                                                        bracket_token: Bracket,
                                                                                                                                        elem: Type::Path {
                                                                                                                                            qself: None,
                                                                                                                                            path: Path {
                                                                                                                                                leading_colon: None,
                                                                                                                                                segments: [
                                                                                                                                                    PathSegment {
                                                                                                                                                        ident: Ident {
                                                                                                                                                            sym: hydro_lang,
                                                                                                                                                        },
                                                                                                                                                        arguments: PathArguments::None,
                                                                                                                                                    },
                                                                                                                                                    PathSep,
                                                                                                                                                    PathSegment {
                                                                                                                                                        ident: Ident {
                                                                                                                                                            sym: ClusterId,
                                                                                                                                                        },
                                                                                                                                                        arguments: PathArguments::AngleBracketed {
                                                                                                                                                            colon2_token: None,
                                                                                                                                                            lt_token: Lt,
                                                                                                                                                            args: [
                                                                                                                                                                GenericArgument::Type(
                                                                                                                                                                    Type::Path {
                                                                                                                                                                        qself: None,
                                                                                                                                                                        path: Path {
                                                                                                                                                                            leading_colon: None,
                                                                                                                                                                            segments: [
                                                                                                                                                                                PathSegment {
                                                                                                                                                                                    ident: Ident {
                                                                                                                                                                                        sym: hydro_test,
                                                                                                                                                                                        span: bytes(262..272),
                                                                                                                                                                                    },
                                                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                                                },
                                                                                                                                                                                PathSep,
                                                                                                                                                                                PathSegment {
                                                                                                                                                                                    ident: Ident {
                                                                                                                                                                                        sym: __staged,
                                                                                                                                                                                    },
                                                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                                                },
                                                                                                                                                                                PathSep,
                                                                                                                                                                                PathSegment {
                                                                                                                                                                                    ident: Ident {
                                                                                                                                                                                        sym: cluster,
                                                                                                                                                                                        span: bytes(274..281),
                                                                                                                                                                                    },
                                                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                                                },
                                                                                                                                                                                PathSep,
                                                                                                                                                                                PathSegment {
                                                                                                                                                                                    ident: Ident {
                                                                                                                                                                                        sym: map_reduce,
                                                                                                                                                                                        span: bytes(283..293),
                                                                                                                                                                                    },
                                                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                                                },
                                                                                                                                                                                PathSep,
                                                                                                                                                                                PathSegment {
                                                                                                                                                                                    ident: Ident {
                                                                                                                                                                                        sym: Worker,
                                                                                                                                                                                        span: bytes(295..301),
                                                                                                                                                                                    },
                                                                                                                                                                                    arguments: PathArguments::None,
                                                                                                                                                                                },
                                                                                                                                                                            ],
                                                                                                                                                                        },
                                                                                                                                                                    },
                                                                                                                                                                ),
                                                                                                                                                            ],
                                                                                                                                                            gt_token: Gt,
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                ],
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        ],
                                                                                                                        gt_token: Gt,
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    paren_token: Paren,
                                                                                                    args: [
                                                                                                        Expr::Path {
                                                                                                            attrs: [],
                                                                                                            qself: None,
                                                                                                            path: Path {
                                                                                                                leading_colon: None,
                                                                                                                segments: [
                                                                                                                    PathSegment {
                                                                                                                        ident: Ident {
                                                                                                                            sym: __hydro_lang_cluster_ids_1,
                                                                                                                        },
                                                                                                                        arguments: PathArguments::None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                                None,
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                diverge: None,
                                                                            },
                                                                        ),
                                                                        semi_token: Semi,
                                                                    },
                                                                    Stmt::Expr(
                                                                        Expr::Closure {
                                                                            attrs: [],
                                                                            lifetimes: None,
                                                                            constness: None,
                                                                            movability: None,
                                                                            asyncness: None,
                                                                            capture: None,
                                                                            or1_token: Or,
                                                                            inputs: [
                                                                                Pat::Tuple {
                                                                                    attrs: [],
                                                                                    paren_token: Paren,
                                                                                    elems: [
                                                                                        Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: None,
                                                                                            ident: Ident {
                                                                                                sym: i,
                                                                                                span: bytes(324..325),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                        Comma,
                                                                                        Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: None,
                                                                                            ident: Ident {
                                                                                                sym: w,
                                                                                                span: bytes(327..328),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ],
                                                                            or2_token: Or,
                                                                            output: ReturnType::Default,
                                                                            body: Expr::Tuple {
                                                                                attrs: [],
                                                                                paren_token: Paren,
                                                                                elems: [
                                                                                    Expr::Index {
                                                                                        attrs: [],
                                                                                        expr: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: ids__free,
                                                                                                            span: bytes(333..342),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        bracket_token: Bracket,
                                                                                        index: Expr::Binary {
                                                                                            attrs: [],
                                                                                            left: Expr::Path {
                                                                                                attrs: [],
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: i,
                                                                                                                span: bytes(344..345),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            op: BinOp::Rem(
                                                                                                Percent,
                                                                                            ),
                                                                                            right: Expr::MethodCall {
                                                                                                attrs: [],
                                                                                                receiver: Expr::Path {
                                                                                                    attrs: [],
                                                                                                    qself: None,
                                                                                                    path: Path {
                                                                                                        leading_colon: None,
                                                                                                        segments: [
                                                                                                            PathSegment {
                                                                                                                ident: Ident {
                                                                                                                    sym: ids__free,
                                                                                                                    span: bytes(348..357),
                                                                                                                },
                                                                                                                arguments: PathArguments::None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                                dot_token: Dot,
                                                                                                method: Ident {
                                                                                                    sym: len,
                                                                                                    span: bytes(358..361),
                                                                                                },
                                                                                                turbofish: None,
                                                                                                paren_token: Paren,
                                                                                                args: [],
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    Comma,
                                                                                    Expr::Path {
                                                                                        attrs: [],
                                                                                        qself: None,
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: w,
                                                                                                        span: bytes(366..367),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        None,
                                                                    ),
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                            ),
                                            input: Enumerate {
                                                is_static: true,
                                                input: Map {
                                                    f: DebugExpr(
                                                        Expr::Call {
                                                            attrs: [],
                                                            func: Expr::Path {
                                                                attrs: [],
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: stageleft,
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: runtime_support,
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: fn1_type_hint,
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: Some(
                                                                                    PathSep,
                                                                                ),
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Reference {
                                                                                            and_token: And,
                                                                                            lifetime: None,
                                                                                            mutability: None,
                                                                                            elem: Type::Path {
                                                                                                qself: None,
                                                                                                path: Path {
                                                                                                    leading_colon: None,
                                                                                                    segments: [
                                                                                                        PathSegment {
                                                                                                            ident: Ident {
                                                                                                                sym: str,
                                                                                                                span: bytes(130..133),
                                                                                                            },
                                                                                                            arguments: PathArguments::None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                    Comma,
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: std,
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: string,
                                                                                                            span: bytes(141..147),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: String,
                                                                                                            span: bytes(149..155),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            paren_token: Paren,
                                                            args: [
                                                                Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Item(
                                                                                Item::Use {
                                                                                    attrs: [],
                                                                                    vis: Visibility::Inherited,
                                                                                    use_token: Use,
                                                                                    leading_colon: None,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: crate,
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Path(
                                                                                                UsePath {
                                                                                                    ident: Ident {
                                                                                                        sym: __staged,
                                                                                                    },
                                                                                                    colon2_token: PathSep,
                                                                                                    tree: UseTree::Path(
                                                                                                        UsePath {
                                                                                                            ident: Ident {
                                                                                                                sym: __deps,
                                                                                                            },
                                                                                                            colon2_token: PathSep,
                                                                                                            tree: UseTree::Glob(
                                                                                                                UseGlob {
                                                                                                                    star_token: Star,
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    semi_token: Semi,
                                                                                },
                                                                            ),
                                                                            Stmt::Item(
                                                                                Item::Use {
                                                                                    attrs: [],
                                                                                    vis: Visibility::Inherited,
                                                                                    use_token: Use,
                                                                                    leading_colon: None,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: crate,
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Path(
                                                                                                UsePath {
                                                                                                    ident: Ident {
                                                                                                        sym: __staged,
                                                                                                    },
                                                                                                    colon2_token: PathSep,
                                                                                                    tree: UseTree::Path(
                                                                                                        UsePath {
                                                                                                            ident: Ident {
                                                                                                                sym: cluster,
                                                                                                                span: bytes(89..96),
                                                                                                            },
                                                                                                            colon2_token: PathSep,
                                                                                                            tree: UseTree::Path(
                                                                                                                UsePath {
                                                                                                                    ident: Ident {
                                                                                                                        sym: map_reduce,
                                                                                                                        span: bytes(98..108),
                                                                                                                    },
                                                                                                                    colon2_token: PathSep,
                                                                                                                    tree: UseTree::Glob(
                                                                                                                        UseGlob {
                                                                                                                            star_token: Star,
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    semi_token: Semi,
                                                                                },
                                                                            ),
                                                                            Stmt::Expr(
                                                                                Expr::Closure {
                                                                                    attrs: [],
                                                                                    lifetimes: None,
                                                                                    constness: None,
                                                                                    movability: None,
                                                                                    asyncness: None,
                                                                                    capture: None,
                                                                                    or1_token: Or,
                                                                                    inputs: [
                                                                                        Pat::Ident {
                                                                                            attrs: [],
                                                                                            by_ref: None,
                                                                                            mutability: None,
                                                                                            ident: Ident {
                                                                                                sym: s,
                                                                                                span: bytes(111..112),
                                                                                            },
                                                                                            subpat: None,
                                                                                        },
                                                                                    ],
                                                                                    or2_token: Or,
                                                                                    output: ReturnType::Default,
                                                                                    body: Expr::MethodCall {
                                                                                        attrs: [],
                                                                                        receiver: Expr::Path {
                                                                                            attrs: [],
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: s,
                                                                                                            span: bytes(115..116),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        dot_token: Dot,
                                                                                        method: Ident {
                                                                                            sym: to_string,
                                                                                            span: bytes(117..126),
                                                                                        },
                                                                                        turbofish: None,
                                                                                        paren_token: Paren,
                                                                                        args: [],
                                                                                    },
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    input: Source {
                                                        source: Iter(
                                                            DebugExpr(
                                                                Expr::Block {
                                                                    attrs: [],
                                                                    label: None,
                                                                    block: Block {
                                                                        brace_token: Brace,
                                                                        stmts: [
                                                                            Stmt::Item(
                                                                                Item::Use {
                                                                                    attrs: [],
                                                                                    vis: Visibility::Inherited,
                                                                                    use_token: Use,
                                                                                    leading_colon: None,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: crate,
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Path(
                                                                                                UsePath {
                                                                                                    ident: Ident {
                                                                                                        sym: __staged,
                                                                                                    },
                                                                                                    colon2_token: PathSep,
                                                                                                    tree: UseTree::Path(
                                                                                                        UsePath {
                                                                                                            ident: Ident {
                                                                                                                sym: __deps,
                                                                                                            },
                                                                                                            colon2_token: PathSep,
                                                                                                            tree: UseTree::Glob(
                                                                                                                UseGlob {
                                                                                                                    star_token: Star,
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    semi_token: Semi,
                                                                                },
                                                                            ),
                                                                            Stmt::Item(
                                                                                Item::Use {
                                                                                    attrs: [],
                                                                                    vis: Visibility::Inherited,
                                                                                    use_token: Use,
                                                                                    leading_colon: None,
                                                                                    tree: UseTree::Path(
                                                                                        UsePath {
                                                                                            ident: Ident {
                                                                                                sym: crate,
                                                                                            },
                                                                                            colon2_token: PathSep,
                                                                                            tree: UseTree::Path(
                                                                                                UsePath {
                                                                                                    ident: Ident {
                                                                                                        sym: __staged,
                                                                                                    },
                                                                                                    colon2_token: PathSep,
                                                                                                    tree: UseTree::Path(
                                                                                                        UsePath {
                                                                                                            ident: Ident {
                                                                                                                sym: cluster,
                                                                                                                span: bytes(13..20),
                                                                                                            },
                                                                                                            colon2_token: PathSep,
                                                                                                            tree: UseTree::Path(
                                                                                                                UsePath {
                                                                                                                    ident: Ident {
                                                                                                                        sym: map_reduce,
                                                                                                                        span: bytes(22..32),
                                                                                                                    },
                                                                                                                    colon2_token: PathSep,
                                                                                                                    tree: UseTree::Glob(
                                                                                                                        UseGlob {
                                                                                                                            star_token: Star,
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    semi_token: Semi,
                                                                                },
                                                                            ),
                                                                            Stmt::Expr(
                                                                                Expr::Macro {
                                                                                    attrs: [],
                                                                                    mac: Macro {
                                                                                        path: Path {
                                                                                            leading_colon: None,
                                                                                            segments: [
                                                                                                PathSegment {
                                                                                                    ident: Ident {
                                                                                                        sym: vec,
                                                                                                        span: bytes(33..36),
                                                                                                    },
                                                                                                    arguments: PathArguments::None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        bang_token: Not,
                                                                                        delimiter: MacroDelimiter::Bracket(
                                                                                            Bracket,
                                                                                        ),
                                                                                        tokens: TokenStream [
                                                                                            Literal {
                                                                                                lit: "abc",
                                                                                                span: bytes(39..44),
                                                                                            },
                                                                                            Punct {
                                                                                                char: ',',
                                                                                                spacing: Alone,
                                                                                                span: bytes(44..45),
                                                                                            },
                                                                                            Literal {
                                                                                                lit: "abc",
                                                                                                span: bytes(46..51),
                                                                                            },
                                                                                            Punct {
                                                                                                char: ',',
                                                                                                spacing: Alone,
                                                                                                span: bytes(51..52),
                                                                                            },
                                                                                            Literal {
                                                                                                lit: "xyz",
                                                                                                span: bytes(53..58),
                                                                                            },
                                                                                            Punct {
                                                                                                char: ',',
                                                                                                spacing: Alone,
                                                                                                span: bytes(58..59),
                                                                                            },
                                                                                            Literal {
                                                                                                lit: "abc",
                                                                                                span: bytes(60..65),
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                None,
                                                                            ),
                                                                        ],
                                                                    },
                                                                },
                                                            ),
                                                        ),
                                                        location_kind: Process(
                                                            0,
                                                        ),
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Process(
                                                                0,
                                                            ),
                                                            output_type: Some(
                                                                & str,
                                                            ),
                                                            cardinality: None,
                                                            cpu_usage: None,
                                                            network_recv_cpu_usage: None,
                                                            id: None,
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Process(
                                                            0,
                                                        ),
                                                        output_type: Some(
                                                            std :: string :: String,
                                                        ),
                                                        cardinality: None,
                                                        cpu_usage: None,
                                                        network_recv_cpu_usage: None,
                                                        id: None,
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Process(
                                                        0,
                                                    ),
                                                    output_type: Some(
                                                        (usize , std :: string :: String),
                                                    ),
                                                    cardinality: None,
                                                    cpu_usage: None,
                                                    network_recv_cpu_usage: None,
                                                    id: None,
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Process(
                                                    0,
                                                ),
                                                output_type: Some(
                                                    (hydro_test :: __staged :: __deps :: hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , std :: string :: String),
                                                ),
                                                cardinality: None,
                                                cpu_usage: None,
                                                network_recv_cpu_usage: None,
                                                id: None,
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Cluster(
                                                1,
                                            ),
                                            output_type: Some(
                                                std :: string :: String,
                                            ),
                                            cardinality: None,
                                            cpu_usage: None,
                                            network_recv_cpu_usage: None,
                                            id: None,
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Cluster(
                                            1,
                                        ),
                                        output_type: Some(
                                            (std :: string :: String , ()),
                                        ),
                                        cardinality: None,
                                        cpu_usage: None,
                                        network_recv_cpu_usage: None,
                                        id: None,
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        0,
                                        Cluster(
                                            1,
                                        ),
                                    ),
                                    output_type: Some(
                                        (std :: string :: String , i32),
                                    ),
                                    cardinality: None,
                                    cpu_usage: None,
                                    network_recv_cpu_usage: None,
                                    id: None,
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    0,
                                    Cluster(
                                        1,
                                    ),
                                ),
                                output_type: Some(
                                    (std :: string :: String , i32),
                                ),
                                cardinality: None,
                                cpu_usage: None,
                                network_recv_cpu_usage: None,
                                id: None,
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Process(
                                0,
                            ),
                            output_type: Some(
                                (std :: string :: String , i32),
                            ),
                            cardinality: None,
                            cpu_usage: None,
                            network_recv_cpu_usage: None,
                            id: None,
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Process(
                            0,
                        ),
                        output_type: Some(
                            (std :: string :: String , i32),
                        ),
                        cardinality: None,
                        cpu_usage: None,
                        network_recv_cpu_usage: None,
                        id: None,
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        1,
                        Process(
                            0,
                        ),
                    ),
                    output_type: Some(
                        (std :: string :: String , i32),
                    ),
                    cardinality: None,
                    cpu_usage: None,
                    network_recv_cpu_usage: None,
                    id: None,
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    1,
                    Process(
                        0,
                    ),
                ),
                output_type: Some(
                    (std :: string :: String , i32),
                ),
                cardinality: None,
                cpu_usage: None,
                network_recv_cpu_usage: None,
                id: None,
            },
        },
        metadata: HydroIrMetadata {
            location_kind: Process(
                0,
            ),
            output_type: Some(
                (std :: string :: String , i32),
            ),
            cardinality: None,
            cpu_usage: None,
            network_recv_cpu_usage: None,
            id: None,
        },
    },
]
