---
source: hydro_test/src/cluster/map_reduce.rs
expression: built.ir()
---
[
    ForEach {
        f: stageleft :: runtime_support :: fn1_type_hint :: < (std :: string :: String , i32) , () > ({ use crate :: __staged :: __deps :: * ; use crate :: __staged :: cluster :: map_reduce :: * ; | (string , count) | println ! ("{}: {}" , string , count) }),
        input: ObserveNonDet {
            inner: YieldConcat {
                inner: Cast {
                    inner: Cast {
                        inner: Batch {
                            inner: ReduceKeyed {
                                f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < i32 , i32 , () > ({ use crate :: __staged :: __deps :: * ; use crate :: __staged :: cluster :: map_reduce :: * ; | total , count | * total += count }),
                                input: ObserveNonDet {
                                    inner: Cast {
                                        inner: Map {
                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , (std :: string :: String , i32)) , (std :: string :: String , i32) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_stream :: * ; | (_ , v) | v }),
                                            input: Cast {
                                                inner: Cast {
                                                    inner: Network {
                                                        serialize_fn: Some(
                                                            :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (std :: string :: String , i32) , _ > (| data | { hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into () }),
                                                        ),
                                                        instantiate_fn: <network instantiate>,
                                                        deserialize_fn: Some(
                                                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: location :: MemberId :: < hydro_test :: __staged :: cluster :: map_reduce :: Worker > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (std :: string :: String , i32) > (& b) . unwrap ()) },
                                                        ),
                                                        input: YieldConcat {
                                                            inner: Inspect {
                                                                f: stageleft :: runtime_support :: fn1_borrow_type_hint :: < (std :: string :: String , i32) , () > ({ use crate :: __staged :: __deps :: * ; use crate :: __staged :: cluster :: map_reduce :: * ; | (string , count) | println ! ("partition count: {} - {}" , string , count) }),
                                                                input: Cast {
                                                                    inner: Cast {
                                                                        inner: FoldKeyed {
                                                                            init: stageleft :: runtime_support :: fn0_type_hint :: < i32 > ({ use crate :: __staged :: __deps :: * ; use crate :: __staged :: cluster :: map_reduce :: * ; | | 0 }),
                                                                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < i32 , () , () > ({ use crate :: __staged :: __deps :: * ; use crate :: __staged :: cluster :: map_reduce :: * ; | count , _ | * count += 1 }),
                                                                            input: Batch {
                                                                                inner: Cast {
                                                                                    inner: Map {
                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < std :: string :: String , (std :: string :: String , ()) > ({ use crate :: __staged :: __deps :: * ; use crate :: __staged :: cluster :: map_reduce :: * ; | string | (string , ()) }),
                                                                                        input: Network {
                                                                                            serialize_fn: Some(
                                                                                                :: hydro_lang :: runtime_support :: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: MemberId < _ > , std :: string :: String) , _ > (| (id , data) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize (& data) . unwrap () . into ()) }),
                                                                                            ),
                                                                                            instantiate_fn: <network instantiate>,
                                                                                            deserialize_fn: Some(
                                                                                                | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < std :: string :: String > (& res . unwrap ()) . unwrap () },
                                                                                            ),
                                                                                            input: Cast {
                                                                                                inner: YieldConcat {
                                                                                                    inner: Map {
                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < ((usize , std :: string :: String) , std :: vec :: Vec < hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > >) , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , std :: string :: String) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | (data , members) | (members [data . 0 % members . len ()] , data . 1) }),
                                                                                                        input: CrossSingleton {
                                                                                                            left: Batch {
                                                                                                                inner: Enumerate {
                                                                                                                    input: Map {
                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < & str , std :: string :: String > ({ use crate :: __staged :: __deps :: * ; use crate :: __staged :: cluster :: map_reduce :: * ; | s | s . to_string () }),
                                                                                                                        input: Source {
                                                                                                                            source: Iter(
                                                                                                                                { use crate :: __staged :: __deps :: * ; use crate :: __staged :: cluster :: map_reduce :: * ; vec ! ["abc" , "abc" , "xyz" , "abc"] },
                                                                                                                            ),
                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                location_kind: Process(
                                                                                                                                    0,
                                                                                                                                ),
                                                                                                                                collection_kind: Stream {
                                                                                                                                    bound: Unbounded,
                                                                                                                                    order: TotalOrder,
                                                                                                                                    retry: ExactlyOnce,
                                                                                                                                    element_type: & str,
                                                                                                                                },
                                                                                                                            },
                                                                                                                        },
                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                            location_kind: Process(
                                                                                                                                0,
                                                                                                                            ),
                                                                                                                            collection_kind: Stream {
                                                                                                                                bound: Unbounded,
                                                                                                                                order: TotalOrder,
                                                                                                                                retry: ExactlyOnce,
                                                                                                                                element_type: std :: string :: String,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Process(
                                                                                                                            0,
                                                                                                                        ),
                                                                                                                        collection_kind: Stream {
                                                                                                                            bound: Unbounded,
                                                                                                                            order: TotalOrder,
                                                                                                                            retry: ExactlyOnce,
                                                                                                                            element_type: (usize , std :: string :: String),
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Tick(
                                                                                                                        0,
                                                                                                                        Process(
                                                                                                                            0,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                    collection_kind: Stream {
                                                                                                                        bound: Bounded,
                                                                                                                        order: TotalOrder,
                                                                                                                        retry: ExactlyOnce,
                                                                                                                        element_type: (usize , std :: string :: String),
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            right: Cast {
                                                                                                                inner: Fold {
                                                                                                                    init: stageleft :: runtime_support :: fn0_type_hint :: < std :: vec :: Vec < hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | | vec ! [] }),
                                                                                                                    acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < std :: vec :: Vec < hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: * ; | acc , v | { acc . push (v) ; } }),
                                                                                                                    input: ObserveNonDet {
                                                                                                                        inner: Map {
                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , ()) , hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; | (k , _) | k }),
                                                                                                                            input: Cast {
                                                                                                                                inner: Cast {
                                                                                                                                    inner: Batch {
                                                                                                                                        inner: FilterMap {
                                                                                                                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , bool) , core :: option :: Option < (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , ()) > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: keyed_singleton :: * ; let f__free = stageleft :: runtime_support :: fn1_type_hint :: < bool , core :: option :: Option < () > > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | v | if v { Some (()) } else { None } }) ; { let orig = f__free ; move | (k , v) | orig (v) . map (| o | (k , o)) } }),
                                                                                                                                            input: FoldKeyed {
                                                                                                                                                init: stageleft :: runtime_support :: fn0_type_hint :: < bool > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | | false }),
                                                                                                                                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < bool , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent , () > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: live_collections :: stream :: networking :: * ; | present , event | { match event { MembershipEvent :: Joined => * present = true , MembershipEvent :: Left => * present = false , } } }),
                                                                                                                                                input: Cast {
                                                                                                                                                    inner: Map {
                                                                                                                                                        f: stageleft :: runtime_support :: fn1_type_hint :: < & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent) > ({ use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; | id | (* id , MembershipEvent :: Joined) }),
                                                                                                                                                        input: Source {
                                                                                                                                                            source: Iter(
                                                                                                                                                                { use hydro_lang :: __staged :: __deps :: * ; use hydro_lang :: __staged :: location :: * ; let underlying_memberids__free = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: location :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker >] > (__hydro_lang_cluster_ids_1) } ; underlying_memberids__free },
                                                                                                                                                            ),
                                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                                location_kind: Process(
                                                                                                                                                                    0,
                                                                                                                                                                ),
                                                                                                                                                                collection_kind: Stream {
                                                                                                                                                                    bound: Unbounded,
                                                                                                                                                                    order: TotalOrder,
                                                                                                                                                                    retry: ExactlyOnce,
                                                                                                                                                                    element_type: & hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker >,
                                                                                                                                                                },
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                                            location_kind: Process(
                                                                                                                                                                0,
                                                                                                                                                            ),
                                                                                                                                                            collection_kind: Stream {
                                                                                                                                                                bound: Unbounded,
                                                                                                                                                                order: TotalOrder,
                                                                                                                                                                retry: ExactlyOnce,
                                                                                                                                                                element_type: (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent),
                                                                                                                                                            },
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                                        location_kind: Process(
                                                                                                                                                            0,
                                                                                                                                                        ),
                                                                                                                                                        collection_kind: KeyedStream {
                                                                                                                                                            bound: Unbounded,
                                                                                                                                                            value_order: TotalOrder,
                                                                                                                                                            value_retry: ExactlyOnce,
                                                                                                                                                            key_type: hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker >,
                                                                                                                                                            value_type: hydro_test :: __staged :: __deps :: hydro_lang :: location :: MembershipEvent,
                                                                                                                                                        },
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                                    location_kind: Process(
                                                                                                                                                        0,
                                                                                                                                                    ),
                                                                                                                                                    collection_kind: KeyedSingleton {
                                                                                                                                                        bound: Unbounded,
                                                                                                                                                        key_type: hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker >,
                                                                                                                                                        value_type: bool,
                                                                                                                                                    },
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                                location_kind: Process(
                                                                                                                                                    0,
                                                                                                                                                ),
                                                                                                                                                collection_kind: KeyedSingleton {
                                                                                                                                                    bound: Unbounded,
                                                                                                                                                    key_type: hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker >,
                                                                                                                                                    value_type: (),
                                                                                                                                                },
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                                            location_kind: Tick(
                                                                                                                                                0,
                                                                                                                                                Process(
                                                                                                                                                    0,
                                                                                                                                                ),
                                                                                                                                            ),
                                                                                                                                            collection_kind: KeyedSingleton {
                                                                                                                                                bound: Bounded,
                                                                                                                                                key_type: hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker >,
                                                                                                                                                value_type: (),
                                                                                                                                            },
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                                        location_kind: Tick(
                                                                                                                                            0,
                                                                                                                                            Process(
                                                                                                                                                0,
                                                                                                                                            ),
                                                                                                                                        ),
                                                                                                                                        collection_kind: KeyedStream {
                                                                                                                                            bound: Bounded,
                                                                                                                                            value_order: TotalOrder,
                                                                                                                                            value_retry: ExactlyOnce,
                                                                                                                                            key_type: hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker >,
                                                                                                                                            value_type: (),
                                                                                                                                        },
                                                                                                                                    },
                                                                                                                                },
                                                                                                                                metadata: HydroIrMetadata {
                                                                                                                                    location_kind: Tick(
                                                                                                                                        0,
                                                                                                                                        Process(
                                                                                                                                            0,
                                                                                                                                        ),
                                                                                                                                    ),
                                                                                                                                    collection_kind: Stream {
                                                                                                                                        bound: Bounded,
                                                                                                                                        order: NoOrder,
                                                                                                                                        retry: ExactlyOnce,
                                                                                                                                        element_type: (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , ()),
                                                                                                                                    },
                                                                                                                                },
                                                                                                                            },
                                                                                                                            metadata: HydroIrMetadata {
                                                                                                                                location_kind: Tick(
                                                                                                                                    0,
                                                                                                                                    Process(
                                                                                                                                        0,
                                                                                                                                    ),
                                                                                                                                ),
                                                                                                                                collection_kind: Stream {
                                                                                                                                    bound: Bounded,
                                                                                                                                    order: NoOrder,
                                                                                                                                    retry: ExactlyOnce,
                                                                                                                                    element_type: hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker >,
                                                                                                                                },
                                                                                                                            },
                                                                                                                        },
                                                                                                                        metadata: HydroIrMetadata {
                                                                                                                            location_kind: Tick(
                                                                                                                                0,
                                                                                                                                Process(
                                                                                                                                    0,
                                                                                                                                ),
                                                                                                                            ),
                                                                                                                            collection_kind: Stream {
                                                                                                                                bound: Bounded,
                                                                                                                                order: TotalOrder,
                                                                                                                                retry: ExactlyOnce,
                                                                                                                                element_type: hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker >,
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                    metadata: HydroIrMetadata {
                                                                                                                        location_kind: Tick(
                                                                                                                            0,
                                                                                                                            Process(
                                                                                                                                0,
                                                                                                                            ),
                                                                                                                        ),
                                                                                                                        collection_kind: Singleton {
                                                                                                                            bound: Bounded,
                                                                                                                            element_type: std :: vec :: Vec < hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > >,
                                                                                                                        },
                                                                                                                    },
                                                                                                                },
                                                                                                                metadata: HydroIrMetadata {
                                                                                                                    location_kind: Tick(
                                                                                                                        0,
                                                                                                                        Process(
                                                                                                                            0,
                                                                                                                        ),
                                                                                                                    ),
                                                                                                                    collection_kind: Optional {
                                                                                                                        bound: Bounded,
                                                                                                                        element_type: std :: vec :: Vec < hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > >,
                                                                                                                    },
                                                                                                                },
                                                                                                            },
                                                                                                            metadata: HydroIrMetadata {
                                                                                                                location_kind: Tick(
                                                                                                                    0,
                                                                                                                    Process(
                                                                                                                        0,
                                                                                                                    ),
                                                                                                                ),
                                                                                                                collection_kind: Stream {
                                                                                                                    bound: Bounded,
                                                                                                                    order: TotalOrder,
                                                                                                                    retry: ExactlyOnce,
                                                                                                                    element_type: ((usize , std :: string :: String) , std :: vec :: Vec < hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > >),
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                        metadata: HydroIrMetadata {
                                                                                                            location_kind: Tick(
                                                                                                                0,
                                                                                                                Process(
                                                                                                                    0,
                                                                                                                ),
                                                                                                            ),
                                                                                                            collection_kind: Stream {
                                                                                                                bound: Bounded,
                                                                                                                order: TotalOrder,
                                                                                                                retry: ExactlyOnce,
                                                                                                                element_type: (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , std :: string :: String),
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                    metadata: HydroIrMetadata {
                                                                                                        location_kind: Process(
                                                                                                            0,
                                                                                                        ),
                                                                                                        collection_kind: Stream {
                                                                                                            bound: Unbounded,
                                                                                                            order: TotalOrder,
                                                                                                            retry: ExactlyOnce,
                                                                                                            element_type: (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , std :: string :: String),
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                                metadata: HydroIrMetadata {
                                                                                                    location_kind: Process(
                                                                                                        0,
                                                                                                    ),
                                                                                                    collection_kind: KeyedStream {
                                                                                                        bound: Unbounded,
                                                                                                        value_order: TotalOrder,
                                                                                                        value_retry: ExactlyOnce,
                                                                                                        key_type: hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker >,
                                                                                                        value_type: std :: string :: String,
                                                                                                    },
                                                                                                },
                                                                                            },
                                                                                            metadata: HydroIrMetadata {
                                                                                                location_kind: Cluster(
                                                                                                    1,
                                                                                                ),
                                                                                                collection_kind: Stream {
                                                                                                    bound: Unbounded,
                                                                                                    order: TotalOrder,
                                                                                                    retry: ExactlyOnce,
                                                                                                    element_type: std :: string :: String,
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                        metadata: HydroIrMetadata {
                                                                                            location_kind: Cluster(
                                                                                                1,
                                                                                            ),
                                                                                            collection_kind: Stream {
                                                                                                bound: Unbounded,
                                                                                                order: TotalOrder,
                                                                                                retry: ExactlyOnce,
                                                                                                element_type: (std :: string :: String , ()),
                                                                                            },
                                                                                        },
                                                                                    },
                                                                                    metadata: HydroIrMetadata {
                                                                                        location_kind: Cluster(
                                                                                            1,
                                                                                        ),
                                                                                        collection_kind: KeyedStream {
                                                                                            bound: Unbounded,
                                                                                            value_order: TotalOrder,
                                                                                            value_retry: ExactlyOnce,
                                                                                            key_type: std :: string :: String,
                                                                                            value_type: (),
                                                                                        },
                                                                                    },
                                                                                },
                                                                                metadata: HydroIrMetadata {
                                                                                    location_kind: Tick(
                                                                                        1,
                                                                                        Cluster(
                                                                                            1,
                                                                                        ),
                                                                                    ),
                                                                                    collection_kind: KeyedStream {
                                                                                        bound: Bounded,
                                                                                        value_order: TotalOrder,
                                                                                        value_retry: ExactlyOnce,
                                                                                        key_type: std :: string :: String,
                                                                                        value_type: (),
                                                                                    },
                                                                                },
                                                                            },
                                                                            metadata: HydroIrMetadata {
                                                                                location_kind: Tick(
                                                                                    1,
                                                                                    Cluster(
                                                                                        1,
                                                                                    ),
                                                                                ),
                                                                                collection_kind: KeyedSingleton {
                                                                                    bound: Bounded,
                                                                                    key_type: std :: string :: String,
                                                                                    value_type: i32,
                                                                                },
                                                                            },
                                                                        },
                                                                        metadata: HydroIrMetadata {
                                                                            location_kind: Tick(
                                                                                1,
                                                                                Cluster(
                                                                                    1,
                                                                                ),
                                                                            ),
                                                                            collection_kind: KeyedStream {
                                                                                bound: Bounded,
                                                                                value_order: TotalOrder,
                                                                                value_retry: ExactlyOnce,
                                                                                key_type: std :: string :: String,
                                                                                value_type: i32,
                                                                            },
                                                                        },
                                                                    },
                                                                    metadata: HydroIrMetadata {
                                                                        location_kind: Tick(
                                                                            1,
                                                                            Cluster(
                                                                                1,
                                                                            ),
                                                                        ),
                                                                        collection_kind: Stream {
                                                                            bound: Bounded,
                                                                            order: NoOrder,
                                                                            retry: ExactlyOnce,
                                                                            element_type: (std :: string :: String , i32),
                                                                        },
                                                                    },
                                                                },
                                                                metadata: HydroIrMetadata {
                                                                    location_kind: Tick(
                                                                        1,
                                                                        Cluster(
                                                                            1,
                                                                        ),
                                                                    ),
                                                                    collection_kind: Stream {
                                                                        bound: Bounded,
                                                                        order: NoOrder,
                                                                        retry: ExactlyOnce,
                                                                        element_type: (std :: string :: String , i32),
                                                                    },
                                                                },
                                                            },
                                                            metadata: HydroIrMetadata {
                                                                location_kind: Cluster(
                                                                    1,
                                                                ),
                                                                collection_kind: Stream {
                                                                    bound: Unbounded,
                                                                    order: NoOrder,
                                                                    retry: ExactlyOnce,
                                                                    element_type: (std :: string :: String , i32),
                                                                },
                                                            },
                                                        },
                                                        metadata: HydroIrMetadata {
                                                            location_kind: Process(
                                                                0,
                                                            ),
                                                            collection_kind: Stream {
                                                                bound: Unbounded,
                                                                order: NoOrder,
                                                                retry: ExactlyOnce,
                                                                element_type: (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , (std :: string :: String , i32)),
                                                            },
                                                        },
                                                    },
                                                    metadata: HydroIrMetadata {
                                                        location_kind: Process(
                                                            0,
                                                        ),
                                                        collection_kind: KeyedStream {
                                                            bound: Unbounded,
                                                            value_order: NoOrder,
                                                            value_retry: ExactlyOnce,
                                                            key_type: hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker >,
                                                            value_type: (std :: string :: String , i32),
                                                        },
                                                    },
                                                },
                                                metadata: HydroIrMetadata {
                                                    location_kind: Process(
                                                        0,
                                                    ),
                                                    collection_kind: Stream {
                                                        bound: Unbounded,
                                                        order: NoOrder,
                                                        retry: ExactlyOnce,
                                                        element_type: (hydro_test :: __staged :: __deps :: hydro_lang :: location :: member_id :: MemberId < hydro_test :: __staged :: cluster :: map_reduce :: Worker > , (std :: string :: String , i32)),
                                                    },
                                                },
                                            },
                                            metadata: HydroIrMetadata {
                                                location_kind: Process(
                                                    0,
                                                ),
                                                collection_kind: Stream {
                                                    bound: Unbounded,
                                                    order: NoOrder,
                                                    retry: ExactlyOnce,
                                                    element_type: (std :: string :: String , i32),
                                                },
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Process(
                                                0,
                                            ),
                                            collection_kind: KeyedStream {
                                                bound: Unbounded,
                                                value_order: NoOrder,
                                                value_retry: ExactlyOnce,
                                                key_type: std :: string :: String,
                                                value_type: i32,
                                            },
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Process(
                                            0,
                                        ),
                                        collection_kind: KeyedStream {
                                            bound: Unbounded,
                                            value_order: TotalOrder,
                                            value_retry: ExactlyOnce,
                                            key_type: std :: string :: String,
                                            value_type: i32,
                                        },
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Process(
                                        0,
                                    ),
                                    collection_kind: KeyedSingleton {
                                        bound: Unbounded,
                                        key_type: std :: string :: String,
                                        value_type: i32,
                                    },
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    2,
                                    Process(
                                        0,
                                    ),
                                ),
                                collection_kind: KeyedSingleton {
                                    bound: Bounded,
                                    key_type: std :: string :: String,
                                    value_type: i32,
                                },
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                2,
                                Process(
                                    0,
                                ),
                            ),
                            collection_kind: KeyedStream {
                                bound: Bounded,
                                value_order: TotalOrder,
                                value_retry: ExactlyOnce,
                                key_type: std :: string :: String,
                                value_type: i32,
                            },
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            2,
                            Process(
                                0,
                            ),
                        ),
                        collection_kind: Stream {
                            bound: Bounded,
                            order: NoOrder,
                            retry: ExactlyOnce,
                            element_type: (std :: string :: String , i32),
                        },
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Process(
                        0,
                    ),
                    collection_kind: Stream {
                        bound: Unbounded,
                        order: NoOrder,
                        retry: ExactlyOnce,
                        element_type: (std :: string :: String , i32),
                    },
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Process(
                    0,
                ),
                collection_kind: Stream {
                    bound: Unbounded,
                    order: TotalOrder,
                    retry: ExactlyOnce,
                    element_type: (std :: string :: String , i32),
                },
            },
        },
        op_metadata: HydroIrOpMetadata,
    },
]
