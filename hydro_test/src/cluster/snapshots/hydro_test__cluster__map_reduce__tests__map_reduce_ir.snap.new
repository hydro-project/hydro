---
source: hydro_test/src/cluster/map_reduce.rs
assertion_line: 55
expression: built.ir()
---
[
    ForEach {
        f: stageleft :: runtime_support :: fn1_type_hint :: < (std :: string :: String , i32) , () > ({ use crate :: __staged :: cluster :: map_reduce :: * ; | (string , count) | println ! ("{}: {}" , string , count) }),
        input: ReduceKeyed {
            f: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < i32 , i32 , () > ({ use crate :: __staged :: cluster :: map_reduce :: * ; | total , count | * total += count }),
            input: Persist {
                inner: Map {
                    f: stageleft :: runtime_support :: fn1_type_hint :: < (hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: cluster :: map_reduce :: Worker > , (std :: string :: String , i32)) , (std :: string :: String , i32) > ({ use hydro_lang :: __staged :: stream :: * ; | (_ , b) | b }),
                    input: Network {
                        from_location: Cluster(
                            1,
                        ),
                        from_key: None,
                        to_location: Process(
                            0,
                        ),
                        to_key: None,
                        serialize_fn: Some(
                            | data | { hydro_lang :: runtime_support :: bincode :: serialize :: < (std :: string :: String , i32) > (& data) . unwrap () . into () },
                        ),
                        instantiate_fn: <network instantiate>,
                        deserialize_fn: Some(
                            | res | { let (id , b) = res . unwrap () ; (hydro_lang :: ClusterId :: < hydro_test :: cluster :: map_reduce :: Worker > :: from_raw (id) , hydro_lang :: runtime_support :: bincode :: deserialize :: < (std :: string :: String , i32) > (& b) . unwrap ()) },
                        ),
                        input: Inspect {
                            f: stageleft :: runtime_support :: fn1_borrow_type_hint :: < (std :: string :: String , i32) , () > ({ use crate :: __staged :: cluster :: map_reduce :: * ; | (string , count) | println ! ("partition count: {} - {}" , string , count) }),
                            input: FoldKeyed {
                                init: stageleft :: runtime_support :: fn0_type_hint :: < i32 > ({ use crate :: __staged :: cluster :: map_reduce :: * ; | | 0 }),
                                acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < i32 , () , () > ({ use crate :: __staged :: cluster :: map_reduce :: * ; | count , _ | * count += 1 }),
                                input: Map {
                                    f: stageleft :: runtime_support :: fn1_type_hint :: < std :: string :: String , (std :: string :: String , ()) > ({ use crate :: __staged :: cluster :: map_reduce :: * ; | string | (string , ()) }),
                                    input: Network {
                                        from_location: Process(
                                            0,
                                        ),
                                        from_key: None,
                                        to_location: Cluster(
                                            1,
                                        ),
                                        to_key: None,
                                        serialize_fn: Some(
                                            | (id , data) : (hydro_lang :: ClusterId < _ > , std :: string :: String) | { (id . raw_id , hydro_lang :: runtime_support :: bincode :: serialize :: < std :: string :: String > (& data) . unwrap () . into ()) },
                                        ),
                                        instantiate_fn: <network instantiate>,
                                        deserialize_fn: Some(
                                            | res | { hydro_lang :: runtime_support :: bincode :: deserialize :: < std :: string :: String > (& res . unwrap ()) . unwrap () },
                                        ),
                                        input: Map {
                                            f: stageleft :: runtime_support :: fn1_type_hint :: < (usize , std :: string :: String) , (hydro_lang :: location :: cluster :: cluster_id :: ClusterId < hydro_test :: cluster :: map_reduce :: Worker > , std :: string :: String) > ({ use hydro_lang :: __staged :: stream :: * ; let ids__free = unsafe { :: std :: mem :: transmute :: < _ , & [hydro_lang :: ClusterId < hydro_test :: cluster :: map_reduce :: Worker >] > (__hydro_lang_cluster_ids_1) } ; | (i , w) | (ids__free [i % ids__free . len ()] , w) }),
                                            input: Enumerate {
                                                is_static: true,
                                                input: Map {
                                                    f: stageleft :: runtime_support :: fn1_type_hint :: < & str , std :: string :: String > ({ use crate :: __staged :: cluster :: map_reduce :: * ; | s | s . to_string () }),
                                                    input: Source {
                                                        source: Iter(
                                                            { use crate :: __staged :: cluster :: map_reduce :: * ; vec ! ["abc" , "abc" , "xyz" , "abc"] },
                                                        ),
                                                        location_kind: Process(
                                                            0,
                                                        ),
                                                        metadata: HydroNodeMetadata {
                                                            id: Some(
                                                                0,
                                                            ),
                                                            location_kind: Process(
                                                                0,
                                                            ),
                                                            output_type: Some(
                                                                Type::Reference {
                                                                    and_token: And,
                                                                    lifetime: None,
                                                                    mutability: None,
                                                                    elem: Type::Path {
                                                                        qself: None,
                                                                        path: Path {
                                                                            leading_colon: None,
                                                                            segments: [
                                                                                PathSegment {
                                                                                    ident: Ident {
                                                                                        sym: str,
                                                                                        span: bytes(58..61),
                                                                                    },
                                                                                    arguments: PathArguments::None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                    },
                                                    metadata: HydroNodeMetadata {
                                                        id: Some(
                                                            2,
                                                        ),
                                                        location_kind: Process(
                                                            0,
                                                        ),
                                                        output_type: Some(
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: std,
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: string,
                                                                                span: bytes(133..139),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: String,
                                                                                span: bytes(141..147),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ),
                                                    },
                                                },
                                                metadata: HydroNodeMetadata {
                                                    id: Some(
                                                        4,
                                                    ),
                                                    location_kind: Process(
                                                        0,
                                                    ),
                                                    output_type: Some(
                                                        Type::Tuple {
                                                            paren_token: Paren,
                                                            elems: [
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: usize,
                                                                                    span: bytes(171..176),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                Comma,
                                                                Type::Path {
                                                                    qself: None,
                                                                    path: Path {
                                                                        leading_colon: None,
                                                                        segments: [
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: std,
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: string,
                                                                                    span: bytes(185..191),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                            PathSep,
                                                                            PathSegment {
                                                                                ident: Ident {
                                                                                    sym: String,
                                                                                    span: bytes(193..199),
                                                                                },
                                                                                arguments: PathArguments::None,
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                            },
                                            metadata: HydroNodeMetadata {
                                                id: Some(
                                                    6,
                                                ),
                                                location_kind: Process(
                                                    0,
                                                ),
                                                output_type: Some(
                                                    Type::Tuple {
                                                        paren_token: Paren,
                                                        elems: [
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: hydro_lang,
                                                                                span: bytes(442..452),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: location,
                                                                                span: bytes(454..462),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: cluster,
                                                                                span: bytes(464..471),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: cluster_id,
                                                                                span: bytes(473..483),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: ClusterId,
                                                                                span: bytes(485..494),
                                                                            },
                                                                            arguments: PathArguments::AngleBracketed {
                                                                                colon2_token: None,
                                                                                lt_token: Lt,
                                                                                args: [
                                                                                    GenericArgument::Type(
                                                                                        Type::Path {
                                                                                            qself: None,
                                                                                            path: Path {
                                                                                                leading_colon: None,
                                                                                                segments: [
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: hydro_test,
                                                                                                            span: bytes(495..505),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: cluster,
                                                                                                            span: bytes(507..514),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: map_reduce,
                                                                                                            span: bytes(516..526),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                    PathSep,
                                                                                                    PathSegment {
                                                                                                        ident: Ident {
                                                                                                            sym: Worker,
                                                                                                            span: bytes(528..534),
                                                                                                        },
                                                                                                        arguments: PathArguments::None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                gt_token: Gt,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Comma,
                                                            Type::Path {
                                                                qself: None,
                                                                path: Path {
                                                                    leading_colon: None,
                                                                    segments: [
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: std,
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: string,
                                                                                span: bytes(544..550),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                        PathSep,
                                                                        PathSegment {
                                                                            ident: Ident {
                                                                                sym: String,
                                                                                span: bytes(552..558),
                                                                            },
                                                                            arguments: PathArguments::None,
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                ),
                                            },
                                        },
                                        metadata: HydroNodeMetadata {
                                            id: Some(
                                                7,
                                            ),
                                            location_kind: Cluster(
                                                1,
                                            ),
                                            output_type: Some(
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: std,
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: string,
                                                                    span: bytes(611..617),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: String,
                                                                    span: bytes(619..625),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ),
                                        },
                                    },
                                    metadata: HydroNodeMetadata {
                                        id: Some(
                                            8,
                                        ),
                                        location_kind: Cluster(
                                            1,
                                        ),
                                        output_type: Some(
                                            Type::Tuple {
                                                paren_token: Paren,
                                                elems: [
                                                    Type::Path {
                                                        qself: None,
                                                        path: Path {
                                                            leading_colon: None,
                                                            segments: [
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: std,
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: string,
                                                                        span: bytes(716..722),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                                PathSep,
                                                                PathSegment {
                                                                    ident: Ident {
                                                                        sym: String,
                                                                        span: bytes(724..730),
                                                                    },
                                                                    arguments: PathArguments::None,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Comma,
                                                    Type::Tuple {
                                                        paren_token: Paren,
                                                        elems: [],
                                                    },
                                                ],
                                            },
                                        ),
                                    },
                                },
                                metadata: HydroNodeMetadata {
                                    id: Some(
                                        10,
                                    ),
                                    location_kind: Cluster(
                                        1,
                                    ),
                                    output_type: Some(
                                        Type::Tuple {
                                            paren_token: Paren,
                                            elems: [
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: std,
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: string,
                                                                    span: bytes(854..860),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                            PathSep,
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: String,
                                                                    span: bytes(862..868),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                                Comma,
                                                Type::Path {
                                                    qself: None,
                                                    path: Path {
                                                        leading_colon: None,
                                                        segments: [
                                                            PathSegment {
                                                                ident: Ident {
                                                                    sym: i32,
                                                                    span: bytes(870..873),
                                                                },
                                                                arguments: PathArguments::None,
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    ),
                                },
                            },
                            metadata: HydroNodeMetadata {
                                id: Some(
                                    11,
                                ),
                                location_kind: Cluster(
                                    1,
                                ),
                                output_type: Some(
                                    Type::Tuple {
                                        paren_token: Paren,
                                        elems: [
                                            Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: std,
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: string,
                                                                span: bytes(974..980),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                        PathSep,
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: String,
                                                                span: bytes(982..988),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                            Comma,
                                            Type::Path {
                                                qself: None,
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: i32,
                                                                span: bytes(990..993),
                                                            },
                                                            arguments: PathArguments::None,
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                ),
                            },
                        },
                        metadata: HydroNodeMetadata {
                            id: Some(
                                13,
                            ),
                            location_kind: Process(
                                0,
                            ),
                            output_type: Some(
                                Type::Tuple {
                                    paren_token: Paren,
                                    elems: [
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: std,
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: string,
                                                            span: bytes(1130..1136),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                    PathSep,
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: String,
                                                            span: bytes(1138..1144),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                        Comma,
                                        Type::Path {
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: i32,
                                                            span: bytes(1146..1149),
                                                        },
                                                        arguments: PathArguments::None,
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            ),
                        },
                    },
                    metadata: HydroNodeMetadata {
                        id: Some(
                            14,
                        ),
                        location_kind: Process(
                            0,
                        ),
                        output_type: Some(
                            Type::Tuple {
                                paren_token: Paren,
                                elems: [
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: std,
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: string,
                                                        span: bytes(1333..1339),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                                PathSep,
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: String,
                                                        span: bytes(1341..1347),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                    Comma,
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident {
                                                        sym: i32,
                                                        span: bytes(1349..1352),
                                                    },
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ],
                            },
                        ),
                    },
                },
                metadata: HydroNodeMetadata {
                    id: Some(
                        16,
                    ),
                    location_kind: Process(
                        0,
                    ),
                    output_type: Some(
                        Type::Tuple {
                            paren_token: Paren,
                            elems: [
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: std,
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: string,
                                                    span: bytes(1391..1397),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                            PathSep,
                                            PathSegment {
                                                ident: Ident {
                                                    sym: String,
                                                    span: bytes(1399..1405),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                                Comma,
                                Type::Path {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: i32,
                                                    span: bytes(1407..1410),
                                                },
                                                arguments: PathArguments::None,
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    ),
                },
            },
            metadata: HydroNodeMetadata {
                id: Some(
                    17,
                ),
                location_kind: Process(
                    0,
                ),
                output_type: Some(
                    Type::Tuple {
                        paren_token: Paren,
                        elems: [
                            Type::Path {
                                qself: None,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: std,
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: string,
                                                span: bytes(1463..1469),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                        PathSep,
                                        PathSegment {
                                            ident: Ident {
                                                sym: String,
                                                span: bytes(1471..1477),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                            Comma,
                            Type::Path {
                                qself: None,
                                path: Path {
                                    leading_colon: None,
                                    segments: [
                                        PathSegment {
                                            ident: Ident {
                                                sym: i32,
                                                span: bytes(1479..1482),
                                            },
                                            arguments: PathArguments::None,
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                ),
            },
        },
    },
]
