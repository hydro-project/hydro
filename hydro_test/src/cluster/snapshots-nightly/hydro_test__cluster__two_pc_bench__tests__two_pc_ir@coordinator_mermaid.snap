---
source: hydro_test/src/cluster/two_pc_bench.rs
expression: "preview.dfir_for(&coordinator).to_mermaid(&WriteConfig\n{\n    no_subgraphs: true, no_pull_push: true, no_handoffs: true,\n    op_text_no_imports: true, ..WriteConfig::default()\n})"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1["<div style=text-align:center>(1v1)</div> <code><br>defer_tick_lazy()</code>"]:::otherClass
2v1["<div style=text-align:center>(2v1)</div> <code><br>source_iter({<br>    let underlying_memberids__free = unsafe {<br>        ::std::mem::transmute::&lt;<br>            _,<br>            &amp;[hydro_lang::location::MemberId&lt;<br>                hydro_test::__staged::cluster::two_pc::Participant,<br>            &gt;],<br>        &gt;(__hydro_lang_cluster_ids_1)<br>    };<br>    underlying_memberids__free<br>})</code>"]:::otherClass
3v1["<div style=text-align:center>(3v1)</div> <code><br>map({<br>    |id| (*id, MembershipEvent::Joined)<br>})</code>"]:::otherClass
4v1["<div style=text-align:center>(4v1)</div> <code><br>fold_keyed::&lt;<br>    'static,<br>&gt;(<br>    {<br>        || false<br>    },<br>    {<br>        |present, event| {<br>            match event {<br>                MembershipEvent::Joined =&gt; *present = true,<br>                MembershipEvent::Left =&gt; *present = false,<br>            }<br>        }<br>    },<br>)</code>"]:::otherClass
5v1["<div style=text-align:center>(5v1)</div> <code><br>filter_map({<br>    let f__free = {<br>        |v| if v { Some(()) } else { None }<br>    };<br>    {<br>        let orig = f__free;<br>        move |(k, v)| orig(v).map(|v| (k, v))<br>    }<br>})</code>"]:::otherClass
6v1["<div style=text-align:center>(6v1)</div> <code><br>map({<br>    |(k, _)| k<br>})</code>"]:::otherClass
7v1["<div style=text-align:center>(7v1)</div> <code><br>source_stream(DUMMY_SOURCE)</code>"]:::otherClass
8v1["<div style=text-align:center>(8v1)</div> <code><br>map(|res| {<br>    let (id, b) = res.unwrap();<br>    (<br>        hydro_lang::location::MemberId::&lt;<br>            hydro_test::__staged::cluster::two_pc_bench::Client,<br>        &gt;::from_raw(id),<br>        hydro_lang::runtime_support::bincode::deserialize::&lt;(u32, u32)&gt;(&amp;b).unwrap(),<br>    )<br>})</code>"]:::otherClass
9v1["<div style=text-align:center>(9v1)</div> <code><br>cross_join_multiset::&lt;'tick, 'tick&gt;()</code>"]:::otherClass
10v1["<div style=text-align:center>(10v1)</div> <code><br>map(|(id, data)| {<br>    (<br>        id.raw_id,<br>        hydro_lang::runtime_support::bincode::serialize(&amp;data).unwrap().into(),<br>    )<br>})</code>"]:::otherClass
11v1["<div style=text-align:center>(11v1)</div> <code><br>dest_sink(DUMMY_SINK)</code>"]:::otherClass
12v1["<div style=text-align:center>(12v1)</div> <code><br>source_stream(DUMMY_SOURCE)</code>"]:::otherClass
13v1["<div style=text-align:center>(13v1)</div> <code><br>map(|res| {<br>    let (id, b) = res.unwrap();<br>    (<br>        hydro_lang::location::MemberId::&lt;<br>            hydro_test::__staged::cluster::two_pc::Participant,<br>        &gt;::from_raw(id),<br>        hydro_lang::runtime_support::bincode::deserialize::&lt;<br>            (<br>                hydro_test::__staged::__deps::hydro_lang::location::member_id::MemberId&lt;<br>                    hydro_test::__staged::cluster::two_pc_bench::Client,<br>                &gt;,<br>                (u32, u32),<br>            ),<br>        &gt;(&amp;b)<br>            .unwrap(),<br>    )<br>})</code>"]:::otherClass
14v1["<div style=text-align:center>(14v1)</div> <code><br>map({<br>    |(_, v)| v<br>})</code>"]:::otherClass
15v1["<div style=text-align:center>(15v1)</div> <code><br>map({<br>    |kv| (kv, Ok::&lt;(), ()&gt;(()))<br>})</code>"]:::otherClass
17v1["<div style=text-align:center>(17v1)</div> <code><br>chain()</code>"]:::otherClass
18v1["<div style=text-align:center>(18v1)</div> <code><br>tee()</code>"]:::otherClass
19v1["<div style=text-align:center>(19v1)</div> <code><br>fold_keyed::&lt;<br>    'tick,<br>&gt;(<br>    {<br>        move || (0, 0)<br>    },<br>    {<br>        move |accum, value| {<br>            if value.is_ok() {<br>                accum.0 += 1;<br>            } else {<br>                accum.1 += 1;<br>            }<br>        }<br>    },<br>)</code>"]:::otherClass
21v1["<div style=text-align:center>(21v1)</div> <code><br>filter_map({<br>    let min__free = 3usize;<br>    move |(key, (success, _error))| {<br>        if success &gt;= min__free { Some(key) } else { None }<br>    }<br>})</code>"]:::otherClass
22v1["<div style=text-align:center>(22v1)</div> <code><br>tee()</code>"]:::otherClass
23v1["<div style=text-align:center>(23v1)</div> <code><br>anti_join_multiset::&lt;'tick, 'tick&gt;()</code>"]:::otherClass
24v1["<div style=text-align:center>(24v1)</div> <code><br>defer_tick_lazy()</code>"]:::otherClass
25v1["<div style=text-align:center>(25v1)</div> <code><br>source_iter({<br>    let underlying_memberids__free = unsafe {<br>        ::std::mem::transmute::&lt;<br>            _,<br>            &amp;[hydro_lang::location::MemberId&lt;<br>                hydro_test::__staged::cluster::two_pc::Participant,<br>            &gt;],<br>        &gt;(__hydro_lang_cluster_ids_1)<br>    };<br>    underlying_memberids__free<br>})</code>"]:::otherClass
26v1["<div style=text-align:center>(26v1)</div> <code><br>map({<br>    |id| (*id, MembershipEvent::Joined)<br>})</code>"]:::otherClass
27v1["<div style=text-align:center>(27v1)</div> <code><br>fold_keyed::&lt;<br>    'static,<br>&gt;(<br>    {<br>        || false<br>    },<br>    {<br>        |present, event| {<br>            match event {<br>                MembershipEvent::Joined =&gt; *present = true,<br>                MembershipEvent::Left =&gt; *present = false,<br>            }<br>        }<br>    },<br>)</code>"]:::otherClass
28v1["<div style=text-align:center>(28v1)</div> <code><br>filter_map({<br>    let f__free = {<br>        |v| if v { Some(()) } else { None }<br>    };<br>    {<br>        let orig = f__free;<br>        move |(k, v)| orig(v).map(|v| (k, v))<br>    }<br>})</code>"]:::otherClass
29v1["<div style=text-align:center>(29v1)</div> <code><br>map({<br>    |(k, _)| k<br>})</code>"]:::otherClass
30v1["<div style=text-align:center>(30v1)</div> <code><br>cross_join_multiset::&lt;'tick, 'tick&gt;()</code>"]:::otherClass
31v1["<div style=text-align:center>(31v1)</div> <code><br>map(|(id, data)| {<br>    (<br>        id.raw_id,<br>        hydro_lang::runtime_support::bincode::serialize(&amp;data).unwrap().into(),<br>    )<br>})</code>"]:::otherClass
32v1["<div style=text-align:center>(32v1)</div> <code><br>dest_sink(DUMMY_SINK)</code>"]:::otherClass
33v1["<div style=text-align:center>(33v1)</div> <code><br>source_stream(DUMMY_SOURCE)</code>"]:::otherClass
34v1["<div style=text-align:center>(34v1)</div> <code><br>map(|res| {<br>    let (id, b) = res.unwrap();<br>    (<br>        hydro_lang::location::MemberId::&lt;<br>            hydro_test::__staged::cluster::two_pc::Participant,<br>        &gt;::from_raw(id),<br>        hydro_lang::runtime_support::bincode::deserialize::&lt;<br>            (<br>                hydro_test::__staged::__deps::hydro_lang::location::member_id::MemberId&lt;<br>                    hydro_test::__staged::cluster::two_pc_bench::Client,<br>                &gt;,<br>                (u32, u32),<br>            ),<br>        &gt;(&amp;b)<br>            .unwrap(),<br>    )<br>})</code>"]:::otherClass
35v1["<div style=text-align:center>(35v1)</div> <code><br>map({<br>    |(_, v)| v<br>})</code>"]:::otherClass
36v1["<div style=text-align:center>(36v1)</div> <code><br>map({<br>    |kv| (kv, Ok::&lt;(), ()&gt;(()))<br>})</code>"]:::otherClass
38v1["<div style=text-align:center>(38v1)</div> <code><br>chain()</code>"]:::otherClass
39v1["<div style=text-align:center>(39v1)</div> <code><br>tee()</code>"]:::otherClass
40v1["<div style=text-align:center>(40v1)</div> <code><br>fold_keyed::&lt;<br>    'tick,<br>&gt;(<br>    {<br>        move || (0, 0)<br>    },<br>    {<br>        move |accum, value| {<br>            if value.is_ok() {<br>                accum.0 += 1;<br>            } else {<br>                accum.1 += 1;<br>            }<br>        }<br>    },<br>)</code>"]:::otherClass
42v1["<div style=text-align:center>(42v1)</div> <code><br>filter_map({<br>    let min__free = 3usize;<br>    move |(key, (success, _error))| {<br>        if success &gt;= min__free { Some(key) } else { None }<br>    }<br>})</code>"]:::otherClass
43v1["<div style=text-align:center>(43v1)</div> <code><br>tee()</code>"]:::otherClass
44v1["<div style=text-align:center>(44v1)</div> <code><br>anti_join_multiset::&lt;'tick, 'tick&gt;()</code>"]:::otherClass
45v1["<div style=text-align:center>(45v1)</div> <code><br>map(|(id, data)| {<br>    (<br>        id.raw_id,<br>        hydro_lang::runtime_support::bincode::serialize(&amp;data).unwrap().into(),<br>    )<br>})</code>"]:::otherClass
46v1["<div style=text-align:center>(46v1)</div> <code><br>dest_sink(DUMMY_SINK)</code>"]:::otherClass
56v1["<div style=text-align:center>(56v1)</div> <code><br>identity()</code>"]:::otherClass
58v1["<div style=text-align:center>(58v1)</div> <code><br>identity()</code>"]:::otherClass
23v1-->56v1
2v1-->3v1
3v1--x4v1; linkStyle 2 stroke:red
4v1-->5v1
5v1-->6v1
7v1-->8v1
6v1-->|0|9v1
8v1-->|1|9v1
10v1-->11v1
9v1-->10v1
12v1-->13v1
13v1-->14v1
14v1-->15v1
1v1--x|0|17v1; linkStyle 13 stroke:red
15v1-->|1|17v1
17v1-->18v1
18v1--x19v1; linkStyle 16 stroke:red
19v1-->21v1
21v1-->22v1
18v1-->|pos|23v1
22v1--x|neg|23v1; linkStyle 20 stroke:red
44v1-->58v1
25v1-->26v1
26v1--x27v1; linkStyle 23 stroke:red
27v1-->28v1
28v1-->29v1
29v1-->|0|30v1
22v1-->|1|30v1
31v1-->32v1
30v1-->31v1
33v1-->34v1
34v1-->35v1
35v1-->36v1
24v1--x|0|38v1; linkStyle 33 stroke:red
36v1-->|1|38v1
38v1-->39v1
39v1--x40v1; linkStyle 36 stroke:red
40v1-->42v1
42v1-->43v1
39v1-->|pos|44v1
43v1--x|neg|44v1; linkStyle 40 stroke:red
45v1-->46v1
43v1-->45v1
56v1--o1v1; linkStyle 43 stroke:red
58v1--o24v1; linkStyle 44 stroke:red
10v1
11v1
31v1
32v1
45v1
46v1
56v1
58v1
subgraph var_stream_1 ["var <tt>stream_1</tt>"]
    style var_stream_1 fill:transparent
    1v1
end
subgraph var_stream_11 ["var <tt>stream_11</tt>"]
    style var_stream_11 fill:transparent
    13v1
    12v1
end
subgraph var_stream_12 ["var <tt>stream_12</tt>"]
    style var_stream_12 fill:transparent
    14v1
end
subgraph var_stream_13 ["var <tt>stream_13</tt>"]
    style var_stream_13 fill:transparent
    15v1
end
subgraph var_stream_15 ["var <tt>stream_15</tt>"]
    style var_stream_15 fill:transparent
    17v1
end
subgraph var_stream_16 ["var <tt>stream_16</tt>"]
    style var_stream_16 fill:transparent
    18v1
end
subgraph var_stream_18 ["var <tt>stream_18</tt>"]
    style var_stream_18 fill:transparent
    19v1
end
subgraph var_stream_2 ["var <tt>stream_2</tt>"]
    style var_stream_2 fill:transparent
    2v1
end
subgraph var_stream_20 ["var <tt>stream_20</tt>"]
    style var_stream_20 fill:transparent
    21v1
end
subgraph var_stream_21 ["var <tt>stream_21</tt>"]
    style var_stream_21 fill:transparent
    22v1
end
subgraph var_stream_22 ["var <tt>stream_22</tt>"]
    style var_stream_22 fill:transparent
    23v1
end
subgraph var_stream_24 ["var <tt>stream_24</tt>"]
    style var_stream_24 fill:transparent
    24v1
end
subgraph var_stream_25 ["var <tt>stream_25</tt>"]
    style var_stream_25 fill:transparent
    25v1
end
subgraph var_stream_26 ["var <tt>stream_26</tt>"]
    style var_stream_26 fill:transparent
    26v1
end
subgraph var_stream_27 ["var <tt>stream_27</tt>"]
    style var_stream_27 fill:transparent
    27v1
end
subgraph var_stream_28 ["var <tt>stream_28</tt>"]
    style var_stream_28 fill:transparent
    28v1
end
subgraph var_stream_29 ["var <tt>stream_29</tt>"]
    style var_stream_29 fill:transparent
    29v1
end
subgraph var_stream_3 ["var <tt>stream_3</tt>"]
    style var_stream_3 fill:transparent
    3v1
end
subgraph var_stream_31 ["var <tt>stream_31</tt>"]
    style var_stream_31 fill:transparent
    30v1
end
subgraph var_stream_33 ["var <tt>stream_33</tt>"]
    style var_stream_33 fill:transparent
    34v1
    33v1
end
subgraph var_stream_34 ["var <tt>stream_34</tt>"]
    style var_stream_34 fill:transparent
    35v1
end
subgraph var_stream_35 ["var <tt>stream_35</tt>"]
    style var_stream_35 fill:transparent
    36v1
end
subgraph var_stream_37 ["var <tt>stream_37</tt>"]
    style var_stream_37 fill:transparent
    38v1
end
subgraph var_stream_38 ["var <tt>stream_38</tt>"]
    style var_stream_38 fill:transparent
    39v1
end
subgraph var_stream_4 ["var <tt>stream_4</tt>"]
    style var_stream_4 fill:transparent
    4v1
end
subgraph var_stream_40 ["var <tt>stream_40</tt>"]
    style var_stream_40 fill:transparent
    40v1
end
subgraph var_stream_42 ["var <tt>stream_42</tt>"]
    style var_stream_42 fill:transparent
    42v1
end
subgraph var_stream_43 ["var <tt>stream_43</tt>"]
    style var_stream_43 fill:transparent
    43v1
end
subgraph var_stream_44 ["var <tt>stream_44</tt>"]
    style var_stream_44 fill:transparent
    44v1
end
subgraph var_stream_5 ["var <tt>stream_5</tt>"]
    style var_stream_5 fill:transparent
    5v1
end
subgraph var_stream_6 ["var <tt>stream_6</tt>"]
    style var_stream_6 fill:transparent
    6v1
end
subgraph var_stream_8 ["var <tt>stream_8</tt>"]
    style var_stream_8 fill:transparent
    8v1
    7v1
end
subgraph var_stream_9 ["var <tt>stream_9</tt>"]
    style var_stream_9 fill:transparent
    9v1
end
