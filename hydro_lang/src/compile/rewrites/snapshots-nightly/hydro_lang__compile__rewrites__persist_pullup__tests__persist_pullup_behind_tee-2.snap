---
source: hydro_lang/src/compile/rewrites/persist_pullup.rs
expression: optimized.ir()
---
[
    ForEach {
        f: stageleft :: runtime_support :: fn1_type_hint :: < i32 , () > ({ use crate :: __staged :: __deps :: * ; use crate :: __staged :: compile :: rewrites :: persist_pullup :: tests :: * ; | n | println ! ("{}" , n) }),
        input: Persist {
            inner: Map {
                f: stageleft :: runtime_support :: fn1_type_hint :: < i32 , i32 > ({ use crate :: __staged :: __deps :: * ; use crate :: __staged :: compile :: rewrites :: persist_pullup :: tests :: * ; | v | v + 1 }),
                input: Tee {
                    inner: <tee>: Source {
                        source: Iter(
                            { use crate :: __staged :: __deps :: * ; use crate :: __staged :: compile :: rewrites :: persist_pullup :: tests :: * ; 0 .. 10 },
                        ),
                        metadata: HydroIrMetadata {
                            location_kind: Process(
                                0,
                            ),
                            output_type: Some(
                                i32,
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            0,
                            Process(
                                0,
                            ),
                        ),
                        output_type: Some(
                            i32,
                        ),
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        0,
                        Process(
                            0,
                        ),
                    ),
                    output_type: Some(
                        i32,
                    ),
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    0,
                    Process(
                        0,
                    ),
                ),
                output_type: Some(
                    i32,
                ),
            },
        },
        op_metadata: HydroIrOpMetadata,
    },
    ForEach {
        f: stageleft :: runtime_support :: fn1_type_hint :: < i32 , () > ({ use crate :: __staged :: __deps :: * ; use crate :: __staged :: compile :: rewrites :: persist_pullup :: tests :: * ; | n | println ! ("{}" , n) }),
        input: Persist {
            inner: Map {
                f: stageleft :: runtime_support :: fn1_type_hint :: < i32 , i32 > ({ use crate :: __staged :: __deps :: * ; use crate :: __staged :: compile :: rewrites :: persist_pullup :: tests :: * ; | v | v + 1 }),
                input: Tee {
                    inner: <tee>: Source {
                        source: Iter(
                            { use crate :: __staged :: __deps :: * ; use crate :: __staged :: compile :: rewrites :: persist_pullup :: tests :: * ; 0 .. 10 },
                        ),
                        metadata: HydroIrMetadata {
                            location_kind: Process(
                                0,
                            ),
                            output_type: Some(
                                i32,
                            ),
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            0,
                            Process(
                                0,
                            ),
                        ),
                        output_type: Some(
                            i32,
                        ),
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Tick(
                        0,
                        Process(
                            0,
                        ),
                    ),
                    output_type: Some(
                        i32,
                    ),
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Tick(
                    0,
                    Process(
                        0,
                    ),
                ),
                output_type: Some(
                    i32,
                ),
            },
        },
        op_metadata: HydroIrOpMetadata,
    },
]
