---
source: hydro_lang/src/compile/rewrites/properties.rs
expression: built.ir()
---
[
    ForEach {
        f: stageleft :: runtime_support :: fn1_type_hint :: < (std :: string :: String , i32) , () > ({ use crate :: __staged :: __deps :: * ; use crate :: __staged :: compile :: rewrites :: properties :: tests :: * ; | (string , count) | println ! ("{}: {}" , string , count) }),
        input: ObserveNonDet {
            inner: YieldConcat {
                inner: Cast {
                    inner: Cast {
                        inner: FoldKeyed {
                            init: stageleft :: runtime_support :: fn0_type_hint :: < i32 > ({ use crate :: __staged :: __deps :: * ; use crate :: __staged :: compile :: rewrites :: properties :: tests :: * ; | | 0 }),
                            acc: stageleft :: runtime_support :: fn2_borrow_mut_type_hint :: < i32 , () , () > ({ use crate :: __staged :: __deps :: * ; use crate :: __staged :: compile :: rewrites :: properties :: tests :: * ; | count : & mut i32 , _ | * count += 1 }),
                            input: Cast {
                                inner: Batch {
                                    inner: Map {
                                        f: stageleft :: runtime_support :: fn1_type_hint :: < std :: string :: String , (std :: string :: String , ()) > ({ use crate :: __staged :: __deps :: * ; use crate :: __staged :: compile :: rewrites :: properties :: tests :: * ; | string : String | (string , ()) }),
                                        input: Source {
                                            source: Iter(
                                                { use crate :: __staged :: __deps :: * ; use crate :: __staged :: compile :: rewrites :: properties :: tests :: * ; vec ! [] },
                                            ),
                                            metadata: HydroIrMetadata {
                                                location_kind: Process(
                                                    0,
                                                ),
                                                collection_kind: Stream {
                                                    bound: Unbounded,
                                                    order: TotalOrder,
                                                    retry: ExactlyOnce,
                                                    element_type: std :: string :: String,
                                                },
                                            },
                                        },
                                        metadata: HydroIrMetadata {
                                            location_kind: Process(
                                                0,
                                            ),
                                            collection_kind: Stream {
                                                bound: Unbounded,
                                                order: TotalOrder,
                                                retry: ExactlyOnce,
                                                element_type: (std :: string :: String , ()),
                                            },
                                        },
                                    },
                                    metadata: HydroIrMetadata {
                                        location_kind: Tick(
                                            0,
                                            Process(
                                                0,
                                            ),
                                        ),
                                        collection_kind: Stream {
                                            bound: Bounded,
                                            order: TotalOrder,
                                            retry: ExactlyOnce,
                                            element_type: (std :: string :: String , ()),
                                        },
                                    },
                                },
                                metadata: HydroIrMetadata {
                                    location_kind: Tick(
                                        0,
                                        Process(
                                            0,
                                        ),
                                    ),
                                    collection_kind: KeyedStream {
                                        bound: Bounded,
                                        value_order: TotalOrder,
                                        value_retry: ExactlyOnce,
                                        key_type: std :: string :: String,
                                        value_type: (),
                                    },
                                },
                            },
                            metadata: HydroIrMetadata {
                                location_kind: Tick(
                                    0,
                                    Process(
                                        0,
                                    ),
                                ),
                                collection_kind: KeyedSingleton {
                                    bound: Bounded,
                                    key_type: std :: string :: String,
                                    value_type: i32,
                                },
                            },
                        },
                        metadata: HydroIrMetadata {
                            location_kind: Tick(
                                0,
                                Process(
                                    0,
                                ),
                            ),
                            collection_kind: KeyedStream {
                                bound: Bounded,
                                value_order: TotalOrder,
                                value_retry: ExactlyOnce,
                                key_type: std :: string :: String,
                                value_type: i32,
                            },
                        },
                    },
                    metadata: HydroIrMetadata {
                        location_kind: Tick(
                            0,
                            Process(
                                0,
                            ),
                        ),
                        collection_kind: Stream {
                            bound: Bounded,
                            order: NoOrder,
                            retry: ExactlyOnce,
                            element_type: (std :: string :: String , i32),
                        },
                    },
                },
                metadata: HydroIrMetadata {
                    location_kind: Process(
                        0,
                    ),
                    collection_kind: Stream {
                        bound: Unbounded,
                        order: NoOrder,
                        retry: ExactlyOnce,
                        element_type: (std :: string :: String , i32),
                    },
                },
            },
            metadata: HydroIrMetadata {
                location_kind: Process(
                    0,
                ),
                collection_kind: Stream {
                    bound: Unbounded,
                    order: TotalOrder,
                    retry: ExactlyOnce,
                    element_type: (std :: string :: String , i32),
                },
            },
        },
        op_metadata: HydroIrOpMetadata,
    },
]
