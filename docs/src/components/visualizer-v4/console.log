 [ReactFlowBridge] 🔍 Debug edge e4: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e4: Object
 [ReactFlowBridge] 🔍 Debug edge e5: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e5: Object
 [ReactFlowBridge] 🔍 Debug edge e6: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e6: Object
 [ReactFlowBridge] 🔍 Debug edge e7: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e7: Object
 [ReactFlowBridge] 🔍 Debug edge e8: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e8: Object
 [FlowGraph] ✅ Layout change applied successfully
 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ELKBridge] ✅ ELK layout complete
 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [FlowGraph] 🔧 Layout config changed, updating engine and re-running layout...
 [ReactFlowConverter] 🔄 Converting with bridge architecture...
 [ReactFlowBridge] 🔄 Converting VisState to ReactFlow format
 [ReactFlowBridge] 📦 Container loc_0: collapsed=false, ELK=(130, 407.5), ReactFlow=(130, 407.5), size=220x505
 [ReactFlowBridge] 📦 Container loc_1: collapsed=false, ELK=(425, 407.5), ReactFlow=(425, 407.5), size=220x775
 [ReactFlowBridge] 🔍 Node 6 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 560) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 6: parent=loc_1, ELK=(20, 560), ReactFlow=(20, 560)
 [ReactFlowBridge] 🔍 Node 3 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 155) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 3: parent=loc_1, ELK=(20, 155), ReactFlow=(20, 155)
 [ReactFlowBridge] 🔍 Node 7 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 695) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 7: parent=loc_1, ELK=(20, 695), ReactFlow=(20, 695)
 [ReactFlowBridge] 🔍 Node 9 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 185) are already relative to container loc_0 - using as-is
 [ReactFlowBridge] 🔘 Node 9: parent=loc_0, ELK=(110, 185), ReactFlow=(110, 185)
 [ReactFlowBridge] 🔍 Node 5 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 425) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 5: parent=loc_1, ELK=(20, 425), ReactFlow=(20, 425)
 [ReactFlowBridge] 🔍 Node 2 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 20) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 2: parent=loc_1, ELK=(20, 20), ReactFlow=(20, 20)
 [ReactFlowBridge] 🔍 Node 1 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 455) are already relative to container loc_0 - using as-is
 [ReactFlowBridge] 🔘 Node 1: parent=loc_0, ELK=(110, 455), ReactFlow=(110, 455)
 [ReactFlowBridge] 🔍 Node 4 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 290) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 4: parent=loc_1, ELK=(20, 290), ReactFlow=(20, 290)
 [ReactFlowBridge] 🔍 Node 8 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 50) are already relative to container loc_0 - using as-is
 [ReactFlowBridge] 🔘 Node 8: parent=loc_0, ELK=(110, 50), ReactFlow=(110, 50)
 [ReactFlowBridge] 🔍 Node 0 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 320) are already relative to container loc_0 - using as-is
 [ReactFlowBridge] 🔘 Node 0: parent=loc_0, ELK=(110, 320), ReactFlow=(110, 320)
 [ReactFlowBridge] 🔍 Debug edge e0: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e0: Object
 [ReactFlowBridge] 🔍 Debug edge e1: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e1: Object
 [ReactFlowBridge] 🔍 Debug edge e2: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e2: Object
 [ReactFlowBridge] 🔍 Debug edge e3: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e3: Object
 [ReactFlowBridge] 🔍 Debug edge e4: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e4: Object
 [ReactFlowBridge] 🔍 Debug edge e5: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e5: Object
 [ReactFlowBridge] 🔍 Debug edge e6: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e6: Object
 [ReactFlowBridge] 🔍 Debug edge e7: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e7: Object
 [ReactFlowBridge] 🔍 Debug edge e8: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e8: Object
 [FlowGraph] ✅ Layout change applied successfully
 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ELKBridge] 📝 Applying ELK results back to VisState
 [ELKBridge] 🔍 ELK Result Structure: {
  "id": "root",
  "children": [
    {
      "id": "loc_0",
      "width": 220,
      "height": 505,
      "children": [
        {
          "id": "9",
          "width": 180,
          "height": 60,
          "$H": 398,
          "x": 110,
          "y": 185
        },
        {
          "id": "1",
          "width": 180,
          "height": 60,
          "$H": 400,
          "x": 110,
          "y": 455
        },
        {
          "id": "8",
          "width": 180,
          "height": 60,
          "$H": 402,
          "x": 110,
          "y": 50
        },
        {
          "id": "0",
          "width": 180,
          "height": 60,
          "$H": 404,
          "x": 110,
          "y": 320
        }
      ],
      "layoutOptions": {
        "elk.algorithm": "mrtree",
        "elk.direction": "DOWN",
        "elk.hierarchyHandling": "INCLUDE_CHILDREN",
        "elk.spacing.nodeNode": "75",
        "elk.spacing.edgeNode": "0",
        "elk.spacing.edgeEdge": "10",
        "elk.spacing.componentComponent": "60",
        "elk.layered.spacing.nodeNodeBetweenLayers": "25"
      },
      "$H": 396,
      "x": 130,
      "y": 407.5
    },
    {
      "id": "loc_1",
      "width": 220,
      "height": 775,
      "children": [
        {
          "id": "6",
          "width": 180,
          "height": 60,
          "$H": 408,
          "x": 20,
          "y": 560
        },
        {
          "id": "3",
          "width": 180,
          "height": 60,
          "$H": 410,
          "x": 20,
          "y": 155
        },
        {
          "id": "7",
          "width": 180,
          "height": 60,
          "$H": 412,
          "x": 20,
          "y": 695
        },
        {
          "id": "5",
          "width": 180,
          "height": 60,
          "$H": 414,
          "x": 20,
          "y": 425
        },
        {
          "id": "2",
          "width": 180,
          "height": 60,
          "$H": 416,
          "x": 20,
          "y": 20
        },
        {
          "id": "4",
          "width": 180,
          "height": 60,
          "$H": 418,
          "x": 20,
          "y": 290
        }
      ],
      "layoutOptions": {
        "elk.algorithm": "mrtree",
        "elk.direction": "DOWN",
        "elk.hierarchyHandling": "INCLUDE_CHILDREN",
        "elk.spacing.nodeNode": "75",
        "elk.spacing.edgeNode": "0",
        "elk.spacing.edgeEdge": "10",
        "elk.spacing.componentComponent": "60",
        "elk.layered.spacing.nodeNodeBetweenLayers": "25"
      },
      "$H": 406,
      "x": 425,
      "y": 407.5
    }
  ],
  "edges": [
    {
      "id": "e0",
      "sources": [
        "0"
      ],
      "targets": [
        "1"
      ],
      "sections": [
        {
          "id": "e0_s0",
          "startPoint": {
            "x": 200,
            "y": 380
          },
          "endPoint": {
            "x": 200,
            "y": 455
          },
          "bendPoints": [
            {
              "x": 200,
              "y": 380
            }
          ]
        }
      ],
      "container": "loc_0"
    },
    {
      "id": "e1",
      "sources": [
        "1"
      ],
      "targets": [
        "2"
      ],
      "container": "root"
    },
    {
      "id": "e2",
      "sources": [
        "2"
      ],
      "targets": [
        "3"
      ],
      "sections": [
        {
          "id": "e2_s0",
          "startPoint": {
            "x": 110,
            "y": 80
          },
          "endPoint": {
            "x": 110,
            "y": 155
          },
          "bendPoints": [
            {
              "x": 110,
              "y": 80
            }
          ]
        }
      ],
      "container": "loc_1"
    },
    {
      "id": "e3",
      "sources": [
        "3"
      ],
      "targets": [
        "4"
      ],
      "sections": [
        {
          "id": "e3_s0",
          "startPoint": {
            "x": 110,
            "y": 215
          },
          "endPoint": {
            "x": 110,
            "y": 290
          },
          "bendPoints": [
            {
              "x": 110,
              "y": 215
            }
          ]
        }
      ],
      "container": "loc_1"
    },
    {
      "id": "e4",
      "sources": [
        "4"
      ],
      "targets": [
        "5"
      ],
      "sections": [
        {
          "id": "e4_s0",
          "startPoint": {
            "x": 110,
            "y": 350
          },
          "endPoint": {
            "x": 110,
            "y": 425
          },
          "bendPoints": [
            {
              "x": 110,
              "y": 350
            }
          ]
        }
      ],
      "container": "loc_1"
    },
    {
      "id": "e5",
      "sources": [
        "5"
      ],
      "targets": [
        "6"
      ],
      "sections": [
        {
          "id": "e5_s0",
          "startPoint": {
            "x": 110,
            "y": 485
          },
          "endPoint": {
            "x": 110,
            "y": 560
          },
          "bendPoints": [
            {
              "x": 110,
              "y": 485
            }
          ]
        }
      ],
      "container": "loc_1"
    },
    {
      "id": "e6",
      "sources": [
        "6"
      ],
      "targets": [
        "7"
      ],
      "sections": [
        {
          "id": "e6_s0",
          "startPoint": {
            "x": 110,
            "y": 620
          },
          "endPoint": {
            "x": 110,
            "y": 695
          },
          "bendPoints": [
            {
              "x": 110,
              "y": 620
            }
          ]
        }
      ],
      "container": "loc_1"
    },
    {
      "id": "e7",
      "sources": [
        "7"
      ],
      "targets": [
        "8"
      ],
      "container": "root"
    },
    {
      "id": "e8",
      "sources": [
        "8"
      ],
      "targets": [
        "9"
      ],
      "sections": [
        {
          "id": "e8_s0",
          "startPoint": {
            "x": 200,
            "y": 110
          },
          "endPoint": {
            "x": 200,
            "y": 185
          },
          "bendPoints": [
            {
              "x": 200,
              "y": 110
            }
          ]
        }
      ],
      "container": "loc_0"
    }
  ],
  "layoutOptions": {
    "elk.algorithm": "mrtree",
    "elk.direction": "DOWN",
    "elk.hierarchyHandling": "INCLUDE_CHILDREN",
    "elk.spacing.nodeNode": "75",
    "elk.spacing.edgeNode": "0",
    "elk.spacing.edgeEdge": "10",
    "elk.spacing.componentComponent": "60",
    "elk.layered.spacing.nodeNodeBetweenLayers": "25"
  },
  "$H": 394,
  "x": 0,
  "y": 0,
  "width": 555,
  "height": 815
}
 [VisState] 📏 Auto-updated expandedDimensions for loc_0: 220x505
 [ELKBridge] 📏 Updated container loc_0 layout: {"position":{"x":130,"y":407.5},"dimensions":{"width":220,"height":505}}
 [ELKBridge] 🔧 Attempting to update node 9 with ELK coords (110, 185)
 [ELKBridge] 📏 Calling setNodeLayout for 9 with: Object
 [ELKBridge] ✅ Successfully updated node 9
 [ELKBridge] 🔧 Attempting to update node 1 with ELK coords (110, 455)
 [ELKBridge] 📏 Calling setNodeLayout for 1 with: Object
 [ELKBridge] ✅ Successfully updated node 1
 [ELKBridge] 🔧 Attempting to update node 8 with ELK coords (110, 50)
 [ELKBridge] 📏 Calling setNodeLayout for 8 with: Object
 [ELKBridge] ✅ Successfully updated node 8
 [ELKBridge] 🔧 Attempting to update node 0 with ELK coords (110, 320)
 [ELKBridge] 📏 Calling setNodeLayout for 0 with: Object
 [ELKBridge] ✅ Successfully updated node 0
 [VisState] 📏 Auto-updated expandedDimensions for loc_1: 220x775
 [ELKBridge] 📏 Updated container loc_1 layout: {"position":{"x":425,"y":407.5},"dimensions":{"width":220,"height":775}}
 [ELKBridge] 🔧 Attempting to update node 6 with ELK coords (20, 560)
 [ELKBridge] 📏 Calling setNodeLayout for 6 with: Object
 [ELKBridge] ✅ Successfully updated node 6
 [ELKBridge] 🔧 Attempting to update node 3 with ELK coords (20, 155)
 [ELKBridge] 📏 Calling setNodeLayout for 3 with: Object
 [ELKBridge] ✅ Successfully updated node 3
 [ELKBridge] 🔧 Attempting to update node 7 with ELK coords (20, 695)
 [ELKBridge] 📏 Calling setNodeLayout for 7 with: Object
 [ELKBridge] ✅ Successfully updated node 7
 [ELKBridge] 🔧 Attempting to update node 5 with ELK coords (20, 425)
 [ELKBridge] 📏 Calling setNodeLayout for 5 with: Object
 [ELKBridge] ✅ Successfully updated node 5
 [ELKBridge] 🔧 Attempting to update node 2 with ELK coords (20, 20)
 [ELKBridge] 📏 Calling setNodeLayout for 2 with: Object
 [ELKBridge] ✅ Successfully updated node 2
 [ELKBridge] 🔧 Attempting to update node 4 with ELK coords (20, 290)
 [ELKBridge] 📏 Calling setNodeLayout for 4 with: Object
 [ELKBridge] ✅ Successfully updated node 4
 --- ELKBRIDGE_EDGE_PROCESSING_START ---
 [ELKBridge] 🔍 Processing 9 edges for sections
 [ELKBridge] 🔧 About to set layout for edge e0 with 1 sections
 [ELKBridge] 📍 Updated edge e0 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e0 layout after update: Object
 [ELKBridge] 📍 Edge e1 has no sections (cross-container edge)
 [ELKBridge] 🔧 About to set layout for edge e2 with 1 sections
 [ELKBridge] 📍 Updated edge e2 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e2 layout after update: Object
 [ELKBridge] 🔧 About to set layout for edge e3 with 1 sections
 [ELKBridge] 📍 Updated edge e3 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e3 layout after update: Object
 [ELKBridge] 🔧 About to set layout for edge e4 with 1 sections
 [ELKBridge] 📍 Updated edge e4 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e4 layout after update: Object
 [ELKBridge] 🔧 About to set layout for edge e5 with 1 sections
 [ELKBridge] 📍 Updated edge e5 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e5 layout after update: Object
 [ELKBridge] 🔧 About to set layout for edge e6 with 1 sections
 [ELKBridge] 📍 Updated edge e6 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e6 layout after update: Object
 [ELKBridge] 📍 Edge e7 has no sections (cross-container edge)
 [ELKBridge] 🔧 About to set layout for edge e8 with 1 sections
 [ELKBridge] 📍 Updated edge e8 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e8 layout after update: Object
 --- ELKBRIDGE_EDGE_PROCESSING_END ---
 [ELKBridge] ✅ Applied all ELK results to VisState
 [ReactFlowConverter] 🔄 Converting with bridge architecture...
 [ReactFlowBridge] 🔄 Converting VisState to ReactFlow format
 [ReactFlowBridge] 📦 Container loc_0: collapsed=false, ELK=(130, 407.5), ReactFlow=(130, 407.5), size=220x505
 [ReactFlowBridge] 📦 Container loc_1: collapsed=false, ELK=(425, 407.5), ReactFlow=(425, 407.5), size=220x775
 [ReactFlowBridge] 🔍 Node 6 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 560) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 6: parent=loc_1, ELK=(20, 560), ReactFlow=(20, 560)
 [ReactFlowBridge] 🔍 Node 3 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 155) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 3: parent=loc_1, ELK=(20, 155), ReactFlow=(20, 155)
 [ReactFlowBridge] 🔍 Node 7 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 695) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 7: parent=loc_1, ELK=(20, 695), ReactFlow=(20, 695)
 [ReactFlowBridge] 🔍 Node 9 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 185) are already relative to container loc_0 - using as-is
 [ReactFlowBridge] 🔘 Node 9: parent=loc_0, ELK=(110, 185), ReactFlow=(110, 185)
 [ReactFlowBridge] 🔍 Node 5 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 425) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 5: parent=loc_1, ELK=(20, 425), ReactFlow=(20, 425)
 [ReactFlowBridge] 🔍 Node 2 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 20) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 2: parent=loc_1, ELK=(20, 20), ReactFlow=(20, 20)
 [ReactFlowBridge] 🔍 Node 1 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 455) are already relative to container loc_0 - using as-is
 [ReactFlowBridge] 🔘 Node 1: parent=loc_0, ELK=(110, 455), ReactFlow=(110, 455)
 [ReactFlowBridge] 🔍 Node 4 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 290) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 4: parent=loc_1, ELK=(20, 290), ReactFlow=(20, 290)
 [ReactFlowBridge] 🔍 Node 8 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 50) are already relative to container loc_0 - using as-is
 [ReactFlowBridge] 🔘 Node 8: parent=loc_0, ELK=(110, 50), ReactFlow=(110, 50)
 [ReactFlowBridge] 🔍 Node 0 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 320) are already relative to container loc_0 - using as-is
 [ReactFlowBridge] 🔘 Node 0: parent=loc_0, ELK=(110, 320), ReactFlow=(110, 320)
 [ReactFlowBridge] 🔍 Debug edge e0: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e0: Object
 [ReactFlowBridge] 🔍 Debug edge e1: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e1: Object
 [ReactFlowBridge] 🔍 Debug edge e2: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e2: Object
 [ReactFlowBridge] 🔍 Debug edge e3: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e3: Object
 [ReactFlowBridge] 🔍 Debug edge e4: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e4: Object
 [ReactFlowBridge] 🔍 Debug edge e5: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e5: Object
 [ReactFlowBridge] 🔍 Debug edge e6: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e6: Object
 [ReactFlowBridge] 🔍 Debug edge e7: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e7: Object
 [ReactFlowBridge] 🔍 Debug edge e8: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e8: Object
 [FlowGraph] ✅ Layout change applied successfully
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 Loading visualizer-v4 components...
 Loading VisState...
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 Loading FlowGraph...
 Loading constants...
 Loading JSONParser...
 Loading layout...
 Loading InfoPanel...
 Loading LayoutControls...
 Loading FileDropZone...
 Processing uploaded file: Object
 ✅ File loaded successfully
 [FlowGraph] 🎨 Color palette changed to: Set3
 [FlowGraph] 🔄 Visualization state changed, updating...
 [ELKBridge] 🚀 Starting ELK layout from VisState
 [ELKBridge] 📋 Extracted from VisState: Object
 [ELKBridge] 🔨 Building ELK graph with 10 nodes, 2 containers, 9 edges
 [ELKBridge] 🔍 Available nodes: Array(10)
 [ELKBridge] 🔍 Available containers: Array(2)
 [ELKBridge] 🔍 Found 2 root containers: Array(2)
 [ELKBridge] 🔍 Container loc_0 has 4 nodes and 0 containers: Object
 [ELKBridge] 🏗️ Built hierarchy for loc_0: {
  "id": "loc_0",
  "width": 400,
  "height": 300,
  "children": [
    {
      "id": "9",
      "width": 180,
      "height": 60
    },
    {
      "id": "1",
      "width": 180,
      "height": 60
    },
    {
      "id": "8",
      "width": 180,
      "height": 60
    },
    {
      "id": "0",
      "width": 180,
      "height": 60
    }
  ],
  "layoutOptions": {
    "elk.algorithm": "mrtree",
    "elk.direction": "DOWN",
    "elk.hierarchyHandling": "INCLUDE_CHILDREN",
    "elk.spacing.nodeNode": "75",
    "elk.spacing.edgeNode": "0",
    "elk.spacing.edgeEdge": "10",
    "elk.spacing.componentComponent": "60",
    "elk.layered.spacing.nodeNodeBetweenLayers": "25"
  }
}
 [ELKBridge] 🔍 Container loc_1 has 6 nodes and 0 containers: Object
 [ELKBridge] 🏗️ Built hierarchy for loc_1: {
  "id": "loc_1",
  "width": 400,
  "height": 300,
  "children": [
    {
      "id": "6",
      "width": 180,
      "height": 60
    },
    {
      "id": "3",
      "width": 180,
      "height": 60
    },
    {
      "id": "7",
      "width": 180,
      "height": 60
    },
    {
      "id": "5",
      "width": 180,
      "height": 60
    },
    {
      "id": "2",
      "width": 180,
      "height": 60
    },
    {
      "id": "4",
      "width": 180,
      "height": 60
    }
  ],
  "layoutOptions": {
    "elk.algorithm": "mrtree",
    "elk.direction": "DOWN",
    "elk.hierarchyHandling": "INCLUDE_CHILDREN",
    "elk.spacing.nodeNode": "75",
    "elk.spacing.edgeNode": "0",
    "elk.spacing.edgeEdge": "10",
    "elk.spacing.componentComponent": "60",
    "elk.layered.spacing.nodeNodeBetweenLayers": "25"
  }
}
 [ELKBridge] 🔍 Final elkNodes array length: 2
 [ELKBridge] 🔍 Found 0 top-level nodes: Array(0)
 🎯 Canvas size changed, auto-fitting view...
 [ELKBridge] 📊 Sending to ELK children count: 2
 [ELKBridge] 📊 ELK Graph structure: Object
 [ELKBridge] ⏳ Running ELK layout - this may take a moment for large graphs...
 [ELKBridge] ✅ ELK layout complete
 [ELKBridge] 📝 Applying ELK results back to VisState
 [ELKBridge] 🔍 ELK Result Structure: {
  "id": "root",
  "children": [
    {
      "id": "loc_0",
      "width": 220,
      "height": 505,
      "children": [
        {
          "id": "9",
          "width": 180,
          "height": 60,
          "$H": 447,
          "x": 110,
          "y": 185
        },
        {
          "id": "1",
          "width": 180,
          "height": 60,
          "$H": 449,
          "x": 110,
          "y": 455
        },
        {
          "id": "8",
          "width": 180,
          "height": 60,
          "$H": 451,
          "x": 110,
          "y": 50
        },
        {
          "id": "0",
          "width": 180,
          "height": 60,
          "$H": 453,
          "x": 110,
          "y": 320
        }
      ],
      "layoutOptions": {
        "elk.algorithm": "mrtree",
        "elk.direction": "DOWN",
        "elk.hierarchyHandling": "INCLUDE_CHILDREN",
        "elk.spacing.nodeNode": "75",
        "elk.spacing.edgeNode": "0",
        "elk.spacing.edgeEdge": "10",
        "elk.spacing.componentComponent": "60",
        "elk.layered.spacing.nodeNodeBetweenLayers": "25"
      },
      "$H": 445,
      "x": 130,
      "y": 407.5
    },
    {
      "id": "loc_1",
      "width": 220,
      "height": 775,
      "children": [
        {
          "id": "6",
          "width": 180,
          "height": 60,
          "$H": 457,
          "x": 20,
          "y": 560
        },
        {
          "id": "3",
          "width": 180,
          "height": 60,
          "$H": 459,
          "x": 20,
          "y": 155
        },
        {
          "id": "7",
          "width": 180,
          "height": 60,
          "$H": 461,
          "x": 20,
          "y": 695
        },
        {
          "id": "5",
          "width": 180,
          "height": 60,
          "$H": 463,
          "x": 20,
          "y": 425
        },
        {
          "id": "2",
          "width": 180,
          "height": 60,
          "$H": 465,
          "x": 20,
          "y": 20
        },
        {
          "id": "4",
          "width": 180,
          "height": 60,
          "$H": 467,
          "x": 20,
          "y": 290
        }
      ],
      "layoutOptions": {
        "elk.algorithm": "mrtree",
        "elk.direction": "DOWN",
        "elk.hierarchyHandling": "INCLUDE_CHILDREN",
        "elk.spacing.nodeNode": "75",
        "elk.spacing.edgeNode": "0",
        "elk.spacing.edgeEdge": "10",
        "elk.spacing.componentComponent": "60",
        "elk.layered.spacing.nodeNodeBetweenLayers": "25"
      },
      "$H": 455,
      "x": 425,
      "y": 407.5
    }
  ],
  "edges": [
    {
      "id": "e0",
      "sources": [
        "0"
      ],
      "targets": [
        "1"
      ],
      "sections": [
        {
          "id": "e0_s0",
          "startPoint": {
            "x": 200,
            "y": 380
          },
          "endPoint": {
            "x": 200,
            "y": 455
          },
          "bendPoints": [
            {
              "x": 200,
              "y": 380
            }
          ]
        }
      ],
      "container": "loc_0"
    },
    {
      "id": "e1",
      "sources": [
        "1"
      ],
      "targets": [
        "2"
      ],
      "container": "root"
    },
    {
      "id": "e2",
      "sources": [
        "2"
      ],
      "targets": [
        "3"
      ],
      "sections": [
        {
          "id": "e2_s0",
          "startPoint": {
            "x": 110,
            "y": 80
          },
          "endPoint": {
            "x": 110,
            "y": 155
          },
          "bendPoints": [
            {
              "x": 110,
              "y": 80
            }
          ]
        }
      ],
      "container": "loc_1"
    },
    {
      "id": "e3",
      "sources": [
        "3"
      ],
      "targets": [
        "4"
      ],
      "sections": [
        {
          "id": "e3_s0",
          "startPoint": {
            "x": 110,
            "y": 215
          },
          "endPoint": {
            "x": 110,
            "y": 290
          },
          "bendPoints": [
            {
              "x": 110,
              "y": 215
            }
          ]
        }
      ],
      "container": "loc_1"
    },
    {
      "id": "e4",
      "sources": [
        "4"
      ],
      "targets": [
        "5"
      ],
      "sections": [
        {
          "id": "e4_s0",
          "startPoint": {
            "x": 110,
            "y": 350
          },
          "endPoint": {
            "x": 110,
            "y": 425
          },
          "bendPoints": [
            {
              "x": 110,
              "y": 350
            }
          ]
        }
      ],
      "container": "loc_1"
    },
    {
      "id": "e5",
      "sources": [
        "5"
      ],
      "targets": [
        "6"
      ],
      "sections": [
        {
          "id": "e5_s0",
          "startPoint": {
            "x": 110,
            "y": 485
          },
          "endPoint": {
            "x": 110,
            "y": 560
          },
          "bendPoints": [
            {
              "x": 110,
              "y": 485
            }
          ]
        }
      ],
      "container": "loc_1"
    },
    {
      "id": "e6",
      "sources": [
        "6"
      ],
      "targets": [
        "7"
      ],
      "sections": [
        {
          "id": "e6_s0",
          "startPoint": {
            "x": 110,
            "y": 620
          },
          "endPoint": {
            "x": 110,
            "y": 695
          },
          "bendPoints": [
            {
              "x": 110,
              "y": 620
            }
          ]
        }
      ],
      "container": "loc_1"
    },
    {
      "id": "e7",
      "sources": [
        "7"
      ],
      "targets": [
        "8"
      ],
      "container": "root"
    },
    {
      "id": "e8",
      "sources": [
        "8"
      ],
      "targets": [
        "9"
      ],
      "sections": [
        {
          "id": "e8_s0",
          "startPoint": {
            "x": 200,
            "y": 110
          },
          "endPoint": {
            "x": 200,
            "y": 185
          },
          "bendPoints": [
            {
              "x": 200,
              "y": 110
            }
          ]
        }
      ],
      "container": "loc_0"
    }
  ],
  "layoutOptions": {
    "elk.algorithm": "mrtree",
    "elk.direction": "DOWN",
    "elk.hierarchyHandling": "INCLUDE_CHILDREN",
    "elk.spacing.nodeNode": "75",
    "elk.spacing.edgeNode": "0",
    "elk.spacing.edgeEdge": "10",
    "elk.spacing.componentComponent": "60",
    "elk.layered.spacing.nodeNodeBetweenLayers": "25"
  },
  "$H": 443,
  "x": 0,
  "y": 0,
  "width": 555,
  "height": 815
}
 [VisState] 📏 Auto-updated expandedDimensions for loc_0: 220x505
 [ELKBridge] 📏 Updated container loc_0 layout: {"position":{"x":130,"y":407.5},"dimensions":{"width":220,"height":505}}
 [ELKBridge] 🔧 Attempting to update node 9 with ELK coords (110, 185)
 [ELKBridge] 📏 Calling setNodeLayout for 9 with: Object
 [ELKBridge] ✅ Successfully updated node 9
 [ELKBridge] 🔧 Attempting to update node 1 with ELK coords (110, 455)
 [ELKBridge] 📏 Calling setNodeLayout for 1 with: Object
 [ELKBridge] ✅ Successfully updated node 1
 [ELKBridge] 🔧 Attempting to update node 8 with ELK coords (110, 50)
 [ELKBridge] 📏 Calling setNodeLayout for 8 with: Object
 [ELKBridge] ✅ Successfully updated node 8
 [ELKBridge] 🔧 Attempting to update node 0 with ELK coords (110, 320)
 [ELKBridge] 📏 Calling setNodeLayout for 0 with: Object
 [ELKBridge] ✅ Successfully updated node 0
 [VisState] 📏 Auto-updated expandedDimensions for loc_1: 220x775
 [ELKBridge] 📏 Updated container loc_1 layout: {"position":{"x":425,"y":407.5},"dimensions":{"width":220,"height":775}}
 [ELKBridge] 🔧 Attempting to update node 6 with ELK coords (20, 560)
 [ELKBridge] 📏 Calling setNodeLayout for 6 with: Object
 [ELKBridge] ✅ Successfully updated node 6
 [ELKBridge] 🔧 Attempting to update node 3 with ELK coords (20, 155)
 [ELKBridge] 📏 Calling setNodeLayout for 3 with: Object
 [ELKBridge] ✅ Successfully updated node 3
 [ELKBridge] 🔧 Attempting to update node 7 with ELK coords (20, 695)
 [ELKBridge] 📏 Calling setNodeLayout for 7 with: Object
 [ELKBridge] ✅ Successfully updated node 7
 [ELKBridge] 🔧 Attempting to update node 5 with ELK coords (20, 425)
 [ELKBridge] 📏 Calling setNodeLayout for 5 with: Object
 [ELKBridge] ✅ Successfully updated node 5
 [ELKBridge] 🔧 Attempting to update node 2 with ELK coords (20, 20)
 [ELKBridge] 📏 Calling setNodeLayout for 2 with: Object
 [ELKBridge] ✅ Successfully updated node 2
 [ELKBridge] 🔧 Attempting to update node 4 with ELK coords (20, 290)
 [ELKBridge] 📏 Calling setNodeLayout for 4 with: Object
 [ELKBridge] ✅ Successfully updated node 4
 --- ELKBRIDGE_EDGE_PROCESSING_START ---
 [ELKBridge] 🔍 Processing 9 edges for sections
 [ELKBridge] 🔧 About to set layout for edge e0 with 1 sections
 [ELKBridge] 📍 Updated edge e0 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e0 layout after update: Object
 [ELKBridge] 📍 Edge e1 has no sections (cross-container edge)
 [ELKBridge] 🔧 About to set layout for edge e2 with 1 sections
 [ELKBridge] 📍 Updated edge e2 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e2 layout after update: Object
 [ELKBridge] 🔧 About to set layout for edge e3 with 1 sections
 [ELKBridge] 📍 Updated edge e3 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e3 layout after update: Object
 [ELKBridge] 🔧 About to set layout for edge e4 with 1 sections
 [ELKBridge] 📍 Updated edge e4 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e4 layout after update: Object
 [ELKBridge] 🔧 About to set layout for edge e5 with 1 sections
 [ELKBridge] 📍 Updated edge e5 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e5 layout after update: Object
 [ELKBridge] 🔧 About to set layout for edge e6 with 1 sections
 [ELKBridge] 📍 Updated edge e6 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e6 layout after update: Object
 [ELKBridge] 📍 Edge e7 has no sections (cross-container edge)
 [ELKBridge] 🔧 About to set layout for edge e8 with 1 sections
 [ELKBridge] 📍 Updated edge e8 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e8 layout after update: Object
 --- ELKBRIDGE_EDGE_PROCESSING_END ---
 [ELKBridge] ✅ Applied all ELK results to VisState
 [ReactFlowConverter] 🔄 Converting with bridge architecture...
 [ReactFlowBridge] 🔄 Converting VisState to ReactFlow format
 [ReactFlowBridge] 📦 Container loc_0: collapsed=false, ELK=(130, 407.5), ReactFlow=(130, 407.5), size=220x505
 [ReactFlowBridge] 📦 Container loc_1: collapsed=false, ELK=(425, 407.5), ReactFlow=(425, 407.5), size=220x775
 [ReactFlowBridge] 🔍 Node 6 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 560) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 6: parent=loc_1, ELK=(20, 560), ReactFlow=(20, 560)
 [ReactFlowBridge] 🔍 Node 3 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 155) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 3: parent=loc_1, ELK=(20, 155), ReactFlow=(20, 155)
 [ReactFlowBridge] 🔍 Node 7 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 695) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 7: parent=loc_1, ELK=(20, 695), ReactFlow=(20, 695)
 [ReactFlowBridge] 🔍 Node 9 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 185) are already relative to container loc_0 - using as-is
 [ReactFlowBridge] 🔘 Node 9: parent=loc_0, ELK=(110, 185), ReactFlow=(110, 185)
 [ReactFlowBridge] 🔍 Node 5 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 425) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 5: parent=loc_1, ELK=(20, 425), ReactFlow=(20, 425)
 [ReactFlowBridge] 🔍 Node 2 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 20) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 2: parent=loc_1, ELK=(20, 20), ReactFlow=(20, 20)
 [ReactFlowBridge] 🔍 Node 1 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 455) are already relative to container loc_0 - using as-is
 [ReactFlowBridge] 🔘 Node 1: parent=loc_0, ELK=(110, 455), ReactFlow=(110, 455)
 [ReactFlowBridge] 🔍 Node 4 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 290) are already relative to container loc_1 - using as-is
 [ReactFlowBridge] 🔘 Node 4: parent=loc_1, ELK=(20, 290), ReactFlow=(20, 290)
 [ReactFlowBridge] 🔍 Node 8 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 50) are already relative to container loc_0 - using as-is
 [ReactFlowBridge] 🔘 Node 8: parent=loc_0, ELK=(110, 50), ReactFlow=(110, 50)
 [ReactFlowBridge] 🔍 Node 0 layout: Object raw node coords: Object
 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 320) are already relative to container loc_0 - using as-is
 [ReactFlowBridge] 🔘 Node 0: parent=loc_0, ELK=(110, 320), ReactFlow=(110, 320)
 [ReactFlowBridge] 🔍 Debug edge e0: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e0: Object
 [ReactFlowBridge] 🔍 Debug edge e1: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e1: Object
 [ReactFlowBridge] 🔍 Debug edge e2: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e2: Object
 [ReactFlowBridge] 🔍 Debug edge e3: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e3: Object
 [ReactFlowBridge] 🔍 Debug edge e4: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e4: Object
 [ReactFlowBridge] 🔍 Debug edge e5: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e5: Object
 [ReactFlowBridge] 🔍 Debug edge e6: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e6: Object
 [ReactFlowBridge] 🔍 Debug edge e7: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e7: Object
 [ReactFlowBridge] 🔍 Debug edge e8: Object
 [ReactFlowBridge] ✅ Created ReactFlow edge e8: Object
 [FlowGraph] ✅ Updated ReactFlow data: Object
 [FlowGraph] 🔍 CONTAINER NODES BEING PASSED TO REACTFLOW:
 [FlowGraph] 📦 loc_0: Object
 [FlowGraph] 📦 loc_1: Object
 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [FlowGraph] 🎯 Manual fit view called
 ✅ Auto-fit applied after canvas resize
 [FlowGraph] 🎯 Auto-fit applied
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
 [FlowGraph] 🎯 Auto-fit applied after drag
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 Loading visualizer-v4 components...
 Loading VisState...
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 Loading FlowGraph...
 Loading constants...
 Loading JSONParser...
 Loading layout...
 Loading InfoPanel...
 Loading LayoutControls...
 Loading FileDropZone...
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 🖥️ Window dimensions: Object
 📐 Calculated canvas height: 949
 Processing uploaded file: Object
 ✅ File loaded successfully
 [FlowGraph] 🎨 Color palette changed to: Set3
 [FlowGraph] 🔄 Visualization state changed, updating...
 [ELKBridge] 🚀 Starting ELK layout from VisState
 [ELKBridge] 📋 Extracted from VisState: Object
 [ELKBridge] 🔨 Building ELK graph with 10 nodes, 2 containers, 9 edges
 [ELKBridge] 🔍 Available nodes: Array(10)
 [ELKBridge] 🔍 Available containers: Array(2)
 [ELKBridge] 🔍 Found 2 root containers: Array(2)
 [ELKBridge] 🔍 Container loc_0 has 4 nodes and 0 containers: Object
 [ELKBridge] 🏗️ Built hierarchy for loc_0: {
  "id": "loc_0",
  "width": 400,
  "height": 300,
  "children": [
    {
      "id": "9",
      "width": 180,
      "height": 60
    },
    {
      "id": "1",
      "width": 180,
      "height": 60
    },
    {
      "id": "8",
      "width": 180,
      "height": 60
    },
    {
      "id": "0",
      "width": 180,
      "height": 60
    }
  ],
  "layoutOptions": {
    "elk.algorithm": "mrtree",
    "elk.direction": "DOWN",
    "elk.hierarchyHandling": "INCLUDE_CHILDREN",
    "elk.spacing.nodeNode": "75",
    "elk.spacing.edgeNode": "0",
    "elk.spacing.edgeEdge": "10",
    "elk.spacing.componentComponent": "60",
    "elk.layered.spacing.nodeNodeBetweenLayers": "25"
  }
}
 [ELKBridge] 🔍 Container loc_1 has 6 nodes and 0 containers: Object
 [ELKBridge] 🏗️ Built hierarchy for loc_1: {
  "id": "loc_1",
  "width": 400,
  "height": 300,
  "children": [
    {
      "id": "6",
      "width": 180,
      "height": 60
    },
    {
      "id": "3",
      "width": 180,
      "height": 60
    },
    {
      "id": "7",
      "width": 180,
      "height": 60
    },
    {
      "id": "5",
      "width": 180,
      "height": 60
    },
    {
      "id": "2",
      "width": 180,
      "height": 60
    },
    {
      "id": "4",
      "width": 180,
      "height": 60
    }
  ],
  "layoutOptions": {
    "elk.algorithm": "mrtree",
    "elk.direction": "DOWN",
    "elk.hierarchyHandling": "INCLUDE_CHILDREN",
    "elk.spacing.nodeNode": "75",
    "elk.spacing.edgeNode": "0",
    "elk.spacing.edgeEdge": "10",
    "elk.spacing.componentComponent": "60",
    "elk.layered.spacing.nodeNodeBetweenLayers": "25"
  }
}
 [ELKBridge] 🔍 Final elkNodes array length: 2
 [ELKBridge] 🔍 Found 0 top-level nodes: Array(0)
 🎯 Canvas size changed, attempting auto-fit... Object
 [ELKBridge] 📊 Sending to ELK children count: 2
 [ELKBridge] 📊 ELK Graph structure: Object
 [ELKBridge] ⏳ Running ELK layout - this may take a moment for large graphs...
 [ELKBridge] ✅ ELK layout complete
 [ELKBridge] 📝 Applying ELK results back to VisState
 [ELKBridge] 🔍 ELK Result Structure: {
  "id": "root",
  "children": [
    {
      "id": "loc_0",
      "width": 220,
      "height": 505,
      "children": [
        {
          "id": "9",
          "width": 180,
          "height": 60,
          "$H": 496,
          "x": 110,
          "y": 185
        },
        {
          "id": "1",
          "width": 180,
          "height": 60,
          "$H": 498,
          "x": 110,
          "y": 455
        },
        {
          "id": "8",
          "width": 180,
          "height": 60,
          "$H": 500,
          "x": 110,
          "y": 50
        },
        {
          "id": "0",
          "width": 180,
          "height": 60,
          "$H": 502,
          "x": 110,
          "y": 320
        }
      ],
      "layoutOptions": {
        "elk.algorithm": "mrtree",
        "elk.direction": "DOWN",
        "elk.hierarchyHandling": "INCLUDE_CHILDREN",
        "elk.spacing.nodeNode": "75",
        "elk.spacing.edgeNode": "0",
        "elk.spacing.edgeEdge": "10",
        "elk.spacing.componentComponent": "60",
        "elk.layered.spacing.nodeNodeBetweenLayers": "25"
      },
      "$H": 494,
      "x": 130,
      "y": 407.5
    },
    {
      "id": "loc_1",
      "width": 220,
      "height": 775,
      "children": [
        {
          "id": "6",
          "width": 180,
          "height": 60,
          "$H": 506,
          "x": 20,
          "y": 560
        },
        {
          "id": "3",
          "width": 180,
          "height": 60,
          "$H": 508,
          "x": 20,
          "y": 155
        },
        {
          "id": "7",
          "width": 180,
          "height": 60,
          "$H": 510,
          "x": 20,
          "y": 695
        },
        {
          "id": "5",
          "width": 180,
          "height": 60,
          "$H": 512,
          "x": 20,
          "y": 425
        },
        {
          "id": "2",
          "width": 180,
          "height": 60,
          "$H": 514,
          "x": 20,
          "y": 20
        },
        {
          "id": "4",
          "width": 180,
          "height": 60,
          "$H": 516,
          "x": 20,
          "y": 290
        }
      ],
      "layoutOptions": {
        "elk.algorithm": "mrtree",
        "elk.direction": "DOWN",
        "elk.hierarchyHandling": "INCLUDE_CHILDREN",
        "elk.spacing.nodeNode": "75",
        "elk.spacing.edgeNode": "0",
        "elk.spacing.edgeEdge": "10",
        "elk.spacing.componentComponent": "60",
        "elk.layered.spacing.nodeNodeBetweenLayers": "25"
      },
      "$H": 504,
      "x": 425,
      "y": 407.5
    }
  ],
  "edges": [
    {
      "id": "e0",
      "sources": [
        "0"
      ],
      "targets": [
        "1"
      ],
      "sections": [
        {
          "id": "e0_s0",
          "startPoint": {
            "x": 200,
            "y": 380
          },
          "endPoint": {
            "x": 200,
            "y": 455
          },
          "bendPoints": [
            {
              "x": 200,
              "y": 380
            }
          ]
        }
      ],
      "container": "loc_0"
    },
    {
      "id": "e1",
      "sources": [
        "1"
      ],
      "targets": [
        "2"
      ],
      "container": "root"
    },
    {
      "id": "e2",
      "sources": [
        "2"
      ],
      "targets": [
        "3"
      ],
      "sections": [
        {
          "id": "e2_s0",
          "startPoint": {
            "x": 110,
            "y": 80
          },
          "endPoint": {
            "x": 110,
            "y": 155
          },
          "bendPoints": [
            {
              "x": 110,
              "y": 80
            }
          ]
        }
      ],
      "container": "loc_1"
    },
    {
      "id": "e3",
      "sources": [
        "3"
      ],
      "targets": [
        "4"
      ],
      "sections": [
        {
          "id": "e3_s0",
          "startPoint": {
            "x": 110,
            "y": 215
          },
          "endPoint": {
            "x": 110,
            "y": 290
          },
          "bendPoints": [
            {
              "x": 110,
              "y": 215
            }
          ]
        }
      ],
      "container": "loc_1"
    },
    {
      "id": "e4",
      "sources": [
        "4"
      ],
      "targets": [
        "5"
      ],
      "sections": [
        {
          "id": "e4_s0",
          "startPoint": {
            "x": 110,
            "y": 350
          },
          "endPoint": {
            "x": 110,
            "y": 425
          },
          "bendPoints": [
            {
              "x": 110,
              "y": 350
            }
          ]
        }
      ],
      "container": "loc_1"
    },
    {
      "id": "e5",
      "sources": [
        "5"
      ],
      "targets": [
        "6"
      ],
      "sections": [
        {
          "id": "e5_s0",
          "startPoint": {
            "x": 110,
            "y": 485
          },
          "endPoint": {
            "x": 110,
            "y": 560
          },
          "bendPoints": [
            {
              "x": 110,
              "y": 485
            }
          ]
        }
      ],
      "container": "loc_1"
    },
    {
      "id": "e6",
      "sources": [
        "6"
      ],
      "targets": [
        "7"
      ],
      "sections": [
        {
          "id": "e6_s0",
          "startPoint": {
            "x": 110,
            "y": 620
          },
          "endPoint": {
            "x": 110,
            "y": 695
          },
          "bendPoints": [
            {
              "x": 110,
              "y": 620
            }
          ]
        }
      ],
      "container": "loc_1"
    },
    {
      "id": "e7",
      "sources": [
        "7"
      ],
      "targets": [
        "8"
      ],
      "container": "root"
    },
    {
      "id": "e8",
      "sources": [
        "8"
      ],
      "targets": [
        "9"
      ],
      "sections": [
        {
          "id": "e8_s0",
          "startPoint": {
            "x": 200,
            "y": 110
          },
          "endPoint": {
            "x": 200,
            "y": 185
          },
          "bendPoints": [
            {
              "x": 200,
              "y": 110
            }
          ]
        }
      ],
      "container": "loc_0"
    }
  ],
  "layoutOptions": {
    "elk.algorithm": "mrtree",
    "elk.direction": "DOWN",
    "elk.hierarchyHandling": "INCLUDE_CHILDREN",
    "elk.spacing.nodeNode": "75",
    "elk.spacing.edgeNode": "0",
    "elk.spacing.edgeEdge": "10",
    "elk.spacing.componentComponent": "60",
    "elk.layered.spacing.nodeNodeBetweenLayers": "25"
  },
  "$H": 492,
  "x": 0,
  "y": 0,
  "width": 555,
  "height": 815
}
 [VisState] 📏 Auto-updated expandedDimensions for loc_0: 220x505
 [ELKBridge] 📏 Updated container loc_0 layout: {"position":{"x":130,"y":407.5},"dimensions":{"width":220,"height":505}}
 [ELKBridge] 🔧 Attempting to update node 9 with ELK coords (110, 185)
 [ELKBridge] 📏 Calling setNodeLayout for 9 with: Object
 [ELKBridge] ✅ Successfully updated node 9
 [ELKBridge] 🔧 Attempting to update node 1 with ELK coords (110, 455)
 [ELKBridge] 📏 Calling setNodeLayout for 1 with: Object
 [ELKBridge] ✅ Successfully updated node 1
 [ELKBridge] 🔧 Attempting to update node 8 with ELK coords (110, 50)
 [ELKBridge] 📏 Calling setNodeLayout for 8 with: Object
 [ELKBridge] ✅ Successfully updated node 8
 [ELKBridge] 🔧 Attempting to update node 0 with ELK coords (110, 320)
 [ELKBridge] 📏 Calling setNodeLayout for 0 with: Object
 [ELKBridge] ✅ Successfully updated node 0
 [VisState] 📏 Auto-updated expandedDimensions for loc_1: 220x775
 [ELKBridge] 📏 Updated container loc_1 layout: {"position":{"x":425,"y":407.5},"dimensions":{"width":220,"height":775}}
 [ELKBridge] 🔧 Attempting to update node 6 with ELK coords (20, 560)
 [ELKBridge] 📏 Calling setNodeLayout for 6 with: Object
 [ELKBridge] ✅ Successfully updated node 6
 [ELKBridge] 🔧 Attempting to update node 3 with ELK coords (20, 155)
 [ELKBridge] 📏 Calling setNodeLayout for 3 with: Object
 [ELKBridge] ✅ Successfully updated node 3
 [ELKBridge] 🔧 Attempting to update node 7 with ELK coords (20, 695)
 [ELKBridge] 📏 Calling setNodeLayout for 7 with: Object
 [ELKBridge] ✅ Successfully updated node 7
 [ELKBridge] 🔧 Attempting to update node 5 with ELK coords (20, 425)
 [ELKBridge] 📏 Calling setNodeLayout for 5 with: Object
 [ELKBridge] ✅ Successfully updated node 5
 [ELKBridge] 🔧 Attempting to update node 2 with ELK coords (20, 20)
 [ELKBridge] 📏 Calling setNodeLayout for 2 with: Object
 [ELKBridge] ✅ Successfully updated node 2
 [ELKBridge] 🔧 Attempting to update node 4 with ELK coords (20, 290)
 [ELKBridge] 📏 Calling setNodeLayout for 4 with: Object
 [ELKBridge] ✅ Successfully updated node 4
 --- ELKBRIDGE_EDGE_PROCESSING_START ---
 [ELKBridge] 🔍 Processing 9 edges for sections
 [ELKBridge] 🔧 About to set layout for edge e0 with 1 sections
 [ELKBridge] 📍 Updated edge e0 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e0 layout after update: Object
 [ELKBridge] 📍 Edge e1 has no sections (cross-container edge)
 [ELKBridge] 🔧 About to set layout for edge e2 with 1 sections
 [ELKBridge] 📍 Updated edge e2 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e2 layout after update: Object
 [ELKBridge] 🔧 About to set layout for edge e3 with 1 sections
 [ELKBridge] 📍 Updated edge e3 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e3 layout after update: Object
 [ELKBridge] 🔧 About to set layout for edge e4 with 1 sections
 [ELKBridge] 📍 Updated edge e4 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e4 layout after update: Object
 [ELKBridge] 🔧 About to set layout for edge e5 with 1 sections
 [ELKBridge] 📍 Updated edge e5 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e5 layout after update: Object
 [ELKBridge] 🔧 About to set layout for edge e6 with 1 sections
 [ELKBridge] 📍 Updated edge e6 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e6 layout after update: Object
 [ELKBridge] 📍 Edge e7 has no sections (cross-container edge)
 [ELKBridge] 🔧 About to set layout for edge e8 with 1 sections
 [ELKBridge] 📍 Updated edge e8 with 1 sections
 [ELKBridge] 🔍 Debug: Edge e8 layout after update: Object
 --- ELKBRIDGE_EDGE_PROCESSING_END ---
 [ELKBridge] ✅ Applied all ELK results to VisState
 [ReactFlowConverter] 🔄 Converting with bridge architecture...
 [ReactFlowBridge] 🔄 Converting VisState to ReactFlow format
 [ReactFlowBridge] 📦 Container loc_0: collapsed=false, ELK=(130, 407.5), ReactFlow=(130, 407.5), size=220x505
 [ReactFlowBridge] 📦 Container loc_1: collapsed=false, ELK=(425, 407.5), ReactFlow=(425, 407.5), size=220x775
 [ReactFlowBridge] 🔍 Node 6 layout: Object raw node coords: Object
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
CoordinateTranslator.ts:67 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 560) are already relative to container loc_1 - using as-is
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔘 Node 6: parent=loc_1, ELK=(20, 560), ReactFlow=(20, 560)
ReactFlowBridge.ts:181 [ReactFlowBridge] 🔍 Node 3 layout: Object raw node coords: Object
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
CoordinateTranslator.ts:67 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 155) are already relative to container loc_1 - using as-is
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔘 Node 3: parent=loc_1, ELK=(20, 155), ReactFlow=(20, 155)
ReactFlowBridge.ts:181 [ReactFlowBridge] 🔍 Node 7 layout: Object raw node coords: Object
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
CoordinateTranslator.ts:67 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 695) are already relative to container loc_1 - using as-is
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔘 Node 7: parent=loc_1, ELK=(20, 695), ReactFlow=(20, 695)
ReactFlowBridge.ts:181 [ReactFlowBridge] 🔍 Node 9 layout: Object raw node coords: Object
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
CoordinateTranslator.ts:67 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 185) are already relative to container loc_0 - using as-is
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔘 Node 9: parent=loc_0, ELK=(110, 185), ReactFlow=(110, 185)
ReactFlowBridge.ts:181 [ReactFlowBridge] 🔍 Node 5 layout: Object raw node coords: Object
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
CoordinateTranslator.ts:67 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 425) are already relative to container loc_1 - using as-is
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔘 Node 5: parent=loc_1, ELK=(20, 425), ReactFlow=(20, 425)
ReactFlowBridge.ts:181 [ReactFlowBridge] 🔍 Node 2 layout: Object raw node coords: Object
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
CoordinateTranslator.ts:67 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 20) are already relative to container loc_1 - using as-is
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔘 Node 2: parent=loc_1, ELK=(20, 20), ReactFlow=(20, 20)
ReactFlowBridge.ts:181 [ReactFlowBridge] 🔍 Node 1 layout: Object raw node coords: Object
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
CoordinateTranslator.ts:67 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 455) are already relative to container loc_0 - using as-is
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔘 Node 1: parent=loc_0, ELK=(110, 455), ReactFlow=(110, 455)
ReactFlowBridge.ts:181 [ReactFlowBridge] 🔍 Node 4 layout: Object raw node coords: Object
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔍 Parent container loc_1 info: Object
CoordinateTranslator.ts:67 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (20, 290) are already relative to container loc_1 - using as-is
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔘 Node 4: parent=loc_1, ELK=(20, 290), ReactFlow=(20, 290)
ReactFlowBridge.ts:181 [ReactFlowBridge] 🔍 Node 8 layout: Object raw node coords: Object
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
CoordinateTranslator.ts:67 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 50) are already relative to container loc_0 - using as-is
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔘 Node 8: parent=loc_0, ELK=(110, 50), ReactFlow=(110, 50)
ReactFlowBridge.ts:181 [ReactFlowBridge] 🔍 Node 0 layout: Object raw node coords: Object
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔍 Parent container loc_0 info: Object
CoordinateTranslator.ts:67 [CoordinateTranslator] ELK→ReactFlow: ELK child coordinates (110, 320) are already relative to container loc_0 - using as-is
ReactFlowBridge.ts:189 [ReactFlowBridge] 🔘 Node 0: parent=loc_0, ELK=(110, 320), ReactFlow=(110, 320)
ReactFlowBridge.ts:233 [ReactFlowBridge] 🔍 Debug edge e0: Object
ReactFlowBridge.ts:268 [ReactFlowBridge] ✅ Created ReactFlow edge e0: Object
ReactFlowBridge.ts:233 [ReactFlowBridge] 🔍 Debug edge e1: Object
ReactFlowBridge.ts:268 [ReactFlowBridge] ✅ Created ReactFlow edge e1: Object
ReactFlowBridge.ts:233 [ReactFlowBridge] 🔍 Debug edge e2: Object
ReactFlowBridge.ts:268 [ReactFlowBridge] ✅ Created ReactFlow edge e2: Object
ReactFlowBridge.ts:233 [ReactFlowBridge] 🔍 Debug edge e3: Object
ReactFlowBridge.ts:268 [ReactFlowBridge] ✅ Created ReactFlow edge e3: Object
ReactFlowBridge.ts:233 [ReactFlowBridge] 🔍 Debug edge e4: Object
ReactFlowBridge.ts:268 [ReactFlowBridge] ✅ Created ReactFlow edge e4: Object
ReactFlowBridge.ts:233 [ReactFlowBridge] 🔍 Debug edge e5: Object
ReactFlowBridge.ts:268 [ReactFlowBridge] ✅ Created ReactFlow edge e5: Object
ReactFlowBridge.ts:233 [ReactFlowBridge] 🔍 Debug edge e6: Object
ReactFlowBridge.ts:268 [ReactFlowBridge] ✅ Created ReactFlow edge e6: Object
ReactFlowBridge.ts:233 [ReactFlowBridge] 🔍 Debug edge e7: Object
ReactFlowBridge.ts:268 [ReactFlowBridge] ✅ Created ReactFlow edge e7: Object
ReactFlowBridge.ts:233 [ReactFlowBridge] 🔍 Debug edge e8: Object
ReactFlowBridge.ts:268 [ReactFlowBridge] ✅ Created ReactFlow edge e8: Object
FlowGraph.tsx:181 [FlowGraph] ✅ Updated ReactFlow data: Object
FlowGraph.tsx:215 [FlowGraph] 🔍 CONTAINER NODES BEING PASSED TO REACTFLOW:
FlowGraph.tsx:215 [FlowGraph] 📦 loc_0: Object
FlowGraph.tsx:215 [FlowGraph] 📦 loc_1: Object
nodes.tsx:103 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
nodes.tsx:103 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
nodes.tsx:103 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
nodes.tsx:103 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
nodes.tsx:103 [ContainerNode] 📏 Container loc_0: data.width=220, data.height=505, using 220x505
nodes.tsx:103 [ContainerNode] 📏 Container loc_1: data.width=220, data.height=775, using 220x775
FlowGraph.tsx:203 [FlowGraph] 🎯 Auto-fit applied
vis.js:399 ✅ Calling fitView through ref
FlowGraph.tsx:56 [FlowGraph] 🎯 Manual fit view called
vis.js:359 🖥️ Window dimensions: Object
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 1210, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 1180, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 1169, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 1112, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 1101, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 1084, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 1069, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 1046, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 1031, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 1017, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 1005, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 999, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 990, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 985, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 965, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 956, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 946, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 936, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 927, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 917, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 897, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 875, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 851, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 839, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 812, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 782, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 757, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 749, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 731, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 725, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 716, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
vis.js:359 🖥️ Window dimensions: {width: 712, height: 1029}
vis.js:372 📐 Calculated canvas height: 949
