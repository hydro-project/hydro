 Download the React DevTools for a better development experience: https://reactjs.org/link/react-devtools
 [HomePage] üîÑ Starting complete reset with groupingId: null
 [HomePage] üîë Setting new flowGraphKey: 1754346170180
 [HomePage] ‚úÖ Complete reset successful
 [HomePage] üîë Rendering FlowGraph with key: 1754346170180
 [FlowGraph] üîÑ Visualization state changed, updating...
 [ELKBridge] üöÄ Starting ELK layout from VisState
 [ELKBridge] üìã Extracted from VisState: {visibleNodes: 10, visibleContainers: 6, totalEdges: 9, regularEdges: 9, hyperEdges: 0}
 [ELKBridge] üî® Building ELK graph with 10 nodes, 6 containers, 9 edges
 [ELKBridge] üîç Available nodes: (10)¬†['6', '3', '7', '9', '5', '2', '1', '4', '8', '0']
 [ELKBridge] üîç Available containers: (6)¬†[{‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}]
 [ELKBridge] üîç Found 2 root containers: (2)¬†['bt_1', 'bt_4']
 [ELKBridge] üîç Container bt_1 has 0 nodes and 1 containers: {nodes: Array(0), containers: Array(1), allChildren: Array(1)}
 [ELKBridge] üîç Container bt_6 has 0 nodes and 1 containers: {nodes: Array(0), containers: Array(1), allChildren: Array(1)}
 [ELKBridge] üîç Container bt_3 has 2 nodes and 0 containers: {nodes: Array(2), containers: Array(0), allChildren: Array(2)}
 [ELKBridge] üèóÔ∏è Built hierarchy for bt_1: {
  "id": "bt_1",
  "width": 400,
  "height": 300,
  "children": [
    {
      "id": "bt_6",
      "width": 400,
      "height": 300,
      "children": [
        {
          "id": "bt_3",
          "width": 400,
          "height": 300,
          "children": [
            {
              "id": "6",
              "width": 180,
              "height": 60
            },
            {
              "id": "7",
              "width": 180,
              "height": 60
            }
          ],
          "layoutOptions": {
            "elk.algorithm": "mrtree",
            "elk.direction": "DOWN",
            "elk.hierarchyHandling": "INCLUDE_CHILDREN",
            "elk.spacing.nodeNode": "75",
            "elk.spacing.edgeNode": "0",
            "elk.spacing.edgeEdge": "10",
            "elk.spacing.componentComponent": "60",
            "elk.layered.spacing.nodeNodeBetweenLayers": "25"
          }
        }
      ],
      "layoutOptions": {
        "elk.algorithm": "mrtree",
        "elk.direction": "DOWN",
        "elk.hierarchyHandling": "INCLUDE_CHILDREN",
        "elk.spacing.nodeNode": "75",
        "elk.spacing.edgeNode": "0",
        "elk.spacing.edgeEdge": "10",
        "elk.spacing.componentComponent": "60",
        "elk.layered.spacing.nodeNodeBetweenLayers": "25"
      }
    }
  ],
  "layoutOptions": {
    "elk.algorithm": "mrtree",
    "elk.direction": "DOWN",
    "elk.hierarchyHandling": "INCLUDE_CHILDREN",
    "elk.spacing.nodeNode": "75",
    "elk.spacing.edgeNode": "0",
    "elk.spacing.edgeEdge": "10",
    "elk.spacing.componentComponent": "60",
    "elk.layered.spacing.nodeNodeBetweenLayers": "25"
  }
}
 [ELKBridge] üîç Container bt_4 has 0 nodes and 1 containers: {nodes: Array(0), containers: Array(1), allChildren: Array(1)}
 [ELKBridge] üîç Container bt_2 has 0 nodes and 1 containers: {nodes: Array(0), containers: Array(1), allChildren: Array(1)}
 [ELKBridge] üîç Container bt_5 has 8 nodes and 0 containers: {nodes: Array(8), containers: Array(0), allChildren: Array(8)}
 [ELKBridge] üèóÔ∏è Built hierarchy for bt_4: {
  "id": "bt_4",
  "width": 400,
  "height": 300,
  "children": [
    {
      "id": "bt_2",
      "width": 400,
      "height": 300,
      "children": [
        {
          "id": "bt_5",
          "width": 400,
          "height": 300,
          "children": [
            {
              "id": "3",
              "width": 180,
              "height": 60
            },
            {
              "id": "9",
              "width": 180,
              "height": 60
            },
            {
              "id": "5",
              "width": 180,
              "height": 60
            },
            {
              "id": "2",
              "width": 180,
              "height": 60
            },
            {
              "id": "1",
              "width": 180,
              "height": 60
            },
            {
              "id": "4",
              "width": 180,
              "height": 60
            },
            {
              "id": "8",
              "width": 180,
              "height": 60
            },
            {
              "id": "0",
              "width": 180,
              "height": 60
            }
          ],
          "layoutOptions": {
            "elk.algorithm": "mrtree",
            "elk.direction": "DOWN",
            "elk.hierarchyHandling": "INCLUDE_CHILDREN",
            "elk.spacing.nodeNode": "75",
            "elk.spacing.edgeNode": "0",
            "elk.spacing.edgeEdge": "10",
            "elk.spacing.componentComponent": "60",
            "elk.layered.spacing.nodeNodeBetweenLayers": "25"
          }
        }
      ],
      "layoutOptions": {
        "elk.algorithm": "mrtree",
        "elk.direction": "DOWN",
        "elk.hierarchyHandling": "INCLUDE_CHILDREN",
        "elk.spacing.nodeNode": "75",
        "elk.spacing.edgeNode": "0",
        "elk.spacing.edgeEdge": "10",
        "elk.spacing.componentComponent": "60",
        "elk.layered.spacing.nodeNodeBetweenLayers": "25"
      }
    }
  ],
  "layoutOptions": {
    "elk.algorithm": "mrtree",
    "elk.direction": "DOWN",
    "elk.hierarchyHandling": "INCLUDE_CHILDREN",
    "elk.spacing.nodeNode": "75",
    "elk.spacing.edgeNode": "0",
    "elk.spacing.edgeEdge": "10",
    "elk.spacing.componentComponent": "60",
    "elk.layered.spacing.nodeNodeBetweenLayers": "25"
  }
}
 [ELKBridge] üîç Final elkNodes array length: 2
 [ELKBridge] üîç Found 0 top-level nodes: []
 [ELKBridge] üìä Sending to ELK children count: 2
 [ELKBridge] üìä ELK Graph structure: {id: 'root', childrenCount: 2, childrenIds: Array(2), edgesCount: 9}
 [ELKBridge] ‚úÖ ELK layout complete
 [ELKBridge] üìù Applying ELK results back to VisState
 [ELKBridge] üîç ELK Result Structure: {
  "id": "root",
  "children": [
    {
      "id": "bt_1",
      "width": 300,
      "height": 315,
      "children": [
        {
          "id": "bt_6",
          "width": 260,
          "height": 275,
          "children": [
            {
              "id": "bt_3",
              "width": 220,
              "height": 235,
              "children": [
                {
                  "id": "6",
                  "width": 180,
                  "height": 60,
                  "$H": 283,
                  "x": 40,
                  "y": 40
                },
                {
                  "id": "7",
                  "width": 180,
                  "height": 60,
                  "$H": 285,
                  "x": 40,
                  "y": 175
                }
              ],
              "layoutOptions": {
                "elk.algorithm": "mrtree",
                "elk.direction": "DOWN",
                "elk.hierarchyHandling": "INCLUDE_CHILDREN",
                "elk.spacing.nodeNode": "75",
                "elk.spacing.edgeNode": "0",
                "elk.spacing.edgeEdge": "10",
                "elk.spacing.componentComponent": "60",
                "elk.layered.spacing.nodeNodeBetweenLayers": "25"
              },
              "$H": 281,
              "x": 40,
              "y": 40
            }
          ],
          "layoutOptions": {
            "elk.algorithm": "mrtree",
            "elk.direction": "DOWN",
            "elk.hierarchyHandling": "INCLUDE_CHILDREN",
            "elk.spacing.nodeNode": "75",
            "elk.spacing.edgeNode": "0",
            "elk.spacing.edgeEdge": "10",
            "elk.spacing.componentComponent": "60",
            "elk.layered.spacing.nodeNodeBetweenLayers": "25"
          },
          "$H": 279,
          "x": 40,
          "y": 40
        }
      ],
      "layoutOptions": {
        "elk.algorithm": "mrtree",
        "elk.direction": "DOWN",
        "elk.hierarchyHandling": "INCLUDE_CHILDREN",
        "elk.spacing.nodeNode": "75",
        "elk.spacing.edgeNode": "0",
        "elk.spacing.edgeEdge": "10",
        "elk.spacing.componentComponent": "60",
        "elk.layered.spacing.nodeNodeBetweenLayers": "25"
      },
      "$H": 277,
      "x": 317.5,
      "y": 467.5
    },
    {
      "id": "bt_4",
      "width": 555,
      "height": 855,
      "children": [
        {
          "id": "bt_2",
          "width": 515,
          "height": 815,
          "children": [
            {
              "id": "bt_5",
              "width": 475,
              "height": 775,
              "children": [
                {
                  "id": "3",
                  "width": 180,
                  "height": 60,
                  "$H": 293,
                  "x": 130,
                  "y": 475
                },
                {
                  "id": "9",
                  "width": 180,
                  "height": 60,
                  "$H": 295,
                  "x": 385,
                  "y": 205
                },
                {
                  "id": "5",
                  "width": 180,
                  "height": 60,
                  "$H": 297,
                  "x": 130,
                  "y": 745
                },
                {
                  "id": "2",
                  "width": 180,
                  "height": 60,
                  "$H": 299,
                  "x": 130,
                  "y": 340
                },
                {
                  "id": "1",
                  "width": 180,
                  "height": 60,
                  "$H": 301,
                  "x": 130,
                  "y": 205
                },
                {
                  "id": "4",
                  "width": 180,
                  "height": 60,
                  "$H": 303,
                  "x": 130,
                  "y": 610
                },
                {
                  "id": "8",
                  "width": 180,
                  "height": 60,
                  "$H": 305,
                  "x": 385,
                  "y": 70
                },
                {
                  "id": "0",
                  "width": 180,
                  "height": 60,
                  "$H": 307,
                  "x": 130,
                  "y": 70
                }
              ],
              "layoutOptions": {
                "elk.algorithm": "mrtree",
                "elk.direction": "DOWN",
                "elk.hierarchyHandling": "INCLUDE_CHILDREN",
                "elk.spacing.nodeNode": "75",
                "elk.spacing.edgeNode": "0",
                "elk.spacing.edgeEdge": "10",
                "elk.spacing.componentComponent": "60",
                "elk.layered.spacing.nodeNodeBetweenLayers": "25"
              },
              "$H": 291,
              "x": 40,
              "y": 40
            }
          ],
          "layoutOptions": {
            "elk.algorithm": "mrtree",
            "elk.direction": "DOWN",
            "elk.hierarchyHandling": "INCLUDE_CHILDREN",
            "elk.spacing.nodeNode": "75",
            "elk.spacing.edgeNode": "0",
            "elk.spacing.edgeEdge": "10",
            "elk.spacing.componentComponent": "60",
            "elk.layered.spacing.nodeNodeBetweenLayers": "25"
          },
          "$H": 289,
          "x": 40,
          "y": 40
        }
      ],
      "layoutOptions": {
        "elk.algorithm": "mrtree",
        "elk.direction": "DOWN",
        "elk.hierarchyHandling": "INCLUDE_CHILDREN",
        "elk.spacing.nodeNode": "75",
        "elk.spacing.edgeNode": "0",
        "elk.spacing.edgeEdge": "10",
        "elk.spacing.componentComponent": "60",
        "elk.layered.spacing.nodeNodeBetweenLayers": "25"
      },
      "$H": 287,
      "x": 692.5,
      "y": 467.5
    }
  ],
  "edges": [
    {
      "id": "e0",
      "sources": [
        "0"
      ],
      "targets": [
        "1"
      ],
      "sections": [
        {
          "id": "e0_s0",
          "startPoint": {
            "x": 220,
            "y": 130
          },
          "endPoint": {
            "x": 220,
            "y": 205
          },
          "bendPoints": [
            {
              "x": 220,
              "y": 130
            }
          ]
        }
      ],
      "container": "bt_5"
    },
    {
      "id": "e1",
      "sources": [
        "1"
      ],
      "targets": [
        "2"
      ],
      "sections": [
        {
          "id": "e1_s0",
          "startPoint": {
            "x": 220,
            "y": 265
          },
          "endPoint": {
            "x": 220,
            "y": 340
          },
          "bendPoints": [
            {
              "x": 220,
              "y": 265
            }
          ]
        }
      ],
      "container": "bt_5"
    },
    {
      "id": "e2",
      "sources": [
        "2"
      ],
      "targets": [
        "3"
      ],
      "sections": [
        {
          "id": "e2_s0",
          "startPoint": {
            "x": 220,
            "y": 400
          },
          "endPoint": {
            "x": 220,
            "y": 475
          },
          "bendPoints": [
            {
              "x": 220,
              "y": 400
            }
          ]
        }
      ],
      "container": "bt_5"
    },
    {
      "id": "e3",
      "sources": [
        "3"
      ],
      "targets": [
        "4"
      ],
      "sections": [
        {
          "id": "e3_s0",
          "startPoint": {
            "x": 220,
            "y": 535
          },
          "endPoint": {
            "x": 220,
            "y": 610
          },
          "bendPoints": [
            {
              "x": 220,
              "y": 535
            }
          ]
        }
      ],
      "container": "bt_5"
    },
    {
      "id": "e4",
      "sources": [
        "4"
      ],
      "targets": [
        "5"
      ],
      "sections": [
        {
          "id": "e4_s0",
          "startPoint": {
            "x": 220,
            "y": 670
          },
          "endPoint": {
            "x": 220,
            "y": 745
          },
          "bendPoints": [
            {
              "x": 220,
              "y": 670
            }
          ]
        }
      ],
      "container": "bt_5"
    },
    {
      "id": "e5",
      "sources": [
        "5"
      ],
      "targets": [
        "6"
      ],
      "container": "root"
    },
    {
      "id": "e6",
      "sources": [
        "6"
      ],
      "targets": [
        "7"
      ],
      "sections": [
        {
          "id": "e6_s0",
          "startPoint": {
            "x": 130,
            "y": 100
          },
          "endPoint": {
            "x": 130,
            "y": 175
          },
          "bendPoints": [
            {
              "x": 130,
              "y": 100
            }
          ]
        }
      ],
      "container": "bt_3"
    },
    {
      "id": "e7",
      "sources": [
        "7"
      ],
      "targets": [
        "8"
      ],
      "container": "root"
    },
    {
      "id": "e8",
      "sources": [
        "8"
      ],
      "targets": [
        "9"
      ],
      "sections": [
        {
          "id": "e8_s0",
          "startPoint": {
            "x": 475,
            "y": 130
          },
          "endPoint": {
            "x": 475,
            "y": 205
          },
          "bendPoints": [
            {
              "x": 475,
              "y": 130
            }
          ]
        }
      ],
      "container": "bt_5"
    }
  ],
  "layoutOptions": {
    "elk.algorithm": "mrtree",
    "elk.direction": "DOWN",
    "elk.hierarchyHandling": "INCLUDE_CHILDREN",
    "elk.spacing.nodeNode": "75",
    "elk.spacing.edgeNode": "0",
    "elk.spacing.edgeEdge": "10",
    "elk.spacing.componentComponent": "60",
    "elk.layered.spacing.nodeNodeBetweenLayers": "25"
  },
  "$H": 13,
  "x": 0,
  "y": 0,
  "width": 842.5,
  "height": 895
}
 [VisState] üìè Auto-updated expandedDimensions for bt_1: 300x315
 [ELKBridge] üìè Updated container bt_1 layout: {"position":{"x":317.5,"y":467.5},"dimensions":{"width":300,"height":315}}
 [ELKBridge] üîß Attempting to update node bt_6 with ELK coords (40, 40)
 [ELKBridge] üìè Calling setNodeLayout for bt_6 with: {position: {‚Ä¶}, dimensions: {‚Ä¶}}
 [ELKBridge] ‚ö†Ô∏è Node bt_6 not found as regular node, trying as container: Entity does not exist
 [VisState] üìè Auto-updated expandedDimensions for bt_6: 260x275
 [VisState] üìè Auto-updated expandedDimensions for bt_4: 555x855
 [ELKBridge] üìè Updated container bt_4 layout: {"position":{"x":692.5,"y":467.5},"dimensions":{"width":555,"height":855}}
 [ELKBridge] üîß Attempting to update node bt_2 with ELK coords (40, 40)
 [ELKBridge] üìè Calling setNodeLayout for bt_2 with: {position: {‚Ä¶}, dimensions: {‚Ä¶}}
 [ELKBridge] ‚ö†Ô∏è Node bt_2 not found as regular node, trying as container: Entity does not exist
 [VisState] üìè Auto-updated expandedDimensions for bt_2: 515x815
 --- ELKBRIDGE_EDGE_PROCESSING_START ---
 [ELKBridge] üîç Processing 9 edges for sections
 [ELKBridge] üîß About to set layout for edge e0 with 1 sections
 [ELKBridge] üìç Updated edge e0 with 1 sections
 [ELKBridge] üîç Debug: Edge e0 layout after update: {sections: Array(1)}
 [ELKBridge] üîß About to set layout for edge e1 with 1 sections
 [ELKBridge] üìç Updated edge e1 with 1 sections
 [ELKBridge] üîç Debug: Edge e1 layout after update: {sections: Array(1)}
 [ELKBridge] üîß About to set layout for edge e2 with 1 sections
 [ELKBridge] üìç Updated edge e2 with 1 sections
 [ELKBridge] üîç Debug: Edge e2 layout after update: {sections: Array(1)}
 [ELKBridge] üîß About to set layout for edge e3 with 1 sections
 [ELKBridge] üìç Updated edge e3 with 1 sections
 [ELKBridge] üîç Debug: Edge e3 layout after update: {sections: Array(1)}
 [ELKBridge] üîß About to set layout for edge e4 with 1 sections
 [ELKBridge] üìç Updated edge e4 with 1 sections
 [ELKBridge] üîç Debug: Edge e4 layout after update: {sections: Array(1)}
 [ELKBridge] üìç Edge e5 has no sections (cross-container edge)
 [ELKBridge] üîß About to set layout for edge e6 with 1 sections
 [ELKBridge] üìç Updated edge e6 with 1 sections
 [ELKBridge] üîç Debug: Edge e6 layout after update: {sections: Array(1)}
 [ELKBridge] üìç Edge e7 has no sections (cross-container edge)
 [ELKBridge] üîß About to set layout for edge e8 with 1 sections
 [ELKBridge] üìç Updated edge e8 with 1 sections
 [ELKBridge] üîç Debug: Edge e8 layout after update: {sections: Array(1)}
 --- ELKBRIDGE_EDGE_PROCESSING_END ---
 [ELKBridge] ‚úÖ Applied all ELK results to VisState
 [ReactFlowConverter] üîÑ Converting with bridge architecture...
 [ReactFlowBridge] üîÑ Converting VisState to ReactFlow format
 [ReactFlowBridge] üì¶ Container bt_1: collapsed=false, ELK=(317.5, 467.5), ReactFlow=(317.5, 467.5), size=300x315
 [CoordinateTranslator] ELK‚ÜíReactFlow: ELK child coordinates (40, 40) are already relative to container bt_1 - using as-is
ReactFlowBridge.ts:129 [ReactFlowBridge] üì¶ Container bt_6: collapsed=false, ELK=(40, 40), ReactFlow=(40, 40), size=260x275
CoordinateTranslator.ts:67 [CoordinateTranslator] ELK‚ÜíReactFlow: ELK child coordinates (0, 0) are already relative to container bt_6 - using as-is
ReactFlowBridge.ts:129 [ReactFlowBridge] üì¶ Container bt_3: collapsed=false, ELK=(0, 0), ReactFlow=(0, 0), size=400x300
ReactFlowBridge.ts:129 [ReactFlowBridge] üì¶ Container bt_4: collapsed=false, ELK=(692.5, 467.5), ReactFlow=(692.5, 467.5), size=555x855
CoordinateTranslator.ts:67 [CoordinateTranslator] ELK‚ÜíReactFlow: ELK child coordinates (40, 40) are already relative to container bt_4 - using as-is
ReactFlowBridge.ts:129 [ReactFlowBridge] üì¶ Container bt_2: collapsed=false, ELK=(40, 40), ReactFlow=(40, 40), size=515x815
CoordinateTranslator.ts:67 [CoordinateTranslator] ELK‚ÜíReactFlow: ELK child coordinates (0, 0) are already relative to container bt_2 - using as-is
ReactFlowBridge.ts:129 [ReactFlowBridge] üì¶ Container bt_5: collapsed=false, ELK=(0, 0), ReactFlow=(0, 0), size=400x300
ReactFlowBridge.ts:172 [ReactFlowBridge] üîç Node 6 layout: undefined raw node coords: {x: 0, y: 0}
ReactFlowBridge.ts:180 [ReactFlowBridge] üîò Node 6: parent=bt_3, ELK=(0, 0), ReactFlow=(0, 0)
ReactFlowBridge.ts:172 [ReactFlowBridge] üîç Node 3 layout: undefined raw node coords: {x: 0, y: 0}
ReactFlowBridge.ts:180 [ReactFlowBridge] üîò Node 3: parent=bt_5, ELK=(0, 0), ReactFlow=(0, 0)
ReactFlowBridge.ts:172 [ReactFlowBridge] üîç Node 7 layout: undefined raw node coords: {x: 0, y: 0}
ReactFlowBridge.ts:180 [ReactFlowBridge] üîò Node 7: parent=bt_3, ELK=(0, 0), ReactFlow=(0, 0)
ReactFlowBridge.ts:172 [ReactFlowBridge] üîç Node 9 layout: undefined raw node coords: {x: 0, y: 0}
ReactFlowBridge.ts:180 [ReactFlowBridge] üîò Node 9: parent=bt_5, ELK=(0, 0), ReactFlow=(0, 0)
ReactFlowBridge.ts:172 [ReactFlowBridge] üîç Node 5 layout: undefined raw node coords: {x: 0, y: 0}
ReactFlowBridge.ts:180 [ReactFlowBridge] üîò Node 5: parent=bt_5, ELK=(0, 0), ReactFlow=(0, 0)
ReactFlowBridge.ts:172 [ReactFlowBridge] üîç Node 2 layout: undefined raw node coords: {x: 0, y: 0}
ReactFlowBridge.ts:180 [ReactFlowBridge] üîò Node 2: parent=bt_5, ELK=(0, 0), ReactFlow=(0, 0)
ReactFlowBridge.ts:172 [ReactFlowBridge] üîç Node 1 layout: undefined raw node coords: {x: 0, y: 0}
ReactFlowBridge.ts:180 [ReactFlowBridge] üîò Node 1: parent=bt_5, ELK=(0, 0), ReactFlow=(0, 0)
ReactFlowBridge.ts:172 [ReactFlowBridge] üîç Node 4 layout: undefined raw node coords: {x: 0, y: 0}
ReactFlowBridge.ts:180 [ReactFlowBridge] üîò Node 4: parent=bt_5, ELK=(0, 0), ReactFlow=(0, 0)
ReactFlowBridge.ts:172 [ReactFlowBridge] üîç Node 8 layout: undefined raw node coords: {x: 0, y: 0}
ReactFlowBridge.ts:180 [ReactFlowBridge] üîò Node 8: parent=bt_5, ELK=(0, 0), ReactFlow=(0, 0)
ReactFlowBridge.ts:172 [ReactFlowBridge] üîç Node 0 layout: undefined raw node coords: {x: 0, y: 0}
ReactFlowBridge.ts:180 [ReactFlowBridge] üîò Node 0: parent=bt_5, ELK=(0, 0), ReactFlow=(0, 0)
ReactFlowBridge.ts:223 [ReactFlowBridge] üîç Debug edge e0: {source: '0', target: '1', sourceHandle: undefined, targetHandle: undefined, sourceHandleType: 'undefined',¬†‚Ä¶}
ReactFlowBridge.ts:258 [ReactFlowBridge] ‚úÖ Created ReactFlow edge e0: {id: 'e0', type: 'standard', source: '0', target: '1', markerEnd: {‚Ä¶},¬†‚Ä¶}
ReactFlowBridge.ts:223 [ReactFlowBridge] üîç Debug edge e1: {source: '1', target: '2', sourceHandle: undefined, targetHandle: undefined, sourceHandleType: 'undefined',¬†‚Ä¶}
ReactFlowBridge.ts:258 [ReactFlowBridge] ‚úÖ Created ReactFlow edge e1: {id: 'e1', type: 'standard', source: '1', target: '2', markerEnd: {‚Ä¶},¬†‚Ä¶}
ReactFlowBridge.ts:223 [ReactFlowBridge] üîç Debug edge e2: {source: '2', target: '3', sourceHandle: undefined, targetHandle: undefined, sourceHandleType: 'undefined',¬†‚Ä¶}
ReactFlowBridge.ts:258 [ReactFlowBridge] ‚úÖ Created ReactFlow edge e2: {id: 'e2', type: 'standard', source: '2', target: '3', markerEnd: {‚Ä¶},¬†‚Ä¶}
ReactFlowBridge.ts:223 [ReactFlowBridge] üîç Debug edge e3: {source: '3', target: '4', sourceHandle: undefined, targetHandle: undefined, sourceHandleType: 'undefined',¬†‚Ä¶}
ReactFlowBridge.ts:258 [ReactFlowBridge] ‚úÖ Created ReactFlow edge e3: {id: 'e3', type: 'standard', source: '3', target: '4', markerEnd: {‚Ä¶},¬†‚Ä¶}
ReactFlowBridge.ts:223 [ReactFlowBridge] üîç Debug edge e4: {source: '4', target: '5', sourceHandle: undefined, targetHandle: undefined, sourceHandleType: 'undefined',¬†‚Ä¶}
ReactFlowBridge.ts:258 [ReactFlowBridge] ‚úÖ Created ReactFlow edge e4: {id: 'e4', type: 'standard', source: '4', target: '5', markerEnd: {‚Ä¶},¬†‚Ä¶}
ReactFlowBridge.ts:223 [ReactFlowBridge] üîç Debug edge e5: {source: '5', target: '6', sourceHandle: undefined, targetHandle: undefined, sourceHandleType: 'undefined',¬†‚Ä¶}
ReactFlowBridge.ts:258 [ReactFlowBridge] ‚úÖ Created ReactFlow edge e5: {id: 'e5', type: 'standard', source: '5', target: '6', markerEnd: {‚Ä¶},¬†‚Ä¶}
ReactFlowBridge.ts:223 [ReactFlowBridge] üîç Debug edge e6: {source: '6', target: '7', sourceHandle: undefined, targetHandle: undefined, sourceHandleType: 'undefined',¬†‚Ä¶}
ReactFlowBridge.ts:258 [ReactFlowBridge] ‚úÖ Created ReactFlow edge e6: {id: 'e6', type: 'standard', source: '6', target: '7', markerEnd: {‚Ä¶},¬†‚Ä¶}
ReactFlowBridge.ts:223 [ReactFlowBridge] üîç Debug edge e7: {source: '7', target: '8', sourceHandle: undefined, targetHandle: undefined, sourceHandleType: 'undefined',¬†‚Ä¶}
ReactFlowBridge.ts:258 [ReactFlowBridge] ‚úÖ Created ReactFlow edge e7: {id: 'e7', type: 'standard', source: '7', target: '8', markerEnd: {‚Ä¶},¬†‚Ä¶}
ReactFlowBridge.ts:223 [ReactFlowBridge] üîç Debug edge e8: {source: '8', target: '9', sourceHandle: undefined, targetHandle: undefined, sourceHandleType: 'undefined',¬†‚Ä¶}
ReactFlowBridge.ts:258 [ReactFlowBridge] ‚úÖ Created ReactFlow edge e8: {id: 'e8', type: 'standard', source: '8', target: '9', markerEnd: {‚Ä¶},¬†‚Ä¶}
FlowGraph.tsx:144 [FlowGraph] ‚úÖ Updated ReactFlow data: {nodes: 16, edges: 9}
FlowGraph.tsx:154 [FlowGraph] üîç CONTAINER NODES BEING PASSED TO REACTFLOW:
FlowGraph.tsx:154 [FlowGraph] üì¶ bt_1: {position: {‚Ä¶}, data: {‚Ä¶}, parentId: undefined}
FlowGraph.tsx:154 [FlowGraph] üì¶ bt_6: {position: {‚Ä¶}, data: {‚Ä¶}, parentId: 'bt_1'}
FlowGraph.tsx:154 [FlowGraph] üì¶ bt_3: {position: {‚Ä¶}, data: {‚Ä¶}, parentId: 'bt_6'}
FlowGraph.tsx:154 [FlowGraph] üì¶ bt_4: {position: {‚Ä¶}, data: {‚Ä¶}, parentId: undefined}
FlowGraph.tsx:154 [FlowGraph] üì¶ bt_2: {position: {‚Ä¶}, data: {‚Ä¶}, parentId: 'bt_4'}
FlowGraph.tsx:154 [FlowGraph] üì¶ bt_5: {position: {‚Ä¶}, data: {‚Ä¶}, parentId: 'bt_2'}
nodes.tsx:97 [ContainerNode] üìè Container bt_1: data.width=300, data.height=315, using 300x315
nodes.tsx:97 [ContainerNode] üìè Container bt_6: data.width=260, data.height=275, using 260x275
nodes.tsx:97 [ContainerNode] üìè Container bt_3: data.width=400, data.height=300, using 400x300
nodes.tsx:97 [ContainerNode] üìè Container bt_4: data.width=555, data.height=855, using 555x855
nodes.tsx:97 [ContainerNode] üìè Container bt_2: data.width=515, data.height=815, using 515x815
nodes.tsx:97 [ContainerNode] üìè Container bt_5: data.width=400, data.height=300, using 400x300
nodes.tsx:97 [ContainerNode] üìè Container bt_1: data.width=300, data.height=315, using 300x315
nodes.tsx:97 [ContainerNode] üìè Container bt_6: data.width=260, data.height=275, using 260x275
nodes.tsx:97 [ContainerNode] üìè Container bt_3: data.width=400, data.height=300, using 400x300
nodes.tsx:97 [ContainerNode] üìè Container bt_4: data.width=555, data.height=855, using 555x855
nodes.tsx:97 [ContainerNode] üìè Container bt_2: data.width=515, data.height=815, using 515x815
nodes.tsx:97 [ContainerNode] üìè Container bt_5: data.width=400, data.height=300, using 400x300
nodes.tsx:97 [ContainerNode] üìè Container bt_1: data.width=300, data.height=315, using 300x315
nodes.tsx:97 [ContainerNode] üìè Container bt_6: data.width=260, data.height=275, using 260x275
nodes.tsx:97 [ContainerNode] üìè Container bt_3: data.width=400, data.height=300, using 400x300
nodes.tsx:97 [ContainerNode] üìè Container bt_4: data.width=555, data.height=855, using 555x855
nodes.tsx:97 [ContainerNode] üìè Container bt_2: data.width=515, data.height=815, using 515x815
nodes.tsx:97 [ContainerNode] üìè Container bt_5: data.width=400, data.height=300, using 400x300
