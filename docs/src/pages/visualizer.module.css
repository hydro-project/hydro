/* Main container */
.container {
  min-height: calc(100vh - 120px);
  height: calc(100vh - 120px);
  display: flex;
  flex-direction: column;
  width: 100%;
}

/* Error display */
.error {
  background: #fee;
  border: 1px solid #fcc;
  color: #c33;
  padding: 12px 16px;
  margin: 16px;
  border-radius: 6px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.closeError {
  background: none;
  border: none;
  font-size: 18px;
  cursor: pointer;
  color: #c33;
  padding: 0 4px;
}

/* Drop zone for file uploads */
.dropZone {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 20px;
  border: 3px dashed #ccc;
  border-radius: 12px;
  background: #f9f9f9;
  transition: all 0.2s ease;
  min-height: 400px;
  height: calc(100vh - 200px);
}

.dropZone.dragOver {
  border-color: #007acc;
  background: #f0f8ff;
}

.dropContent {
  text-align: center;
  padding: 40px;
  max-width: 500px;
}

.dropContent h3 {
  margin-bottom: 16px;
  color: #333;
  font-size: 24px;
}

.dropContent p {
  margin-bottom: 24px;
  color: #666;
  font-size: 16px;
}

.fileInput {
  display: none;
}

.fileInputLabel {
  display: inline-block;
  padding: 12px 24px;
  background: #007acc;
  color: white;
  border-radius: 6px;
  cursor: pointer;
  transition: background 0.2s ease;
  font-weight: 500;
}

.fileInputLabel:hover {
  background: #005999;
}

.helpText {
  margin-top: 32px;
  padding-top: 24px;
  border-top: 1px solid #eee;
  color: #777;
  font-size: 14px;
}

.helpText code {
  display: block;
  background: #f5f5f5;
  padding: 8px 12px;
  border-radius: 4px;
  margin-top: 8px;
  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
  color: #d73a49;
}

/* Loading state */
.loading {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 18px;
  color: #666;
  min-height: 400px;
  height: calc(100vh - 200px);
  background: #f9f9f9;
  border: 2px dashed #ddd;
  margin: 20px;
  border-radius: 8px;
}

/* Initialization overlay */
.initializationOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(249, 249, 249, 0.95);
  backdrop-filter: blur(2px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  border-radius: 8px;
}

.initializationContent {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
  padding: 24px;
  background: white;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  font-size: 16px;
  color: #666;
}

.spinner {
  width: 32px;
  height: 32px;
  border: 3px solid #f3f3f3;
  border-top: 3px solid #007acc;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Visualization container */
.visualizationContainer {
  flex: 1;
  display: flex;
  flex-direction: column;
}

.toolbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 16px 20px;
  background: #f8f9fa;
  border-bottom: 1px solid #dee2e6;
  flex-wrap: wrap;
  gap: 12px;
}

.toolbarControls {
  display: flex;
  align-items: center;
  gap: 12px;
  flex-wrap: wrap;
}

.toolbar h2 {
  margin: 0;
  color: #333;
  font-size: 20px;
}

.clearButton {
  padding: 6px 12px;
  background: #6c757d;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 12px;
  transition: background 0.2s ease;
  white-space: nowrap;
}

.clearButton:hover {
  background: #5a6268;
}

/* Visualization wrapper */
.visualizationWrapper {
  position: relative;
  flex: 1;
  display: flex;
  flex-direction: column;
}

/* ReactFlow wrapper */
.reactflowWrapper {
  flex: 1;
  position: relative;
  height: calc(100vh - 200px);
  min-height: 600px;
  background: #f5f5f5;
}

/* Layout controls */
.layoutControls {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 14px;
}

.layoutControls label {
  font-weight: 500;
  color: #333;
}

.layoutSelect, .paletteSelect, .groupingSelect {
  background: #f8f9fa;
  border: 1px solid #dee2e6;
  border-radius: 4px;
  font-size: 12px;
  padding: 6px 8px;
  min-width: 80px;
  color: #495057;
  cursor: pointer;
}

.layoutSelect:hover, .paletteSelect:hover, .groupingSelect:hover {
  border-color: #adb5bd;
}

.groupingSelect.disabled {
  background: #e9ecef;
  color: #6c757d;
  cursor: not-allowed;
}

.groupingControls {
  display: flex;
  align-items: center;
  gap: 4px;
}

.controlLabel {
  font-weight: 500;
  color: #333;
  font-size: 12px;
}

.containerButton {
  background: #f8f9fa;
  border: 1px solid #dee2e6;
  border-radius: 4px;
  font-size: 16px;
  padding: 6px 8px;
  min-width: 32px;
  color: #495057;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

.containerButton:hover {
  border-color: #adb5bd;
  background: #e9ecef;
}

.separator {
  width: 1px;
  height: 24px;
  background: #dee2e6;
  margin: 0 4px;
}

.fitViewButton {
  background: #007bff;
  border: 1px solid #007bff;
  border-radius: 4px;
  font-size: 12px;
  padding: 6px 10px;
  color: white;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 500;
}

.fitViewButton:hover {
  background: #0056b3;
  border-color: #0056b3;
}

.fitViewButton:disabled {
  background: #6c757d;
  border-color: #6c757d;
  cursor: not-allowed;
  opacity: 0.6;
}

.fitViewButton:disabled:hover {
  background: #6c757d;
  border-color: #6c757d;
}

.autoFitLabel {
  display: flex;
  align-items: center;
  gap: 4px;
  font-size: 12px;
  color: #495057;
  cursor: pointer;
  user-select: none;
}

.autoFitCheckbox {
  margin: 0;
  cursor: pointer;
}

/* Legend */
.unifiedLegend {
  position: absolute;
  top: 20px;
  right: 10px;
  z-index: 10;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  padding: 8px;
  border-radius: 6px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.15);
  max-width: 220px;
  font-size: 11px;
}

.unifiedLegend h4 {
  margin: 0;
  font-size: 12px;
  font-weight: 600;
  color: #333;
}

.legendHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 6px;
  border-bottom: 1px solid #eee;
  padding-bottom: 3px;
}

.legendToggle {
  background: none;
  border: none;
  cursor: pointer;
  font-size: 10px;
  color: #666;
  padding: 2px 4px;
  border-radius: 2px;
  transition: background-color 0.2s ease;
}

.legendToggle:hover {
  background-color: rgba(0, 0, 0, 0.1);
  color: #333;
}

.legendSection {
  margin-bottom: 8px;
}

.legendSection:last-child {
  margin-bottom: 0;
}

.legendItem {
  display: flex;
  align-items: center;
  margin: 3px 0;
  font-size: 10px;
}

.legendColor {
  width: 12px;
  height: 12px;
  border-radius: 2px;
  margin-right: 6px;
  border: 1px solid #666;
  flex-shrink: 0;
}

/* ReactFlow global overrides */
:global(.react-flow__node:not(.react-flow__node-group):not(.react-flow__node-container)) {
  cursor: pointer;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  transition: all 0.2s ease;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', sans-serif;
  /* CRITICAL: Remove ReactFlow's default padding */
  padding: 0 !important;
}

/* Force background styles for regular nodes - override ReactFlow defaults */
:global(.react-flow__node:not([data-id*="datacenter"]):not([data-id*="building"]):not([data-id*="floor"]):not([data-id*="room"])) {
  background: var(--node-background) !important;
  background-image: var(--node-background) !important;
  border: var(--node-border) !important;
}

:global(.react-flow__node:not(.react-flow__node-group):not(.react-flow__node-container):hover) {
  box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

:global(.react-flow__edge-path) {
  stroke-width: 2;
}

:global(.react-flow__edge.selected .react-flow__edge-path) {
  stroke-width: 3;
}

:global(.react-flow__edge:hover .react-flow__edge-path) {
  stroke-width: 3;
}

:global(.react-flow__minimap) {
  background: rgba(255, 255, 255, 0.8);
  border-radius: 6px;
  border: 1px solid rgba(0, 0, 0, 0.1);
}

:global(.react-flow__controls) {
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(10px);
  border-radius: 6px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.15);
  border: 1px solid rgba(0, 0, 0, 0.1);
}

:global(.react-flow__controls-button) {
  background: rgba(255, 255, 255, 0.9);
  border: 1px solid #dee2e6;
  color: #495057;
  width: 32px;
  height: 32px;
  transition: all 0.2s ease;
}

:global(.react-flow__controls-button:hover) {
  background: #f8f9fa;
  border-color: #adb5bd;
  transform: translateY(-1px);
}

:global(.react-flow__controls-button:active) {
  transform: translateY(0);
}

:global(.react-flow__attribution) {
  background: rgba(255, 255, 255, 0.8);
  border-radius: 4px;
  font-size: 10px;
  padding: 2px 6px;
}

/* Hide all ReactFlow handles for clean edge connections */
:global(.react-flow__handle) {
  opacity: 0 !important;
  background: transparent !important;
  border: none !important;
  width: 1px !important;
  height: 1px !important;
  pointer-events: none !important;
}

/* Ensure handles don't interfere with edge positioning */
:global(.react-flow__handle-left) {
  left: -0.5px !important;
}

:global(.react-flow__handle-right) {
  right: -0.5px !important;
}

:global(.react-flow__handle-top) {
  top: -0.5px !important;
}

:global(.react-flow__handle-bottom) {
  bottom: -0.5px !important;
}

/* Responsive design */
@media (max-width: 768px) {
  .toolbar {
    flex-direction: column;
    gap: 12px;
    align-items: stretch;
  }
  
  .toolbar h2 {
    text-align: center;
  }
  
  .toolbarControls {
    justify-content: center;
    flex-wrap: wrap;
  }
  
  .layoutControls {
    justify-content: center;
    flex-wrap: wrap;
  }
  
  .reactflowWrapper {
    height: calc(100vh - 250px);
  }
  
  .dropContent {
    padding: 20px;
  }
  
  .dropContent h3 {
    font-size: 20px;
  }
  
  /* Stack panels vertically on mobile */
  .unifiedLegend {
    top: 10px;
    right: 10px;
    max-width: 180px;
  }
  
  .hierarchyTree {
    bottom: 10px;
    right: 10px;
    max-width: 180px;
    max-height: 200px;
  }
}

@media (max-width: 480px) {
  .unifiedLegend {
    top: 10px;
    left: 10px;
    right: 10px;
    max-width: none;
  }
  
  .hierarchyTree {
    bottom: 10px;
    left: 10px;
    right: 10px;
    max-width: none;
    max-height: 150px;
  }
}

/* ReactFlow Custom Node Styling */
/* Disable ReactFlow's built-in group node styling more selectively */
:global(.react-flow__node-group) {
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
  padding: 0 !important;
}

/* Make sure custom nodes are visible and properly styled */
:global(.react-flow__node-groupContainer) {
  display: block !important;
  visibility: visible !important;
  opacity: 1 !important;
  z-index: 5 !important;
}

/* Ensure regular nodes have higher z-index than group nodes */
:global(.react-flow__node-default) {
  z-index: 10 !important;
  display: block !important;
  visibility: visible !important;
  opacity: 1 !important;
}

/* Remove ReactFlow default styling from collapsed container nodes */
:global(.react-flow__node-collapsedContainer) {
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
  padding: 0 !important;
}

/* Also target any nodes with collapsed data attribute */
:global(.react-flow__node[data-id*="container"][style*="width: 1"]) {
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
  padding: 0 !important;
}

/* More comprehensive override for any ReactFlow container-style nodes */
:global(.react-flow__node[data-id*="container"]) {
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
  padding: 0 !important;
}

/* Force override any ReactFlow default container background */
:global(.react-flow__node[data-id*="container"] > *) {
  background: none !important;
}

/* Remove any shadow from container ReactFlow nodes */
:global(.react-flow__node[data-id*="container"]) {
  box-shadow: none !important;
}

/* Override ReactFlow CSS variables to disable default group node styling */
:global(.react-flow) {
  --xy-node-group-background-color-default: transparent;
  --xy-node-boxshadow-hover-default: none;
  --xy-node-background-color-default: transparent;
}

/* Hierarchy Tree */
.hierarchyTree {
  position: absolute;
  bottom: 20px;
  right: 10px;
  z-index: 10;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  padding: 8px;
  border-radius: 6px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.15);
  max-width: 250px;
  max-height: 300px;
  overflow-y: auto;
  font-size: 11px;
}

.hierarchyTree h4 {
  margin: 0;
  font-size: 12px;
  font-weight: 600;
  color: #333;
}

.hierarchyHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 6px;
  border-bottom: 1px solid #eee;
  padding-bottom: 3px;
}

.hierarchyToggle {
  background: none;
  border: none;
  cursor: pointer;
  font-size: 10px;
  color: #666;
  padding: 2px 4px;
  border-radius: 2px;
  transition: background-color 0.2s ease;
}

.hierarchyToggle:hover {
  background-color: rgba(0, 0, 0, 0.1);
  color: #333;
}

.hierarchyContent {
  max-height: 250px;
  overflow-y: auto;
}

.treeNode {
  display: flex;
  align-items: center;
  padding: 2px 4px;
  margin: 1px 0;
  cursor: pointer;
  border-radius: 3px;
  transition: background-color 0.2s ease;
  font-size: 10px;
  line-height: 1.3;
}

.treeNode:hover {
  background-color: rgba(0, 120, 204, 0.1);
}

.treeNodeExpanded {
  font-weight: 500;
  color: #333;
}

.treeNodeCollapsed {
  font-weight: 400;
  color: #666;
}

.treeToggle {
  margin-right: 4px;
  color: #666;
  font-size: 8px;
  width: 12px;
  text-align: center;
  flex-shrink: 0;
  transition: color 0.2s ease;
}

.treeNodeExpanded .treeToggle {
  color: #0078cc;
}

.treeNodeCollapsed .treeToggle {
  color: #999;
}

.treeLabel {
  flex: 1;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  margin-right: 4px;
}

.treeNodeCount {
  color: #888;
  font-size: 9px;
  flex-shrink: 0;
}

.treeChildren {
  border-left: 1px solid #ddd;
  margin-left: 6px;
}

.treeLeafIndicator {
  display: flex;
  align-items: center;
  padding: 1px 4px;
  margin: 1px 0;
  font-size: 9px;
  line-height: 1.2;
  color: #888;
  font-style: italic;
}

.treeLeafIndicator .treeToggle {
  color: #ccc;
  font-size: 6px;
}

.treeLeafIndicator .treeLabel {
  color: #aaa;
  font-size: 8px;
}

.treeLeafIndicator .treeNodeCount {
  color: #bbb;
  font-size: 8px;
}

/* Enhanced grouping controls within Info Panel */
.infoPanelGroupingControls {
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 4px 0;
}

.infoPanelGroupingControls .controlLabel {
  font-size: 9px;
  font-weight: 500;
  color: #666;
  min-width: 50px;
}

.infoPanelGroupingControls .groupingSelect {
  flex: 1;
  font-size: 9px;
  padding: 3px 6px;
  border: 1px solid #ddd;
  border-radius: 3px;
  background: #fff;
  color: #333;
  min-width: 0;
}

.infoPanelGroupingControls .groupingSelect:hover {
  border-color: #007acc;
}

.infoPanelGroupingControls .groupingSelect.disabled {
  background: #f5f5f5;
  color: #999;
  cursor: not-allowed;
}

/* Dockable Panel System */
.dockablePanel {
  position: absolute;
  z-index: 10;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  border-radius: 6px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.15);
  font-size: 11px;
  transition: all 0.2s ease;
  border: 1px solid rgba(0, 0, 0, 0.1);
}

.dockablePanel:hover {
  box-shadow: 0 4px 12px rgba(0,0,0,0.2);
}

.dockablePanelDragging {
  z-index: 1000;
  transform: rotate(2deg);
  box-shadow: 0 8px 20px rgba(0,0,0,0.3);
}

.dockablePanelCollapsed {
  /* Collapsed panels show only header */
  min-height: auto;
}

.dockablePanelDocked {
  /* Docked panels have stable positioning */
  cursor: default;
}

.dockablePanelFloating {
  cursor: move;
  border: 2px solid rgba(0, 120, 204, 0.3);
}

/* Dock positions */
.dockablePanelTopLeft {
  top: 20px;
  left: 10px;
}

.dockablePanelTopRight {
  top: 20px;
  right: 10px;
}

.dockablePanelBottomLeft {
  bottom: 20px;
  left: 10px;
}

.dockablePanelBottomRight {
  bottom: 20px;
  right: 10px;
}

/* Panel header */
.dockablePanelHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px;
  border-bottom: 1px solid #eee;
  cursor: grab;
  user-select: none;
}

.dockablePanelHeader:active {
  cursor: grabbing;
}

.dockablePanelTitle {
  margin: 0;
  font-size: 12px;
  font-weight: 600;
  color: #333;
}

.dockablePanelControls {
  display: flex;
  align-items: center;
  gap: 4px;
}

.dockablePanelToggle {
  background: none;
  border: none;
  cursor: pointer;
  font-size: 10px;
  color: #666;
  padding: 2px 4px;
  border-radius: 2px;
  transition: background-color 0.2s ease;
}

.dockablePanelToggle:hover {
  background-color: rgba(0, 0, 0, 0.1);
  color: #333;
}

.dockablePanelDragHandle {
  color: #999;
  font-size: 10px;
  cursor: grab;
  padding: 2px;
  line-height: 0.8;
  letter-spacing: -1px;
}

.dockablePanelDragHandle:hover {
  color: #666;
}

.dockablePanelDragHandle:active {
  cursor: grabbing;
}

/* Panel content */
.dockablePanelContent {
  padding: 8px;
  max-height: 300px;
  overflow-y: auto;
  min-width: 200px;
}

/* Dock zone overlay and indicators */
.dockZoneOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 999;
  pointer-events: none;
}

.dockZone {
  position: absolute;
  background: rgba(0, 120, 204, 0.2);
  border: 2px dashed rgba(0, 120, 204, 0.5);
  opacity: 0;
  transition: opacity 0.2s ease;
}

.dockZoneOverlay:hover .dockZone {
  opacity: 1;
}

.dockZoneTopLeft {
  top: 10px;
  left: 10px;
  width: 20%;
  height: 20%;
}

.dockZoneTopRight {
  top: 10px;
  right: 10px;
  width: 20%;
  height: 20%;
}

.dockZoneBottomLeft {
  bottom: 10px;
  left: 10px;
  width: 20%;
  height: 20%;
}

.dockZoneBottomRight {
  bottom: 10px;
  right: 10px;
  width: 20%;
  height: 20%;
}

/* Legacy styles for backward compatibility */
.unifiedLegend {
  /* Keep for components not yet converted */
  position: absolute;
  top: 20px;
  right: 10px;
  z-index: 10;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  padding: 8px;
  border-radius: 6px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.15);
  max-width: 220px;
  font-size: 11px;
}

.hierarchyTree {
  /* Keep for components not yet converted */
  position: absolute;
  bottom: 20px;
  right: 10px;
  z-index: 10;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  padding: 8px;
  border-radius: 6px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.15);
  max-width: 250px;
  max-height: 300px;
  overflow-y: auto;
  font-size: 11px;
}
