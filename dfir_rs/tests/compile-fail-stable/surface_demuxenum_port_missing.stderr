error[E0308]: mismatched types
  --> tests/compile-fail-stable/surface_demuxenum_port_missing.rs:17:15
   |
17 |         ]) -> demux_enum::<Shape>();
   |               ^^^^^^^^^^
   |               |
   |               expected a tuple with 3 elements, found one with 2 elements
   |               arguments to this function are incorrect
18 |         my_demux[Rectangle] -> for_each(std::mem::drop);
   |                                -------- one of the found opaque types
19 |         my_demux[Circle] -> for_each(std::mem::drop);
   |                             -------- one of the found opaque types
   |
   = note: expected tuple `(Pin<&mut _>, Pin<&mut _>, Pin<&mut _>)`
              found tuple `(Pin<&mut impl dfir_rs::futures::Sink<_, Error = Infallible>>, Pin<&mut impl dfir_rs::futures::Sink<_, Error = Infallible>>)`
help: the return type of this call is `(Pin<&mut impl dfir_rs::futures::Sink<_, Error = Infallible>>, Pin<&mut impl dfir_rs::futures::Sink<_, Error = Infallible>>)` due to the type of the argument passed
  --> tests/compile-fail-stable/surface_demuxenum_port_missing.rs:17:15
   |
17 |         ]) -> demux_enum::<Shape>();
   |               ^^^^^^^^^^ this argument influences the return type of `demux_enum_guard`
note: function defined here
  --> tests/compile-fail-stable/surface_demuxenum_port_missing.rs:17:15
   |
17 |         ]) -> demux_enum::<Shape>();
   |               ^^^^^^^^^^
